params => array (
  'tema' => false,
  'motivo' => 'Asistentes Personales',
  'origen' => 'Leonardo Rivero',
)
rs => false
models => NULL
params => array (
  'tema' => false,
  'motivo' => 'Asistentes Personales',
  'origen' => 'Leonardo Rivero',
)
rs => false
models => NULL
params => array (
  'tema' => false,
  'motivo' => 'Vtiger EMPRESA (corto)',
  'origen' => 'Leonardo Rivero',
)
rs => array (
  0 => '1406',
  'crmid' => '1406',
)
models => Parametrizaciones_Record_Model::__set_state(array(
   'module' => 
  Vtiger_Module_Model::__set_state(array(
     'blocks' => false,
     'nameFields' => false,
     'moduleMeta' => false,
     'fields' => false,
     'relations' => NULL,
     'id' => '63',
     'name' => 'Parametrizaciones',
     'label' => 'Parametrizaciones',
     'version' => '0',
     'minversion' => false,
     'maxversion' => false,
     'presence' => '0',
     'ownedby' => '0',
     'tabsequence' => '-1',
     'parent' => 'TOOLS',
     'customized' => '1',
     'trial' => '0',
     'isentitytype' => '1',
     'entityidcolumn' => false,
     'entityidfield' => false,
     'basetable' => false,
     'basetableid' => false,
     'customtable' => false,
     'grouptable' => false,
     'fieldtable' => false,
     'allowDuplicates' => '1',
     'isSyncable' => '0',
     'syncActionForDuplicate' => '1',
     'source' => 'custom',
  )),
   'valueMap' => 
  TrackableObject::__set_state(array(
     'storage' => 
    array (
      'pt_origen' => 'Leonardo rivero',
      'pt_tema' => 'Trabajadores',
      'pt_grupo' => '2',
      'pt_temavtiger' => '768',
      'CreatedTime' => '2022-12-06 11:39:32',
      'ModifiedTime' => '2022-12-06 17:43:41',
      'pt_motivo' => 'Vtiger EMPRESA (corto)',
      'tags' => '',
      'record_id' => '1406',
      'record_module' => 'Parametrizaciones',
      'id' => '1406',
    ),
     'trackingEnabled' => true,
     'tracking' => true,
     'changed' => 
    array (
      0 => 'id',
    ),
  )),
   'entity' => 
  Parametrizaciones::__set_state(array(
     'table_name' => 'vtiger_parametrizaciones',
     'table_index' => 'parametrizacionesid',
     'customFieldTable' => 
    array (
      0 => 'vtiger_parametrizacionescf',
      1 => 'parametrizacionesid',
    ),
     'tab_name' => 
    array (
      0 => 'vtiger_crmentity',
      1 => 'vtiger_parametrizaciones',
      2 => 'vtiger_parametrizacionescf',
      3 => 'vtiger_crmentity_user_field',
    ),
     'tab_name_index' => 
    array (
      'vtiger_crmentity' => 'crmid',
      'vtiger_parametrizaciones' => 'parametrizacionesid',
      'vtiger_parametrizacionescf' => 'parametrizacionesid',
      'vtiger_crmentity_user_field' => 'recordid',
    ),
     'list_fields' => 
    array (
      'parametrizacionesid' => 
      array (
        0 => 'parametrizaciones',
        1 => '<entitycolumn>',
      ),
      'Assigned To' => 
      array (
        0 => 'crmentity',
        1 => 'smownerid',
      ),
    ),
     'list_fields_name' => 
    array (
      'parametrizacionesid' => 'parametrizacionesid',
      'Assigned To' => 'assigned_user_id',
    ),
     'list_link_field' => 'parametrizacionesid',
     'search_fields' => 
    array (
      'parametrizacionesid' => 
      array (
        0 => 'parametrizaciones',
        1 => '<entitycolumn>',
      ),
      'Assigned To' => 
      array (
        0 => 'vtiger_crmentity',
        1 => 'assigned_user_id',
      ),
    ),
     'search_fields_name' => 
    array (
      'parametrizacionesid' => 'parametrizacionesid',
      'Assigned To' => 'assigned_user_id',
    ),
     'popup_fields' => 
    array (
      0 => 'parametrizacionesid',
    ),
     'def_basicsearch_col' => 'parametrizacionesid',
     'def_detailview_recname' => 'parametrizacionesid',
     'mandatory_fields' => 
    array (
      0 => 'parametrizacionesid',
      1 => 'assigned_user_id',
    ),
     'default_order_by' => 'parametrizacionesid',
     'default_sort_order' => 'ASC',
     'db' => 
    PearDatabase::__set_state(array(
       'database' => 
      ADODB_mysqli::__set_state(array(
         'databaseType' => 'mysqli',
         'dataProvider' => 'mysql',
         'hasInsertID' => true,
         'hasAffectedRows' => true,
         'metaTablesSQL' => 'SELECT
			TABLE_NAME,
			CASE WHEN TABLE_TYPE = \'VIEW\' THEN \'V\' ELSE \'T\' END
		FROM INFORMATION_SCHEMA.TABLES
		WHERE TABLE_SCHEMA=',
         'metaColumnsSQL' => 'SHOW COLUMNS FROM `%s`',
         'fmtTimeStamp' => '\'Y-m-d H:i:s\'',
         'hasLimit' => true,
         'hasMoveFirst' => true,
         'hasGenID' => true,
         'isoDates' => true,
         'sysDate' => 'CURDATE()',
         'sysTimeStamp' => 'NOW()',
         'hasTransactions' => true,
         'forceNewConnect' => false,
         'poorAffectedRows' => true,
         'clientFlags' => 0,
         'substr' => 'substring',
         'port' => '3306',
         'socket' => '',
         '_bindInputArray' => false,
         'nameQuote' => '`',
         'optionFlags' => 
        array (
          0 => 
          array (
            0 => 5,
            1 => 0,
          ),
          1 => 
          array (
            0 => 8,
            1 => true,
          ),
        ),
         'arrayClass' => 'ADORecordSet_array_mysqli',
         'multiQuery' => false,
         '_genIDSQL' => 'update %s set id=LAST_INSERT_ID(id+1);',
         '_genSeqSQL' => 'create table if not exists %s (id int not null)',
         '_genSeqCountSQL' => 'select count(*) from %s',
         '_genSeq2SQL' => 'insert into %s values (%s)',
         '_dropSeqSQL' => 'drop table if exists %s',
         'database' => 'bps2',
         'host' => 'localhost',
         'user' => 'root',
         'password' => '',
         'debug' => false,
         'maxblobsize' => 262144,
         'concat_operator' => '+',
         'length' => 'length',
         'random' => 'rand()',
         'upperCase' => 'upper',
         'fmtDate' => '\'Y-m-d\'',
         'true' => '1',
         'false' => '0',
         'replaceQuote' => '\\\'',
         'charSet' => false,
         'metaDatabasesSQL' => '',
         'uniqueOrderBy' => false,
         'emptyDate' => '&nbsp;',
         'emptyTimeStamp' => '&nbsp;',
         'lastInsID' => false,
         'hasTop' => false,
         'readOnly' => false,
         'genID' => 0,
         'raiseErrorFn' => false,
         'cacheSecs' => 3600,
         'memCache' => false,
         'memCacheHost' => NULL,
         'memCachePort' => 11211,
         'memCacheCompress' => false,
         'sysUTimeStamp' => false,
         'noNullStrings' => false,
         'numCacheHits' => 0,
         'numCacheMisses' => 0,
         'pageExecuteCountRows' => true,
         'uniqueSort' => false,
         'leftOuter' => false,
         'rightOuter' => false,
         'ansiOuter' => false,
         'autoRollback' => false,
         'fnExecute' => false,
         'fnCacheExecute' => false,
         'blobEncodeType' => false,
         'rsPrefix' => 'ADORecordSet_',
         'autoCommit' => true,
         'transOff' => 0,
         'transCnt' => 0,
         'fetchMode' => false,
         'null2null' => 'null',
         'bulkBind' => false,
         '_oldRaiseFn' => false,
         '_transOK' => NULL,
         '_connectionID' => 
        mysqli::__set_state(array(
           'affected_rows' => NULL,
           'client_info' => NULL,
           'client_version' => NULL,
           'connect_errno' => NULL,
           'connect_error' => NULL,
           'errno' => NULL,
           'error' => NULL,
           'error_list' => NULL,
           'field_count' => NULL,
           'host_info' => NULL,
           'info' => NULL,
           'insert_id' => NULL,
           'server_info' => NULL,
           'server_version' => NULL,
           'sqlstate' => NULL,
           'protocol_version' => NULL,
           'thread_id' => NULL,
           'warning_count' => NULL,
        )),
         '_errorMsg' => false,
         '_errorCode' => false,
         '_queryID' => 
        mysqli_result::__set_state(array(
           'current_field' => NULL,
           'field_count' => NULL,
           'lengths' => NULL,
           'num_rows' => NULL,
           'type' => NULL,
        )),
         '_isPersistentConnection' => true,
         '_evalAll' => false,
         '_affected' => false,
         '_logsql' => false,
         '_transmode' => '',
         'connectionParameters' => 
        array (
        ),
         'databaseName' => 'bps2',
      )),
       'dieOnError' => false,
       'dbType' => 'mysqli',
       'dbHostName' => 'localhost:3306',
       'dbName' => 'bps2',
       'dbOptions' => 
      array (
        'persistent' => true,
        'autofree' => false,
        'debug' => 0,
        'seqname_format' => '%s_seq',
        'portability' => 0,
        'ssl' => false,
      ),
       'userName' => 'root',
       'userPassword' => '',
       'query_time' => 0,
       'log' => 
      Logger::__set_state(array(
         'additive' => true,
         'fqcn' => 'Logger',
         'level' => NULL,
         'name' => 'PearDatabase_',
         'parent' => 
        LoggerRoot::__set_state(array(
           'additive' => true,
           'fqcn' => 'Logger',
           'level' => 
          LoggerLevel::__set_state(array(
             'level' => 10000,
             'levelStr' => 'DEBUG',
             'syslogEquivalent' => 6,
          )),
           'name' => 'root',
           'parent' => NULL,
           'appenders' => 
          array (
            'A1' => 
            LoggerAppenderRollingFile::__set_state(array(
               'maxFileSize' => 10485760,
               'maxBackupIndex' => 10,
               'compress' => false,
               'clearConditional' => true,
               'locking' => true,
               'append' => true,
               'file' => 'logs/vtigercrm.log',
               'fp' => NULL,
               'closed' => false,
               'filter' => NULL,
               'layout' => 
              LoggerLayoutPattern::__set_state(array(
                 'pattern' => '%date %-5level %logger %message%newline',
                 'converterMap' => 
                array (
                  'c' => 'LoggerPatternConverterLogger',
                  'lo' => 'LoggerPatternConverterLogger',
                  'logger' => 'LoggerPatternConverterLogger',
                  'C' => 'LoggerPatternConverterClass',
                  'class' => 'LoggerPatternConverterClass',
                  'cookie' => 'LoggerPatternConverterCookie',
                  'd' => 'LoggerPatternConverterDate',
                  'date' => 'LoggerPatternConverterDate',
                  'e' => 'LoggerPatternConverterEnvironment',
                  'env' => 'LoggerPatternConverterEnvironment',
                  'ex' => 'LoggerPatternConverterThrowable',
                  'exception' => 'LoggerPatternConverterThrowable',
                  'throwable' => 'LoggerPatternConverterThrowable',
                  'F' => 'LoggerPatternConverterFile',
                  'file' => 'LoggerPatternConverterFile',
                  'l' => 'LoggerPatternConverterLocation',
                  'location' => 'LoggerPatternConverterLocation',
                  'L' => 'LoggerPatternConverterLine',
                  'line' => 'LoggerPatternConverterLine',
                  'm' => 'LoggerPatternConverterMessage',
                  'msg' => 'LoggerPatternConverterMessage',
                  'message' => 'LoggerPatternConverterMessage',
                  'M' => 'LoggerPatternConverterMethod',
                  'method' => 'LoggerPatternConverterMethod',
                  'n' => 'LoggerPatternConverterNewLine',
                  'newline' => 'LoggerPatternConverterNewLine',
                  'p' => 'LoggerPatternConverterLevel',
                  'le' => 'LoggerPatternConverterLevel',
                  'level' => 'LoggerPatternConverterLevel',
                  'r' => 'LoggerPatternConverterRelative',
                  'relative' => 'LoggerPatternConverterRelative',
                  'req' => 'LoggerPatternConverterRequest',
                  'request' => 'LoggerPatternConverterRequest',
                  's' => 'LoggerPatternConverterServer',
                  'server' => 'LoggerPatternConverterServer',
                  'ses' => 'LoggerPatternConverterSession',
                  'session' => 'LoggerPatternConverterSession',
                  'sid' => 'LoggerPatternConverterSessionID',
                  'sessionid' => 'LoggerPatternConverterSessionID',
                  't' => 'LoggerPatternConverterProcess',
                  'pid' => 'LoggerPatternConverterProcess',
                  'process' => 'LoggerPatternConverterProcess',
                  'x' => 'LoggerPatternConverterNDC',
                  'ndc' => 'LoggerPatternConverterNDC',
                  'X' => 'LoggerPatternConverterMDC',
                  'mdc' => 'LoggerPatternConverterMDC',
                ),
                 'head' => 
                LoggerPatternConverterDate::__set_state(array(
                   'format' => 'c',
                   'specials' => 
                  array (
                    'ISO8601' => 'c',
                    'ABSOLUTE' => 'H:i:s',
                    'DATE' => 'd M Y H:i:s.u',
                  ),
                   'useLocalDate' => false,
                   'next' => 
                  LoggerPatternConverterLiteral::__set_state(array(
                     'literalValue' => ' ',
                     'next' => 
                    LoggerPatternConverterLevel::__set_state(array(
                       'next' => 
                      LoggerPatternConverterLiteral::__set_state(array(
                         'literalValue' => ' ',
                         'next' => 
                        LoggerPatternConverterLogger::__set_state(array(
                           'length' => NULL,
                           'cache' => 
                          array (
                            'VT' => 'VT',
                            'user' => 'user',
                          ),
                           'next' => 
                          LoggerPatternConverterLiteral::__set_state(array(
                             'literalValue' => ' ',
                             'next' => 
                            LoggerPatternConverterMessage::__set_state(array(
                               'next' => 
                              LoggerPatternConverterNewLine::__set_state(array(
                                 'next' => NULL,
                                 'formattingInfo' => 
                                LoggerFormattingInfo::__set_state(array(
                                   'min' => 0,
                                   'max' => 9223372036854775807,
                                   'padLeft' => true,
                                   'trimLeft' => false,
                                )),
                                 'option' => '',
                              )),
                               'formattingInfo' => 
                              LoggerFormattingInfo::__set_state(array(
                                 'min' => 0,
                                 'max' => 9223372036854775807,
                                 'padLeft' => true,
                                 'trimLeft' => false,
                              )),
                               'option' => '',
                            )),
                             'formattingInfo' => NULL,
                             'option' => NULL,
                          )),
                           'formattingInfo' => 
                          LoggerFormattingInfo::__set_state(array(
                             'min' => 0,
                             'max' => 9223372036854775807,
                             'padLeft' => true,
                             'trimLeft' => false,
                          )),
                           'option' => '',
                        )),
                         'formattingInfo' => NULL,
                         'option' => NULL,
                      )),
                       'formattingInfo' => 
                      LoggerFormattingInfo::__set_state(array(
                         'min' => 5,
                         'max' => 9223372036854775807,
                         'padLeft' => false,
                         'trimLeft' => false,
                      )),
                       'option' => '',
                    )),
                     'formattingInfo' => NULL,
                     'option' => NULL,
                  )),
                   'formattingInfo' => 
                  LoggerFormattingInfo::__set_state(array(
                     'min' => 0,
                     'max' => 9223372036854775807,
                     'padLeft' => true,
                     'trimLeft' => false,
                  )),
                   'option' => '',
                )),
              )),
               'name' => 'A1',
               'threshold' => NULL,
               'requiresLayout' => true,
            )),
          ),
        )),
         'appenders' => 
        array (
        ),
      )),
       'lastmysqlrow' => -1,
       'enableSQLlog' => false,
       'continueInstallOnError' => true,
       'avoidPreparedSql' => false,
       'isdb_default_utf8_charset' => true,
       'req_flist' => NULL,
       'logSqlTimingID' => false,
    )),
     'log' => 
    Logger::__set_state(array(
       'additive' => true,
       'fqcn' => 'Logger',
       'level' => NULL,
       'name' => 'VT',
       'parent' => 
      LoggerRoot::__set_state(array(
         'additive' => true,
         'fqcn' => 'Logger',
         'level' => 
        LoggerLevel::__set_state(array(
           'level' => 10000,
           'levelStr' => 'DEBUG',
           'syslogEquivalent' => 6,
        )),
         'name' => 'root',
         'parent' => NULL,
         'appenders' => 
        array (
          'A1' => 
          LoggerAppenderRollingFile::__set_state(array(
             'maxFileSize' => 10485760,
             'maxBackupIndex' => 10,
             'compress' => false,
             'clearConditional' => true,
             'locking' => true,
             'append' => true,
             'file' => 'logs/vtigercrm.log',
             'fp' => NULL,
             'closed' => false,
             'filter' => NULL,
             'layout' => 
            LoggerLayoutPattern::__set_state(array(
               'pattern' => '%date %-5level %logger %message%newline',
               'converterMap' => 
              array (
                'c' => 'LoggerPatternConverterLogger',
                'lo' => 'LoggerPatternConverterLogger',
                'logger' => 'LoggerPatternConverterLogger',
                'C' => 'LoggerPatternConverterClass',
                'class' => 'LoggerPatternConverterClass',
                'cookie' => 'LoggerPatternConverterCookie',
                'd' => 'LoggerPatternConverterDate',
                'date' => 'LoggerPatternConverterDate',
                'e' => 'LoggerPatternConverterEnvironment',
                'env' => 'LoggerPatternConverterEnvironment',
                'ex' => 'LoggerPatternConverterThrowable',
                'exception' => 'LoggerPatternConverterThrowable',
                'throwable' => 'LoggerPatternConverterThrowable',
                'F' => 'LoggerPatternConverterFile',
                'file' => 'LoggerPatternConverterFile',
                'l' => 'LoggerPatternConverterLocation',
                'location' => 'LoggerPatternConverterLocation',
                'L' => 'LoggerPatternConverterLine',
                'line' => 'LoggerPatternConverterLine',
                'm' => 'LoggerPatternConverterMessage',
                'msg' => 'LoggerPatternConverterMessage',
                'message' => 'LoggerPatternConverterMessage',
                'M' => 'LoggerPatternConverterMethod',
                'method' => 'LoggerPatternConverterMethod',
                'n' => 'LoggerPatternConverterNewLine',
                'newline' => 'LoggerPatternConverterNewLine',
                'p' => 'LoggerPatternConverterLevel',
                'le' => 'LoggerPatternConverterLevel',
                'level' => 'LoggerPatternConverterLevel',
                'r' => 'LoggerPatternConverterRelative',
                'relative' => 'LoggerPatternConverterRelative',
                'req' => 'LoggerPatternConverterRequest',
                'request' => 'LoggerPatternConverterRequest',
                's' => 'LoggerPatternConverterServer',
                'server' => 'LoggerPatternConverterServer',
                'ses' => 'LoggerPatternConverterSession',
                'session' => 'LoggerPatternConverterSession',
                'sid' => 'LoggerPatternConverterSessionID',
                'sessionid' => 'LoggerPatternConverterSessionID',
                't' => 'LoggerPatternConverterProcess',
                'pid' => 'LoggerPatternConverterProcess',
                'process' => 'LoggerPatternConverterProcess',
                'x' => 'LoggerPatternConverterNDC',
                'ndc' => 'LoggerPatternConverterNDC',
                'X' => 'LoggerPatternConverterMDC',
                'mdc' => 'LoggerPatternConverterMDC',
              ),
               'head' => 
              LoggerPatternConverterDate::__set_state(array(
                 'format' => 'c',
                 'specials' => 
                array (
                  'ISO8601' => 'c',
                  'ABSOLUTE' => 'H:i:s',
                  'DATE' => 'd M Y H:i:s.u',
                ),
                 'useLocalDate' => false,
                 'next' => 
                LoggerPatternConverterLiteral::__set_state(array(
                   'literalValue' => ' ',
                   'next' => 
                  LoggerPatternConverterLevel::__set_state(array(
                     'next' => 
                    LoggerPatternConverterLiteral::__set_state(array(
                       'literalValue' => ' ',
                       'next' => 
                      LoggerPatternConverterLogger::__set_state(array(
                         'length' => NULL,
                         'cache' => 
                        array (
                          'VT' => 'VT',
                          'user' => 'user',
                        ),
                         'next' => 
                        LoggerPatternConverterLiteral::__set_state(array(
                           'literalValue' => ' ',
                           'next' => 
                          LoggerPatternConverterMessage::__set_state(array(
                             'next' => 
                            LoggerPatternConverterNewLine::__set_state(array(
                               'next' => NULL,
                               'formattingInfo' => 
                              LoggerFormattingInfo::__set_state(array(
                                 'min' => 0,
                                 'max' => 9223372036854775807,
                                 'padLeft' => true,
                                 'trimLeft' => false,
                              )),
                               'option' => '',
                            )),
                             'formattingInfo' => 
                            LoggerFormattingInfo::__set_state(array(
                               'min' => 0,
                               'max' => 9223372036854775807,
                               'padLeft' => true,
                               'trimLeft' => false,
                            )),
                             'option' => '',
                          )),
                           'formattingInfo' => NULL,
                           'option' => NULL,
                        )),
                         'formattingInfo' => 
                        LoggerFormattingInfo::__set_state(array(
                           'min' => 0,
                           'max' => 9223372036854775807,
                           'padLeft' => true,
                           'trimLeft' => false,
                        )),
                         'option' => '',
                      )),
                       'formattingInfo' => NULL,
                       'option' => NULL,
                    )),
                     'formattingInfo' => 
                    LoggerFormattingInfo::__set_state(array(
                       'min' => 5,
                       'max' => 9223372036854775807,
                       'padLeft' => false,
                       'trimLeft' => false,
                    )),
                     'option' => '',
                  )),
                   'formattingInfo' => NULL,
                   'option' => NULL,
                )),
                 'formattingInfo' => 
                LoggerFormattingInfo::__set_state(array(
                   'min' => 0,
                   'max' => 9223372036854775807,
                   'padLeft' => true,
                   'trimLeft' => false,
                )),
                 'option' => '',
              )),
            )),
             'name' => 'A1',
             'threshold' => NULL,
             'requiresLayout' => true,
          )),
        ),
      )),
       'appenders' => 
      array (
      ),
    )),
     'column_fields' => 
    TrackableObject::__set_state(array(
       'storage' => 
      array (
        'pt_origen' => 'Leonardo rivero',
        'pt_tema' => 'Trabajadores',
        'pt_grupo' => '2',
        'pt_temavtiger' => '768',
        'CreatedTime' => '2022-12-06 11:39:32',
        'ModifiedTime' => '2022-12-06 17:43:41',
        'pt_motivo' => 'Vtiger EMPRESA (corto)',
        'tags' => '',
        'record_id' => '1406',
        'record_module' => 'Parametrizaciones',
        'id' => '1406',
      ),
       'trackingEnabled' => true,
       'tracking' => true,
       'changed' => 
      array (
        0 => 'id',
      ),
    )),
     'IsCustomModule' => true,
     'sortby_fields' => 
    array (
    ),
     'required_fields' => 
    array (
      'assigned_user_id' => 1,
    ),
     'special_functions' => 
    array (
      0 => 'set_import_assigned_user',
    ),
     'ownedby' => NULL,
     'recordSource' => 'CRM',
     '__inactive_fields_filtered' => false,
     'moduleName' => 'Parametrizaciones',
     'id' => '1406',
  )),
))
params => array (
  'tema' => false,
  'motivo' => 'Vtiger EMPRESA (corto)',
  'origen' => 'Leonardo Rivero',
)
rs => array (
  0 => '1406',
  'crmid' => '1406',
)
models => Parametrizaciones_Record_Model::__set_state(array(
   'module' => 
  Vtiger_Module_Model::__set_state(array(
     'blocks' => false,
     'nameFields' => false,
     'moduleMeta' => false,
     'fields' => false,
     'relations' => NULL,
     'id' => '63',
     'name' => 'Parametrizaciones',
     'label' => 'Parametrizaciones',
     'version' => '0',
     'minversion' => false,
     'maxversion' => false,
     'presence' => '0',
     'ownedby' => '0',
     'tabsequence' => '-1',
     'parent' => 'TOOLS',
     'customized' => '1',
     'trial' => '0',
     'isentitytype' => '1',
     'entityidcolumn' => false,
     'entityidfield' => false,
     'basetable' => false,
     'basetableid' => false,
     'customtable' => false,
     'grouptable' => false,
     'fieldtable' => false,
     'allowDuplicates' => '1',
     'isSyncable' => '0',
     'syncActionForDuplicate' => '1',
     'source' => 'custom',
  )),
   'valueMap' => 
  TrackableObject::__set_state(array(
     'storage' => 
    array (
      'pt_origen' => 'Leonardo rivero',
      'pt_tema' => 'Trabajadores',
      'pt_grupo' => '2',
      'pt_temavtiger' => '768',
      'CreatedTime' => '2022-12-06 11:39:32',
      'ModifiedTime' => '2022-12-06 17:43:41',
      'pt_motivo' => 'Vtiger EMPRESA (corto)',
      'tags' => '',
      'record_id' => '1406',
      'record_module' => 'Parametrizaciones',
      'id' => '1406',
    ),
     'trackingEnabled' => true,
     'tracking' => true,
     'changed' => 
    array (
      0 => 'id',
    ),
  )),
   'entity' => 
  Parametrizaciones::__set_state(array(
     'table_name' => 'vtiger_parametrizaciones',
     'table_index' => 'parametrizacionesid',
     'customFieldTable' => 
    array (
      0 => 'vtiger_parametrizacionescf',
      1 => 'parametrizacionesid',
    ),
     'tab_name' => 
    array (
      0 => 'vtiger_crmentity',
      1 => 'vtiger_parametrizaciones',
      2 => 'vtiger_parametrizacionescf',
      3 => 'vtiger_crmentity_user_field',
    ),
     'tab_name_index' => 
    array (
      'vtiger_crmentity' => 'crmid',
      'vtiger_parametrizaciones' => 'parametrizacionesid',
      'vtiger_parametrizacionescf' => 'parametrizacionesid',
      'vtiger_crmentity_user_field' => 'recordid',
    ),
     'list_fields' => 
    array (
      'parametrizacionesid' => 
      array (
        0 => 'parametrizaciones',
        1 => '<entitycolumn>',
      ),
      'Assigned To' => 
      array (
        0 => 'crmentity',
        1 => 'smownerid',
      ),
    ),
     'list_fields_name' => 
    array (
      'parametrizacionesid' => 'parametrizacionesid',
      'Assigned To' => 'assigned_user_id',
    ),
     'list_link_field' => 'parametrizacionesid',
     'search_fields' => 
    array (
      'parametrizacionesid' => 
      array (
        0 => 'parametrizaciones',
        1 => '<entitycolumn>',
      ),
      'Assigned To' => 
      array (
        0 => 'vtiger_crmentity',
        1 => 'assigned_user_id',
      ),
    ),
     'search_fields_name' => 
    array (
      'parametrizacionesid' => 'parametrizacionesid',
      'Assigned To' => 'assigned_user_id',
    ),
     'popup_fields' => 
    array (
      0 => 'parametrizacionesid',
    ),
     'def_basicsearch_col' => 'parametrizacionesid',
     'def_detailview_recname' => 'parametrizacionesid',
     'mandatory_fields' => 
    array (
      0 => 'parametrizacionesid',
      1 => 'assigned_user_id',
    ),
     'default_order_by' => 'parametrizacionesid',
     'default_sort_order' => 'ASC',
     'db' => 
    PearDatabase::__set_state(array(
       'database' => 
      ADODB_mysqli::__set_state(array(
         'databaseType' => 'mysqli',
         'dataProvider' => 'mysql',
         'hasInsertID' => true,
         'hasAffectedRows' => true,
         'metaTablesSQL' => 'SELECT
			TABLE_NAME,
			CASE WHEN TABLE_TYPE = \'VIEW\' THEN \'V\' ELSE \'T\' END
		FROM INFORMATION_SCHEMA.TABLES
		WHERE TABLE_SCHEMA=',
         'metaColumnsSQL' => 'SHOW COLUMNS FROM `%s`',
         'fmtTimeStamp' => '\'Y-m-d H:i:s\'',
         'hasLimit' => true,
         'hasMoveFirst' => true,
         'hasGenID' => true,
         'isoDates' => true,
         'sysDate' => 'CURDATE()',
         'sysTimeStamp' => 'NOW()',
         'hasTransactions' => true,
         'forceNewConnect' => false,
         'poorAffectedRows' => true,
         'clientFlags' => 0,
         'substr' => 'substring',
         'port' => '3306',
         'socket' => '',
         '_bindInputArray' => false,
         'nameQuote' => '`',
         'optionFlags' => 
        array (
          0 => 
          array (
            0 => 5,
            1 => 0,
          ),
          1 => 
          array (
            0 => 8,
            1 => true,
          ),
        ),
         'arrayClass' => 'ADORecordSet_array_mysqli',
         'multiQuery' => false,
         '_genIDSQL' => 'update %s set id=LAST_INSERT_ID(id+1);',
         '_genSeqSQL' => 'create table if not exists %s (id int not null)',
         '_genSeqCountSQL' => 'select count(*) from %s',
         '_genSeq2SQL' => 'insert into %s values (%s)',
         '_dropSeqSQL' => 'drop table if exists %s',
         'database' => 'bps2',
         'host' => 'localhost',
         'user' => 'root',
         'password' => '',
         'debug' => false,
         'maxblobsize' => 262144,
         'concat_operator' => '+',
         'length' => 'length',
         'random' => 'rand()',
         'upperCase' => 'upper',
         'fmtDate' => '\'Y-m-d\'',
         'true' => '1',
         'false' => '0',
         'replaceQuote' => '\\\'',
         'charSet' => false,
         'metaDatabasesSQL' => '',
         'uniqueOrderBy' => false,
         'emptyDate' => '&nbsp;',
         'emptyTimeStamp' => '&nbsp;',
         'lastInsID' => false,
         'hasTop' => false,
         'readOnly' => false,
         'genID' => 0,
         'raiseErrorFn' => false,
         'cacheSecs' => 3600,
         'memCache' => false,
         'memCacheHost' => NULL,
         'memCachePort' => 11211,
         'memCacheCompress' => false,
         'sysUTimeStamp' => false,
         'noNullStrings' => false,
         'numCacheHits' => 0,
         'numCacheMisses' => 0,
         'pageExecuteCountRows' => true,
         'uniqueSort' => false,
         'leftOuter' => false,
         'rightOuter' => false,
         'ansiOuter' => false,
         'autoRollback' => false,
         'fnExecute' => false,
         'fnCacheExecute' => false,
         'blobEncodeType' => false,
         'rsPrefix' => 'ADORecordSet_',
         'autoCommit' => true,
         'transOff' => 0,
         'transCnt' => 0,
         'fetchMode' => false,
         'null2null' => 'null',
         'bulkBind' => false,
         '_oldRaiseFn' => false,
         '_transOK' => NULL,
         '_connectionID' => 
        mysqli::__set_state(array(
           'affected_rows' => NULL,
           'client_info' => NULL,
           'client_version' => NULL,
           'connect_errno' => NULL,
           'connect_error' => NULL,
           'errno' => NULL,
           'error' => NULL,
           'error_list' => NULL,
           'field_count' => NULL,
           'host_info' => NULL,
           'info' => NULL,
           'insert_id' => NULL,
           'server_info' => NULL,
           'server_version' => NULL,
           'sqlstate' => NULL,
           'protocol_version' => NULL,
           'thread_id' => NULL,
           'warning_count' => NULL,
        )),
         '_errorMsg' => false,
         '_errorCode' => false,
         '_queryID' => 
        mysqli_result::__set_state(array(
           'current_field' => NULL,
           'field_count' => NULL,
           'lengths' => NULL,
           'num_rows' => NULL,
           'type' => NULL,
        )),
         '_isPersistentConnection' => true,
         '_evalAll' => false,
         '_affected' => false,
         '_logsql' => false,
         '_transmode' => '',
         'connectionParameters' => 
        array (
        ),
         'databaseName' => 'bps2',
      )),
       'dieOnError' => false,
       'dbType' => 'mysqli',
       'dbHostName' => 'localhost:3306',
       'dbName' => 'bps2',
       'dbOptions' => 
      array (
        'persistent' => true,
        'autofree' => false,
        'debug' => 0,
        'seqname_format' => '%s_seq',
        'portability' => 0,
        'ssl' => false,
      ),
       'userName' => 'root',
       'userPassword' => '',
       'query_time' => 0,
       'log' => 
      Logger::__set_state(array(
         'additive' => true,
         'fqcn' => 'Logger',
         'level' => NULL,
         'name' => 'PearDatabase_',
         'parent' => 
        LoggerRoot::__set_state(array(
           'additive' => true,
           'fqcn' => 'Logger',
           'level' => 
          LoggerLevel::__set_state(array(
             'level' => 10000,
             'levelStr' => 'DEBUG',
             'syslogEquivalent' => 6,
          )),
           'name' => 'root',
           'parent' => NULL,
           'appenders' => 
          array (
            'A1' => 
            LoggerAppenderRollingFile::__set_state(array(
               'maxFileSize' => 10485760,
               'maxBackupIndex' => 10,
               'compress' => false,
               'clearConditional' => true,
               'locking' => true,
               'append' => true,
               'file' => 'logs/vtigercrm.log',
               'fp' => NULL,
               'closed' => false,
               'filter' => NULL,
               'layout' => 
              LoggerLayoutPattern::__set_state(array(
                 'pattern' => '%date %-5level %logger %message%newline',
                 'converterMap' => 
                array (
                  'c' => 'LoggerPatternConverterLogger',
                  'lo' => 'LoggerPatternConverterLogger',
                  'logger' => 'LoggerPatternConverterLogger',
                  'C' => 'LoggerPatternConverterClass',
                  'class' => 'LoggerPatternConverterClass',
                  'cookie' => 'LoggerPatternConverterCookie',
                  'd' => 'LoggerPatternConverterDate',
                  'date' => 'LoggerPatternConverterDate',
                  'e' => 'LoggerPatternConverterEnvironment',
                  'env' => 'LoggerPatternConverterEnvironment',
                  'ex' => 'LoggerPatternConverterThrowable',
                  'exception' => 'LoggerPatternConverterThrowable',
                  'throwable' => 'LoggerPatternConverterThrowable',
                  'F' => 'LoggerPatternConverterFile',
                  'file' => 'LoggerPatternConverterFile',
                  'l' => 'LoggerPatternConverterLocation',
                  'location' => 'LoggerPatternConverterLocation',
                  'L' => 'LoggerPatternConverterLine',
                  'line' => 'LoggerPatternConverterLine',
                  'm' => 'LoggerPatternConverterMessage',
                  'msg' => 'LoggerPatternConverterMessage',
                  'message' => 'LoggerPatternConverterMessage',
                  'M' => 'LoggerPatternConverterMethod',
                  'method' => 'LoggerPatternConverterMethod',
                  'n' => 'LoggerPatternConverterNewLine',
                  'newline' => 'LoggerPatternConverterNewLine',
                  'p' => 'LoggerPatternConverterLevel',
                  'le' => 'LoggerPatternConverterLevel',
                  'level' => 'LoggerPatternConverterLevel',
                  'r' => 'LoggerPatternConverterRelative',
                  'relative' => 'LoggerPatternConverterRelative',
                  'req' => 'LoggerPatternConverterRequest',
                  'request' => 'LoggerPatternConverterRequest',
                  's' => 'LoggerPatternConverterServer',
                  'server' => 'LoggerPatternConverterServer',
                  'ses' => 'LoggerPatternConverterSession',
                  'session' => 'LoggerPatternConverterSession',
                  'sid' => 'LoggerPatternConverterSessionID',
                  'sessionid' => 'LoggerPatternConverterSessionID',
                  't' => 'LoggerPatternConverterProcess',
                  'pid' => 'LoggerPatternConverterProcess',
                  'process' => 'LoggerPatternConverterProcess',
                  'x' => 'LoggerPatternConverterNDC',
                  'ndc' => 'LoggerPatternConverterNDC',
                  'X' => 'LoggerPatternConverterMDC',
                  'mdc' => 'LoggerPatternConverterMDC',
                ),
                 'head' => 
                LoggerPatternConverterDate::__set_state(array(
                   'format' => 'c',
                   'specials' => 
                  array (
                    'ISO8601' => 'c',
                    'ABSOLUTE' => 'H:i:s',
                    'DATE' => 'd M Y H:i:s.u',
                  ),
                   'useLocalDate' => false,
                   'next' => 
                  LoggerPatternConverterLiteral::__set_state(array(
                     'literalValue' => ' ',
                     'next' => 
                    LoggerPatternConverterLevel::__set_state(array(
                       'next' => 
                      LoggerPatternConverterLiteral::__set_state(array(
                         'literalValue' => ' ',
                         'next' => 
                        LoggerPatternConverterLogger::__set_state(array(
                           'length' => NULL,
                           'cache' => 
                          array (
                            'VT' => 'VT',
                            'user' => 'user',
                          ),
                           'next' => 
                          LoggerPatternConverterLiteral::__set_state(array(
                             'literalValue' => ' ',
                             'next' => 
                            LoggerPatternConverterMessage::__set_state(array(
                               'next' => 
                              LoggerPatternConverterNewLine::__set_state(array(
                                 'next' => NULL,
                                 'formattingInfo' => 
                                LoggerFormattingInfo::__set_state(array(
                                   'min' => 0,
                                   'max' => 9223372036854775807,
                                   'padLeft' => true,
                                   'trimLeft' => false,
                                )),
                                 'option' => '',
                              )),
                               'formattingInfo' => 
                              LoggerFormattingInfo::__set_state(array(
                                 'min' => 0,
                                 'max' => 9223372036854775807,
                                 'padLeft' => true,
                                 'trimLeft' => false,
                              )),
                               'option' => '',
                            )),
                             'formattingInfo' => NULL,
                             'option' => NULL,
                          )),
                           'formattingInfo' => 
                          LoggerFormattingInfo::__set_state(array(
                             'min' => 0,
                             'max' => 9223372036854775807,
                             'padLeft' => true,
                             'trimLeft' => false,
                          )),
                           'option' => '',
                        )),
                         'formattingInfo' => NULL,
                         'option' => NULL,
                      )),
                       'formattingInfo' => 
                      LoggerFormattingInfo::__set_state(array(
                         'min' => 5,
                         'max' => 9223372036854775807,
                         'padLeft' => false,
                         'trimLeft' => false,
                      )),
                       'option' => '',
                    )),
                     'formattingInfo' => NULL,
                     'option' => NULL,
                  )),
                   'formattingInfo' => 
                  LoggerFormattingInfo::__set_state(array(
                     'min' => 0,
                     'max' => 9223372036854775807,
                     'padLeft' => true,
                     'trimLeft' => false,
                  )),
                   'option' => '',
                )),
              )),
               'name' => 'A1',
               'threshold' => NULL,
               'requiresLayout' => true,
            )),
          ),
        )),
         'appenders' => 
        array (
        ),
      )),
       'lastmysqlrow' => -1,
       'enableSQLlog' => false,
       'continueInstallOnError' => true,
       'avoidPreparedSql' => false,
       'isdb_default_utf8_charset' => true,
       'req_flist' => NULL,
       'logSqlTimingID' => false,
    )),
     'log' => 
    Logger::__set_state(array(
       'additive' => true,
       'fqcn' => 'Logger',
       'level' => NULL,
       'name' => 'VT',
       'parent' => 
      LoggerRoot::__set_state(array(
         'additive' => true,
         'fqcn' => 'Logger',
         'level' => 
        LoggerLevel::__set_state(array(
           'level' => 10000,
           'levelStr' => 'DEBUG',
           'syslogEquivalent' => 6,
        )),
         'name' => 'root',
         'parent' => NULL,
         'appenders' => 
        array (
          'A1' => 
          LoggerAppenderRollingFile::__set_state(array(
             'maxFileSize' => 10485760,
             'maxBackupIndex' => 10,
             'compress' => false,
             'clearConditional' => true,
             'locking' => true,
             'append' => true,
             'file' => 'logs/vtigercrm.log',
             'fp' => NULL,
             'closed' => false,
             'filter' => NULL,
             'layout' => 
            LoggerLayoutPattern::__set_state(array(
               'pattern' => '%date %-5level %logger %message%newline',
               'converterMap' => 
              array (
                'c' => 'LoggerPatternConverterLogger',
                'lo' => 'LoggerPatternConverterLogger',
                'logger' => 'LoggerPatternConverterLogger',
                'C' => 'LoggerPatternConverterClass',
                'class' => 'LoggerPatternConverterClass',
                'cookie' => 'LoggerPatternConverterCookie',
                'd' => 'LoggerPatternConverterDate',
                'date' => 'LoggerPatternConverterDate',
                'e' => 'LoggerPatternConverterEnvironment',
                'env' => 'LoggerPatternConverterEnvironment',
                'ex' => 'LoggerPatternConverterThrowable',
                'exception' => 'LoggerPatternConverterThrowable',
                'throwable' => 'LoggerPatternConverterThrowable',
                'F' => 'LoggerPatternConverterFile',
                'file' => 'LoggerPatternConverterFile',
                'l' => 'LoggerPatternConverterLocation',
                'location' => 'LoggerPatternConverterLocation',
                'L' => 'LoggerPatternConverterLine',
                'line' => 'LoggerPatternConverterLine',
                'm' => 'LoggerPatternConverterMessage',
                'msg' => 'LoggerPatternConverterMessage',
                'message' => 'LoggerPatternConverterMessage',
                'M' => 'LoggerPatternConverterMethod',
                'method' => 'LoggerPatternConverterMethod',
                'n' => 'LoggerPatternConverterNewLine',
                'newline' => 'LoggerPatternConverterNewLine',
                'p' => 'LoggerPatternConverterLevel',
                'le' => 'LoggerPatternConverterLevel',
                'level' => 'LoggerPatternConverterLevel',
                'r' => 'LoggerPatternConverterRelative',
                'relative' => 'LoggerPatternConverterRelative',
                'req' => 'LoggerPatternConverterRequest',
                'request' => 'LoggerPatternConverterRequest',
                's' => 'LoggerPatternConverterServer',
                'server' => 'LoggerPatternConverterServer',
                'ses' => 'LoggerPatternConverterSession',
                'session' => 'LoggerPatternConverterSession',
                'sid' => 'LoggerPatternConverterSessionID',
                'sessionid' => 'LoggerPatternConverterSessionID',
                't' => 'LoggerPatternConverterProcess',
                'pid' => 'LoggerPatternConverterProcess',
                'process' => 'LoggerPatternConverterProcess',
                'x' => 'LoggerPatternConverterNDC',
                'ndc' => 'LoggerPatternConverterNDC',
                'X' => 'LoggerPatternConverterMDC',
                'mdc' => 'LoggerPatternConverterMDC',
              ),
               'head' => 
              LoggerPatternConverterDate::__set_state(array(
                 'format' => 'c',
                 'specials' => 
                array (
                  'ISO8601' => 'c',
                  'ABSOLUTE' => 'H:i:s',
                  'DATE' => 'd M Y H:i:s.u',
                ),
                 'useLocalDate' => false,
                 'next' => 
                LoggerPatternConverterLiteral::__set_state(array(
                   'literalValue' => ' ',
                   'next' => 
                  LoggerPatternConverterLevel::__set_state(array(
                     'next' => 
                    LoggerPatternConverterLiteral::__set_state(array(
                       'literalValue' => ' ',
                       'next' => 
                      LoggerPatternConverterLogger::__set_state(array(
                         'length' => NULL,
                         'cache' => 
                        array (
                          'VT' => 'VT',
                          'user' => 'user',
                        ),
                         'next' => 
                        LoggerPatternConverterLiteral::__set_state(array(
                           'literalValue' => ' ',
                           'next' => 
                          LoggerPatternConverterMessage::__set_state(array(
                             'next' => 
                            LoggerPatternConverterNewLine::__set_state(array(
                               'next' => NULL,
                               'formattingInfo' => 
                              LoggerFormattingInfo::__set_state(array(
                                 'min' => 0,
                                 'max' => 9223372036854775807,
                                 'padLeft' => true,
                                 'trimLeft' => false,
                              )),
                               'option' => '',
                            )),
                             'formattingInfo' => 
                            LoggerFormattingInfo::__set_state(array(
                               'min' => 0,
                               'max' => 9223372036854775807,
                               'padLeft' => true,
                               'trimLeft' => false,
                            )),
                             'option' => '',
                          )),
                           'formattingInfo' => NULL,
                           'option' => NULL,
                        )),
                         'formattingInfo' => 
                        LoggerFormattingInfo::__set_state(array(
                           'min' => 0,
                           'max' => 9223372036854775807,
                           'padLeft' => true,
                           'trimLeft' => false,
                        )),
                         'option' => '',
                      )),
                       'formattingInfo' => NULL,
                       'option' => NULL,
                    )),
                     'formattingInfo' => 
                    LoggerFormattingInfo::__set_state(array(
                       'min' => 5,
                       'max' => 9223372036854775807,
                       'padLeft' => false,
                       'trimLeft' => false,
                    )),
                     'option' => '',
                  )),
                   'formattingInfo' => NULL,
                   'option' => NULL,
                )),
                 'formattingInfo' => 
                LoggerFormattingInfo::__set_state(array(
                   'min' => 0,
                   'max' => 9223372036854775807,
                   'padLeft' => true,
                   'trimLeft' => false,
                )),
                 'option' => '',
              )),
            )),
             'name' => 'A1',
             'threshold' => NULL,
             'requiresLayout' => true,
          )),
        ),
      )),
       'appenders' => 
      array (
      ),
    )),
     'column_fields' => 
    TrackableObject::__set_state(array(
       'storage' => 
      array (
        'pt_origen' => 'Leonardo rivero',
        'pt_tema' => 'Trabajadores',
        'pt_grupo' => '2',
        'pt_temavtiger' => '768',
        'CreatedTime' => '2022-12-06 11:39:32',
        'ModifiedTime' => '2022-12-06 17:43:41',
        'pt_motivo' => 'Vtiger EMPRESA (corto)',
        'tags' => '',
        'record_id' => '1406',
        'record_module' => 'Parametrizaciones',
        'id' => '1406',
      ),
       'trackingEnabled' => true,
       'tracking' => true,
       'changed' => 
      array (
        0 => 'id',
      ),
    )),
     'IsCustomModule' => true,
     'sortby_fields' => 
    array (
    ),
     'required_fields' => 
    array (
      'assigned_user_id' => 1,
    ),
     'special_functions' => 
    array (
      0 => 'set_import_assigned_user',
    ),
     'ownedby' => NULL,
     'recordSource' => 'CRM',
     '__inactive_fields_filtered' => false,
     'moduleName' => 'Parametrizaciones',
     'id' => '1406',
  )),
))
params => array (
  'tema' => false,
  'motivo' => 'Vtiger EMPRESA (corto)',
  'origen' => 'Leonardo Rivero',
)
rs => array (
  0 => '1406',
  'crmid' => '1406',
)
models => Parametrizaciones_Record_Model::__set_state(array(
   'module' => 
  Vtiger_Module_Model::__set_state(array(
     'blocks' => false,
     'nameFields' => false,
     'moduleMeta' => false,
     'fields' => false,
     'relations' => NULL,
     'id' => '63',
     'name' => 'Parametrizaciones',
     'label' => 'Parametrizaciones',
     'version' => '0',
     'minversion' => false,
     'maxversion' => false,
     'presence' => '0',
     'ownedby' => '0',
     'tabsequence' => '-1',
     'parent' => 'TOOLS',
     'customized' => '1',
     'trial' => '0',
     'isentitytype' => '1',
     'entityidcolumn' => false,
     'entityidfield' => false,
     'basetable' => false,
     'basetableid' => false,
     'customtable' => false,
     'grouptable' => false,
     'fieldtable' => false,
     'allowDuplicates' => '1',
     'isSyncable' => '0',
     'syncActionForDuplicate' => '1',
     'source' => 'custom',
  )),
   'valueMap' => 
  TrackableObject::__set_state(array(
     'storage' => 
    array (
      'pt_origen' => 'Leonardo rivero',
      'pt_tema' => 'Trabajadores',
      'pt_grupo' => '2',
      'pt_temavtiger' => '768',
      'CreatedTime' => '2022-12-06 11:39:32',
      'ModifiedTime' => '2022-12-06 17:43:41',
      'pt_motivo' => 'Vtiger EMPRESA (corto)',
      'tags' => '',
      'record_id' => '1406',
      'record_module' => 'Parametrizaciones',
      'id' => '1406',
    ),
     'trackingEnabled' => true,
     'tracking' => true,
     'changed' => 
    array (
      0 => 'id',
    ),
  )),
   'entity' => 
  Parametrizaciones::__set_state(array(
     'table_name' => 'vtiger_parametrizaciones',
     'table_index' => 'parametrizacionesid',
     'customFieldTable' => 
    array (
      0 => 'vtiger_parametrizacionescf',
      1 => 'parametrizacionesid',
    ),
     'tab_name' => 
    array (
      0 => 'vtiger_crmentity',
      1 => 'vtiger_parametrizaciones',
      2 => 'vtiger_parametrizacionescf',
      3 => 'vtiger_crmentity_user_field',
    ),
     'tab_name_index' => 
    array (
      'vtiger_crmentity' => 'crmid',
      'vtiger_parametrizaciones' => 'parametrizacionesid',
      'vtiger_parametrizacionescf' => 'parametrizacionesid',
      'vtiger_crmentity_user_field' => 'recordid',
    ),
     'list_fields' => 
    array (
      'parametrizacionesid' => 
      array (
        0 => 'parametrizaciones',
        1 => '<entitycolumn>',
      ),
      'Assigned To' => 
      array (
        0 => 'crmentity',
        1 => 'smownerid',
      ),
    ),
     'list_fields_name' => 
    array (
      'parametrizacionesid' => 'parametrizacionesid',
      'Assigned To' => 'assigned_user_id',
    ),
     'list_link_field' => 'parametrizacionesid',
     'search_fields' => 
    array (
      'parametrizacionesid' => 
      array (
        0 => 'parametrizaciones',
        1 => '<entitycolumn>',
      ),
      'Assigned To' => 
      array (
        0 => 'vtiger_crmentity',
        1 => 'assigned_user_id',
      ),
    ),
     'search_fields_name' => 
    array (
      'parametrizacionesid' => 'parametrizacionesid',
      'Assigned To' => 'assigned_user_id',
    ),
     'popup_fields' => 
    array (
      0 => 'parametrizacionesid',
    ),
     'def_basicsearch_col' => 'parametrizacionesid',
     'def_detailview_recname' => 'parametrizacionesid',
     'mandatory_fields' => 
    array (
      0 => 'parametrizacionesid',
      1 => 'assigned_user_id',
    ),
     'default_order_by' => 'parametrizacionesid',
     'default_sort_order' => 'ASC',
     'db' => 
    PearDatabase::__set_state(array(
       'database' => 
      ADODB_mysqli::__set_state(array(
         'databaseType' => 'mysqli',
         'dataProvider' => 'mysql',
         'hasInsertID' => true,
         'hasAffectedRows' => true,
         'metaTablesSQL' => 'SELECT
			TABLE_NAME,
			CASE WHEN TABLE_TYPE = \'VIEW\' THEN \'V\' ELSE \'T\' END
		FROM INFORMATION_SCHEMA.TABLES
		WHERE TABLE_SCHEMA=',
         'metaColumnsSQL' => 'SHOW COLUMNS FROM `%s`',
         'fmtTimeStamp' => '\'Y-m-d H:i:s\'',
         'hasLimit' => true,
         'hasMoveFirst' => true,
         'hasGenID' => true,
         'isoDates' => true,
         'sysDate' => 'CURDATE()',
         'sysTimeStamp' => 'NOW()',
         'hasTransactions' => true,
         'forceNewConnect' => false,
         'poorAffectedRows' => true,
         'clientFlags' => 0,
         'substr' => 'substring',
         'port' => '3306',
         'socket' => '',
         '_bindInputArray' => false,
         'nameQuote' => '`',
         'optionFlags' => 
        array (
          0 => 
          array (
            0 => 5,
            1 => 0,
          ),
          1 => 
          array (
            0 => 8,
            1 => true,
          ),
        ),
         'arrayClass' => 'ADORecordSet_array_mysqli',
         'multiQuery' => false,
         '_genIDSQL' => 'update %s set id=LAST_INSERT_ID(id+1);',
         '_genSeqSQL' => 'create table if not exists %s (id int not null)',
         '_genSeqCountSQL' => 'select count(*) from %s',
         '_genSeq2SQL' => 'insert into %s values (%s)',
         '_dropSeqSQL' => 'drop table if exists %s',
         'database' => 'bps2',
         'host' => 'localhost',
         'user' => 'root',
         'password' => '',
         'debug' => false,
         'maxblobsize' => 262144,
         'concat_operator' => '+',
         'length' => 'length',
         'random' => 'rand()',
         'upperCase' => 'upper',
         'fmtDate' => '\'Y-m-d\'',
         'true' => '1',
         'false' => '0',
         'replaceQuote' => '\\\'',
         'charSet' => false,
         'metaDatabasesSQL' => '',
         'uniqueOrderBy' => false,
         'emptyDate' => '&nbsp;',
         'emptyTimeStamp' => '&nbsp;',
         'lastInsID' => false,
         'hasTop' => false,
         'readOnly' => false,
         'genID' => 0,
         'raiseErrorFn' => false,
         'cacheSecs' => 3600,
         'memCache' => false,
         'memCacheHost' => NULL,
         'memCachePort' => 11211,
         'memCacheCompress' => false,
         'sysUTimeStamp' => false,
         'noNullStrings' => false,
         'numCacheHits' => 0,
         'numCacheMisses' => 0,
         'pageExecuteCountRows' => true,
         'uniqueSort' => false,
         'leftOuter' => false,
         'rightOuter' => false,
         'ansiOuter' => false,
         'autoRollback' => false,
         'fnExecute' => false,
         'fnCacheExecute' => false,
         'blobEncodeType' => false,
         'rsPrefix' => 'ADORecordSet_',
         'autoCommit' => true,
         'transOff' => 0,
         'transCnt' => 0,
         'fetchMode' => false,
         'null2null' => 'null',
         'bulkBind' => false,
         '_oldRaiseFn' => false,
         '_transOK' => NULL,
         '_connectionID' => 
        mysqli::__set_state(array(
           'affected_rows' => NULL,
           'client_info' => NULL,
           'client_version' => NULL,
           'connect_errno' => NULL,
           'connect_error' => NULL,
           'errno' => NULL,
           'error' => NULL,
           'error_list' => NULL,
           'field_count' => NULL,
           'host_info' => NULL,
           'info' => NULL,
           'insert_id' => NULL,
           'server_info' => NULL,
           'server_version' => NULL,
           'sqlstate' => NULL,
           'protocol_version' => NULL,
           'thread_id' => NULL,
           'warning_count' => NULL,
        )),
         '_errorMsg' => false,
         '_errorCode' => false,
         '_queryID' => 
        mysqli_result::__set_state(array(
           'current_field' => NULL,
           'field_count' => NULL,
           'lengths' => NULL,
           'num_rows' => NULL,
           'type' => NULL,
        )),
         '_isPersistentConnection' => true,
         '_evalAll' => false,
         '_affected' => false,
         '_logsql' => false,
         '_transmode' => '',
         'connectionParameters' => 
        array (
        ),
         'databaseName' => 'bps2',
      )),
       'dieOnError' => false,
       'dbType' => 'mysqli',
       'dbHostName' => 'localhost:3306',
       'dbName' => 'bps2',
       'dbOptions' => 
      array (
        'persistent' => true,
        'autofree' => false,
        'debug' => 0,
        'seqname_format' => '%s_seq',
        'portability' => 0,
        'ssl' => false,
      ),
       'userName' => 'root',
       'userPassword' => '',
       'query_time' => 0,
       'log' => 
      Logger::__set_state(array(
         'additive' => true,
         'fqcn' => 'Logger',
         'level' => NULL,
         'name' => 'PearDatabase_',
         'parent' => 
        LoggerRoot::__set_state(array(
           'additive' => true,
           'fqcn' => 'Logger',
           'level' => 
          LoggerLevel::__set_state(array(
             'level' => 10000,
             'levelStr' => 'DEBUG',
             'syslogEquivalent' => 6,
          )),
           'name' => 'root',
           'parent' => NULL,
           'appenders' => 
          array (
            'A1' => 
            LoggerAppenderRollingFile::__set_state(array(
               'maxFileSize' => 10485760,
               'maxBackupIndex' => 10,
               'compress' => false,
               'clearConditional' => true,
               'locking' => true,
               'append' => true,
               'file' => 'logs/vtigercrm.log',
               'fp' => NULL,
               'closed' => false,
               'filter' => NULL,
               'layout' => 
              LoggerLayoutPattern::__set_state(array(
                 'pattern' => '%date %-5level %logger %message%newline',
                 'converterMap' => 
                array (
                  'c' => 'LoggerPatternConverterLogger',
                  'lo' => 'LoggerPatternConverterLogger',
                  'logger' => 'LoggerPatternConverterLogger',
                  'C' => 'LoggerPatternConverterClass',
                  'class' => 'LoggerPatternConverterClass',
                  'cookie' => 'LoggerPatternConverterCookie',
                  'd' => 'LoggerPatternConverterDate',
                  'date' => 'LoggerPatternConverterDate',
                  'e' => 'LoggerPatternConverterEnvironment',
                  'env' => 'LoggerPatternConverterEnvironment',
                  'ex' => 'LoggerPatternConverterThrowable',
                  'exception' => 'LoggerPatternConverterThrowable',
                  'throwable' => 'LoggerPatternConverterThrowable',
                  'F' => 'LoggerPatternConverterFile',
                  'file' => 'LoggerPatternConverterFile',
                  'l' => 'LoggerPatternConverterLocation',
                  'location' => 'LoggerPatternConverterLocation',
                  'L' => 'LoggerPatternConverterLine',
                  'line' => 'LoggerPatternConverterLine',
                  'm' => 'LoggerPatternConverterMessage',
                  'msg' => 'LoggerPatternConverterMessage',
                  'message' => 'LoggerPatternConverterMessage',
                  'M' => 'LoggerPatternConverterMethod',
                  'method' => 'LoggerPatternConverterMethod',
                  'n' => 'LoggerPatternConverterNewLine',
                  'newline' => 'LoggerPatternConverterNewLine',
                  'p' => 'LoggerPatternConverterLevel',
                  'le' => 'LoggerPatternConverterLevel',
                  'level' => 'LoggerPatternConverterLevel',
                  'r' => 'LoggerPatternConverterRelative',
                  'relative' => 'LoggerPatternConverterRelative',
                  'req' => 'LoggerPatternConverterRequest',
                  'request' => 'LoggerPatternConverterRequest',
                  's' => 'LoggerPatternConverterServer',
                  'server' => 'LoggerPatternConverterServer',
                  'ses' => 'LoggerPatternConverterSession',
                  'session' => 'LoggerPatternConverterSession',
                  'sid' => 'LoggerPatternConverterSessionID',
                  'sessionid' => 'LoggerPatternConverterSessionID',
                  't' => 'LoggerPatternConverterProcess',
                  'pid' => 'LoggerPatternConverterProcess',
                  'process' => 'LoggerPatternConverterProcess',
                  'x' => 'LoggerPatternConverterNDC',
                  'ndc' => 'LoggerPatternConverterNDC',
                  'X' => 'LoggerPatternConverterMDC',
                  'mdc' => 'LoggerPatternConverterMDC',
                ),
                 'head' => 
                LoggerPatternConverterDate::__set_state(array(
                   'format' => 'c',
                   'specials' => 
                  array (
                    'ISO8601' => 'c',
                    'ABSOLUTE' => 'H:i:s',
                    'DATE' => 'd M Y H:i:s.u',
                  ),
                   'useLocalDate' => false,
                   'next' => 
                  LoggerPatternConverterLiteral::__set_state(array(
                     'literalValue' => ' ',
                     'next' => 
                    LoggerPatternConverterLevel::__set_state(array(
                       'next' => 
                      LoggerPatternConverterLiteral::__set_state(array(
                         'literalValue' => ' ',
                         'next' => 
                        LoggerPatternConverterLogger::__set_state(array(
                           'length' => NULL,
                           'cache' => 
                          array (
                            'VT' => 'VT',
                            'user' => 'user',
                          ),
                           'next' => 
                          LoggerPatternConverterLiteral::__set_state(array(
                             'literalValue' => ' ',
                             'next' => 
                            LoggerPatternConverterMessage::__set_state(array(
                               'next' => 
                              LoggerPatternConverterNewLine::__set_state(array(
                                 'next' => NULL,
                                 'formattingInfo' => 
                                LoggerFormattingInfo::__set_state(array(
                                   'min' => 0,
                                   'max' => 9223372036854775807,
                                   'padLeft' => true,
                                   'trimLeft' => false,
                                )),
                                 'option' => '',
                              )),
                               'formattingInfo' => 
                              LoggerFormattingInfo::__set_state(array(
                                 'min' => 0,
                                 'max' => 9223372036854775807,
                                 'padLeft' => true,
                                 'trimLeft' => false,
                              )),
                               'option' => '',
                            )),
                             'formattingInfo' => NULL,
                             'option' => NULL,
                          )),
                           'formattingInfo' => 
                          LoggerFormattingInfo::__set_state(array(
                             'min' => 0,
                             'max' => 9223372036854775807,
                             'padLeft' => true,
                             'trimLeft' => false,
                          )),
                           'option' => '',
                        )),
                         'formattingInfo' => NULL,
                         'option' => NULL,
                      )),
                       'formattingInfo' => 
                      LoggerFormattingInfo::__set_state(array(
                         'min' => 5,
                         'max' => 9223372036854775807,
                         'padLeft' => false,
                         'trimLeft' => false,
                      )),
                       'option' => '',
                    )),
                     'formattingInfo' => NULL,
                     'option' => NULL,
                  )),
                   'formattingInfo' => 
                  LoggerFormattingInfo::__set_state(array(
                     'min' => 0,
                     'max' => 9223372036854775807,
                     'padLeft' => true,
                     'trimLeft' => false,
                  )),
                   'option' => '',
                )),
              )),
               'name' => 'A1',
               'threshold' => NULL,
               'requiresLayout' => true,
            )),
          ),
        )),
         'appenders' => 
        array (
        ),
      )),
       'lastmysqlrow' => -1,
       'enableSQLlog' => false,
       'continueInstallOnError' => true,
       'avoidPreparedSql' => false,
       'isdb_default_utf8_charset' => true,
       'req_flist' => NULL,
       'logSqlTimingID' => false,
    )),
     'log' => 
    Logger::__set_state(array(
       'additive' => true,
       'fqcn' => 'Logger',
       'level' => NULL,
       'name' => 'VT',
       'parent' => 
      LoggerRoot::__set_state(array(
         'additive' => true,
         'fqcn' => 'Logger',
         'level' => 
        LoggerLevel::__set_state(array(
           'level' => 10000,
           'levelStr' => 'DEBUG',
           'syslogEquivalent' => 6,
        )),
         'name' => 'root',
         'parent' => NULL,
         'appenders' => 
        array (
          'A1' => 
          LoggerAppenderRollingFile::__set_state(array(
             'maxFileSize' => 10485760,
             'maxBackupIndex' => 10,
             'compress' => false,
             'clearConditional' => true,
             'locking' => true,
             'append' => true,
             'file' => 'logs/vtigercrm.log',
             'fp' => NULL,
             'closed' => false,
             'filter' => NULL,
             'layout' => 
            LoggerLayoutPattern::__set_state(array(
               'pattern' => '%date %-5level %logger %message%newline',
               'converterMap' => 
              array (
                'c' => 'LoggerPatternConverterLogger',
                'lo' => 'LoggerPatternConverterLogger',
                'logger' => 'LoggerPatternConverterLogger',
                'C' => 'LoggerPatternConverterClass',
                'class' => 'LoggerPatternConverterClass',
                'cookie' => 'LoggerPatternConverterCookie',
                'd' => 'LoggerPatternConverterDate',
                'date' => 'LoggerPatternConverterDate',
                'e' => 'LoggerPatternConverterEnvironment',
                'env' => 'LoggerPatternConverterEnvironment',
                'ex' => 'LoggerPatternConverterThrowable',
                'exception' => 'LoggerPatternConverterThrowable',
                'throwable' => 'LoggerPatternConverterThrowable',
                'F' => 'LoggerPatternConverterFile',
                'file' => 'LoggerPatternConverterFile',
                'l' => 'LoggerPatternConverterLocation',
                'location' => 'LoggerPatternConverterLocation',
                'L' => 'LoggerPatternConverterLine',
                'line' => 'LoggerPatternConverterLine',
                'm' => 'LoggerPatternConverterMessage',
                'msg' => 'LoggerPatternConverterMessage',
                'message' => 'LoggerPatternConverterMessage',
                'M' => 'LoggerPatternConverterMethod',
                'method' => 'LoggerPatternConverterMethod',
                'n' => 'LoggerPatternConverterNewLine',
                'newline' => 'LoggerPatternConverterNewLine',
                'p' => 'LoggerPatternConverterLevel',
                'le' => 'LoggerPatternConverterLevel',
                'level' => 'LoggerPatternConverterLevel',
                'r' => 'LoggerPatternConverterRelative',
                'relative' => 'LoggerPatternConverterRelative',
                'req' => 'LoggerPatternConverterRequest',
                'request' => 'LoggerPatternConverterRequest',
                's' => 'LoggerPatternConverterServer',
                'server' => 'LoggerPatternConverterServer',
                'ses' => 'LoggerPatternConverterSession',
                'session' => 'LoggerPatternConverterSession',
                'sid' => 'LoggerPatternConverterSessionID',
                'sessionid' => 'LoggerPatternConverterSessionID',
                't' => 'LoggerPatternConverterProcess',
                'pid' => 'LoggerPatternConverterProcess',
                'process' => 'LoggerPatternConverterProcess',
                'x' => 'LoggerPatternConverterNDC',
                'ndc' => 'LoggerPatternConverterNDC',
                'X' => 'LoggerPatternConverterMDC',
                'mdc' => 'LoggerPatternConverterMDC',
              ),
               'head' => 
              LoggerPatternConverterDate::__set_state(array(
                 'format' => 'c',
                 'specials' => 
                array (
                  'ISO8601' => 'c',
                  'ABSOLUTE' => 'H:i:s',
                  'DATE' => 'd M Y H:i:s.u',
                ),
                 'useLocalDate' => false,
                 'next' => 
                LoggerPatternConverterLiteral::__set_state(array(
                   'literalValue' => ' ',
                   'next' => 
                  LoggerPatternConverterLevel::__set_state(array(
                     'next' => 
                    LoggerPatternConverterLiteral::__set_state(array(
                       'literalValue' => ' ',
                       'next' => 
                      LoggerPatternConverterLogger::__set_state(array(
                         'length' => NULL,
                         'cache' => 
                        array (
                          'VT' => 'VT',
                          'user' => 'user',
                        ),
                         'next' => 
                        LoggerPatternConverterLiteral::__set_state(array(
                           'literalValue' => ' ',
                           'next' => 
                          LoggerPatternConverterMessage::__set_state(array(
                             'next' => 
                            LoggerPatternConverterNewLine::__set_state(array(
                               'next' => NULL,
                               'formattingInfo' => 
                              LoggerFormattingInfo::__set_state(array(
                                 'min' => 0,
                                 'max' => 9223372036854775807,
                                 'padLeft' => true,
                                 'trimLeft' => false,
                              )),
                               'option' => '',
                            )),
                             'formattingInfo' => 
                            LoggerFormattingInfo::__set_state(array(
                               'min' => 0,
                               'max' => 9223372036854775807,
                               'padLeft' => true,
                               'trimLeft' => false,
                            )),
                             'option' => '',
                          )),
                           'formattingInfo' => NULL,
                           'option' => NULL,
                        )),
                         'formattingInfo' => 
                        LoggerFormattingInfo::__set_state(array(
                           'min' => 0,
                           'max' => 9223372036854775807,
                           'padLeft' => true,
                           'trimLeft' => false,
                        )),
                         'option' => '',
                      )),
                       'formattingInfo' => NULL,
                       'option' => NULL,
                    )),
                     'formattingInfo' => 
                    LoggerFormattingInfo::__set_state(array(
                       'min' => 5,
                       'max' => 9223372036854775807,
                       'padLeft' => false,
                       'trimLeft' => false,
                    )),
                     'option' => '',
                  )),
                   'formattingInfo' => NULL,
                   'option' => NULL,
                )),
                 'formattingInfo' => 
                LoggerFormattingInfo::__set_state(array(
                   'min' => 0,
                   'max' => 9223372036854775807,
                   'padLeft' => true,
                   'trimLeft' => false,
                )),
                 'option' => '',
              )),
            )),
             'name' => 'A1',
             'threshold' => NULL,
             'requiresLayout' => true,
          )),
        ),
      )),
       'appenders' => 
      array (
      ),
    )),
     'column_fields' => 
    TrackableObject::__set_state(array(
       'storage' => 
      array (
        'pt_origen' => 'Leonardo rivero',
        'pt_tema' => 'Trabajadores',
        'pt_grupo' => '2',
        'pt_temavtiger' => '768',
        'CreatedTime' => '2022-12-06 11:39:32',
        'ModifiedTime' => '2022-12-06 17:43:41',
        'pt_motivo' => 'Vtiger EMPRESA (corto)',
        'tags' => '',
        'record_id' => '1406',
        'record_module' => 'Parametrizaciones',
        'id' => '1406',
      ),
       'trackingEnabled' => true,
       'tracking' => true,
       'changed' => 
      array (
        0 => 'id',
      ),
    )),
     'IsCustomModule' => true,
     'sortby_fields' => 
    array (
    ),
     'required_fields' => 
    array (
      'assigned_user_id' => 1,
    ),
     'special_functions' => 
    array (
      0 => 'set_import_assigned_user',
    ),
     'ownedby' => NULL,
     'recordSource' => 'CRM',
     '__inactive_fields_filtered' => false,
     'moduleName' => 'Parametrizaciones',
     'id' => '1406',
  )),
))
params => array (
  'tema' => false,
  'motivo' => 'Vtiger EMPRESA (corto)',
  'origen' => 'Leonardo Rivero',
)
rs => array (
  0 => '1406',
  'crmid' => '1406',
)
models => Parametrizaciones_Record_Model::__set_state(array(
   'module' => 
  Vtiger_Module_Model::__set_state(array(
     'blocks' => false,
     'nameFields' => false,
     'moduleMeta' => false,
     'fields' => false,
     'relations' => NULL,
     'id' => '63',
     'name' => 'Parametrizaciones',
     'label' => 'Parametrizaciones',
     'version' => '0',
     'minversion' => false,
     'maxversion' => false,
     'presence' => '0',
     'ownedby' => '0',
     'tabsequence' => '-1',
     'parent' => 'TOOLS',
     'customized' => '1',
     'trial' => '0',
     'isentitytype' => '1',
     'entityidcolumn' => false,
     'entityidfield' => false,
     'basetable' => false,
     'basetableid' => false,
     'customtable' => false,
     'grouptable' => false,
     'fieldtable' => false,
     'allowDuplicates' => '1',
     'isSyncable' => '0',
     'syncActionForDuplicate' => '1',
     'source' => 'custom',
  )),
   'valueMap' => 
  TrackableObject::__set_state(array(
     'storage' => 
    array (
      'pt_origen' => 'Leonardo rivero',
      'pt_tema' => 'Trabajadores',
      'pt_grupo' => '2',
      'pt_temavtiger' => '768',
      'CreatedTime' => '2022-12-06 11:39:32',
      'ModifiedTime' => '2022-12-06 17:43:41',
      'pt_motivo' => 'Vtiger EMPRESA (corto)',
      'tags' => '',
      'record_id' => '1406',
      'record_module' => 'Parametrizaciones',
      'id' => '1406',
    ),
     'trackingEnabled' => true,
     'tracking' => true,
     'changed' => 
    array (
      0 => 'id',
    ),
  )),
   'entity' => 
  Parametrizaciones::__set_state(array(
     'table_name' => 'vtiger_parametrizaciones',
     'table_index' => 'parametrizacionesid',
     'customFieldTable' => 
    array (
      0 => 'vtiger_parametrizacionescf',
      1 => 'parametrizacionesid',
    ),
     'tab_name' => 
    array (
      0 => 'vtiger_crmentity',
      1 => 'vtiger_parametrizaciones',
      2 => 'vtiger_parametrizacionescf',
      3 => 'vtiger_crmentity_user_field',
    ),
     'tab_name_index' => 
    array (
      'vtiger_crmentity' => 'crmid',
      'vtiger_parametrizaciones' => 'parametrizacionesid',
      'vtiger_parametrizacionescf' => 'parametrizacionesid',
      'vtiger_crmentity_user_field' => 'recordid',
    ),
     'list_fields' => 
    array (
      'parametrizacionesid' => 
      array (
        0 => 'parametrizaciones',
        1 => '<entitycolumn>',
      ),
      'Assigned To' => 
      array (
        0 => 'crmentity',
        1 => 'smownerid',
      ),
    ),
     'list_fields_name' => 
    array (
      'parametrizacionesid' => 'parametrizacionesid',
      'Assigned To' => 'assigned_user_id',
    ),
     'list_link_field' => 'parametrizacionesid',
     'search_fields' => 
    array (
      'parametrizacionesid' => 
      array (
        0 => 'parametrizaciones',
        1 => '<entitycolumn>',
      ),
      'Assigned To' => 
      array (
        0 => 'vtiger_crmentity',
        1 => 'assigned_user_id',
      ),
    ),
     'search_fields_name' => 
    array (
      'parametrizacionesid' => 'parametrizacionesid',
      'Assigned To' => 'assigned_user_id',
    ),
     'popup_fields' => 
    array (
      0 => 'parametrizacionesid',
    ),
     'def_basicsearch_col' => 'parametrizacionesid',
     'def_detailview_recname' => 'parametrizacionesid',
     'mandatory_fields' => 
    array (
      0 => 'parametrizacionesid',
      1 => 'assigned_user_id',
    ),
     'default_order_by' => 'parametrizacionesid',
     'default_sort_order' => 'ASC',
     'db' => 
    PearDatabase::__set_state(array(
       'database' => 
      ADODB_mysqli::__set_state(array(
         'databaseType' => 'mysqli',
         'dataProvider' => 'mysql',
         'hasInsertID' => true,
         'hasAffectedRows' => true,
         'metaTablesSQL' => 'SELECT
			TABLE_NAME,
			CASE WHEN TABLE_TYPE = \'VIEW\' THEN \'V\' ELSE \'T\' END
		FROM INFORMATION_SCHEMA.TABLES
		WHERE TABLE_SCHEMA=',
         'metaColumnsSQL' => 'SHOW COLUMNS FROM `%s`',
         'fmtTimeStamp' => '\'Y-m-d H:i:s\'',
         'hasLimit' => true,
         'hasMoveFirst' => true,
         'hasGenID' => true,
         'isoDates' => true,
         'sysDate' => 'CURDATE()',
         'sysTimeStamp' => 'NOW()',
         'hasTransactions' => true,
         'forceNewConnect' => false,
         'poorAffectedRows' => true,
         'clientFlags' => 0,
         'substr' => 'substring',
         'port' => '3306',
         'socket' => '',
         '_bindInputArray' => false,
         'nameQuote' => '`',
         'optionFlags' => 
        array (
          0 => 
          array (
            0 => 5,
            1 => 0,
          ),
          1 => 
          array (
            0 => 8,
            1 => true,
          ),
        ),
         'arrayClass' => 'ADORecordSet_array_mysqli',
         'multiQuery' => false,
         '_genIDSQL' => 'update %s set id=LAST_INSERT_ID(id+1);',
         '_genSeqSQL' => 'create table if not exists %s (id int not null)',
         '_genSeqCountSQL' => 'select count(*) from %s',
         '_genSeq2SQL' => 'insert into %s values (%s)',
         '_dropSeqSQL' => 'drop table if exists %s',
         'database' => 'bps2',
         'host' => 'localhost',
         'user' => 'root',
         'password' => '',
         'debug' => false,
         'maxblobsize' => 262144,
         'concat_operator' => '+',
         'length' => 'length',
         'random' => 'rand()',
         'upperCase' => 'upper',
         'fmtDate' => '\'Y-m-d\'',
         'true' => '1',
         'false' => '0',
         'replaceQuote' => '\\\'',
         'charSet' => false,
         'metaDatabasesSQL' => '',
         'uniqueOrderBy' => false,
         'emptyDate' => '&nbsp;',
         'emptyTimeStamp' => '&nbsp;',
         'lastInsID' => false,
         'hasTop' => false,
         'readOnly' => false,
         'genID' => 0,
         'raiseErrorFn' => false,
         'cacheSecs' => 3600,
         'memCache' => false,
         'memCacheHost' => NULL,
         'memCachePort' => 11211,
         'memCacheCompress' => false,
         'sysUTimeStamp' => false,
         'noNullStrings' => false,
         'numCacheHits' => 0,
         'numCacheMisses' => 0,
         'pageExecuteCountRows' => true,
         'uniqueSort' => false,
         'leftOuter' => false,
         'rightOuter' => false,
         'ansiOuter' => false,
         'autoRollback' => false,
         'fnExecute' => false,
         'fnCacheExecute' => false,
         'blobEncodeType' => false,
         'rsPrefix' => 'ADORecordSet_',
         'autoCommit' => true,
         'transOff' => 0,
         'transCnt' => 0,
         'fetchMode' => false,
         'null2null' => 'null',
         'bulkBind' => false,
         '_oldRaiseFn' => false,
         '_transOK' => NULL,
         '_connectionID' => 
        mysqli::__set_state(array(
           'affected_rows' => NULL,
           'client_info' => NULL,
           'client_version' => NULL,
           'connect_errno' => NULL,
           'connect_error' => NULL,
           'errno' => NULL,
           'error' => NULL,
           'error_list' => NULL,
           'field_count' => NULL,
           'host_info' => NULL,
           'info' => NULL,
           'insert_id' => NULL,
           'server_info' => NULL,
           'server_version' => NULL,
           'sqlstate' => NULL,
           'protocol_version' => NULL,
           'thread_id' => NULL,
           'warning_count' => NULL,
        )),
         '_errorMsg' => false,
         '_errorCode' => false,
         '_queryID' => 
        mysqli_result::__set_state(array(
           'current_field' => NULL,
           'field_count' => NULL,
           'lengths' => NULL,
           'num_rows' => NULL,
           'type' => NULL,
        )),
         '_isPersistentConnection' => true,
         '_evalAll' => false,
         '_affected' => false,
         '_logsql' => false,
         '_transmode' => '',
         'connectionParameters' => 
        array (
        ),
         'databaseName' => 'bps2',
      )),
       'dieOnError' => false,
       'dbType' => 'mysqli',
       'dbHostName' => 'localhost:3306',
       'dbName' => 'bps2',
       'dbOptions' => 
      array (
        'persistent' => true,
        'autofree' => false,
        'debug' => 0,
        'seqname_format' => '%s_seq',
        'portability' => 0,
        'ssl' => false,
      ),
       'userName' => 'root',
       'userPassword' => '',
       'query_time' => 0,
       'log' => 
      Logger::__set_state(array(
         'additive' => true,
         'fqcn' => 'Logger',
         'level' => NULL,
         'name' => 'PearDatabase_',
         'parent' => 
        LoggerRoot::__set_state(array(
           'additive' => true,
           'fqcn' => 'Logger',
           'level' => 
          LoggerLevel::__set_state(array(
             'level' => 10000,
             'levelStr' => 'DEBUG',
             'syslogEquivalent' => 6,
          )),
           'name' => 'root',
           'parent' => NULL,
           'appenders' => 
          array (
            'A1' => 
            LoggerAppenderRollingFile::__set_state(array(
               'maxFileSize' => 10485760,
               'maxBackupIndex' => 10,
               'compress' => false,
               'clearConditional' => true,
               'locking' => true,
               'append' => true,
               'file' => 'logs/vtigercrm.log',
               'fp' => NULL,
               'closed' => false,
               'filter' => NULL,
               'layout' => 
              LoggerLayoutPattern::__set_state(array(
                 'pattern' => '%date %-5level %logger %message%newline',
                 'converterMap' => 
                array (
                  'c' => 'LoggerPatternConverterLogger',
                  'lo' => 'LoggerPatternConverterLogger',
                  'logger' => 'LoggerPatternConverterLogger',
                  'C' => 'LoggerPatternConverterClass',
                  'class' => 'LoggerPatternConverterClass',
                  'cookie' => 'LoggerPatternConverterCookie',
                  'd' => 'LoggerPatternConverterDate',
                  'date' => 'LoggerPatternConverterDate',
                  'e' => 'LoggerPatternConverterEnvironment',
                  'env' => 'LoggerPatternConverterEnvironment',
                  'ex' => 'LoggerPatternConverterThrowable',
                  'exception' => 'LoggerPatternConverterThrowable',
                  'throwable' => 'LoggerPatternConverterThrowable',
                  'F' => 'LoggerPatternConverterFile',
                  'file' => 'LoggerPatternConverterFile',
                  'l' => 'LoggerPatternConverterLocation',
                  'location' => 'LoggerPatternConverterLocation',
                  'L' => 'LoggerPatternConverterLine',
                  'line' => 'LoggerPatternConverterLine',
                  'm' => 'LoggerPatternConverterMessage',
                  'msg' => 'LoggerPatternConverterMessage',
                  'message' => 'LoggerPatternConverterMessage',
                  'M' => 'LoggerPatternConverterMethod',
                  'method' => 'LoggerPatternConverterMethod',
                  'n' => 'LoggerPatternConverterNewLine',
                  'newline' => 'LoggerPatternConverterNewLine',
                  'p' => 'LoggerPatternConverterLevel',
                  'le' => 'LoggerPatternConverterLevel',
                  'level' => 'LoggerPatternConverterLevel',
                  'r' => 'LoggerPatternConverterRelative',
                  'relative' => 'LoggerPatternConverterRelative',
                  'req' => 'LoggerPatternConverterRequest',
                  'request' => 'LoggerPatternConverterRequest',
                  's' => 'LoggerPatternConverterServer',
                  'server' => 'LoggerPatternConverterServer',
                  'ses' => 'LoggerPatternConverterSession',
                  'session' => 'LoggerPatternConverterSession',
                  'sid' => 'LoggerPatternConverterSessionID',
                  'sessionid' => 'LoggerPatternConverterSessionID',
                  't' => 'LoggerPatternConverterProcess',
                  'pid' => 'LoggerPatternConverterProcess',
                  'process' => 'LoggerPatternConverterProcess',
                  'x' => 'LoggerPatternConverterNDC',
                  'ndc' => 'LoggerPatternConverterNDC',
                  'X' => 'LoggerPatternConverterMDC',
                  'mdc' => 'LoggerPatternConverterMDC',
                ),
                 'head' => 
                LoggerPatternConverterDate::__set_state(array(
                   'format' => 'c',
                   'specials' => 
                  array (
                    'ISO8601' => 'c',
                    'ABSOLUTE' => 'H:i:s',
                    'DATE' => 'd M Y H:i:s.u',
                  ),
                   'useLocalDate' => false,
                   'next' => 
                  LoggerPatternConverterLiteral::__set_state(array(
                     'literalValue' => ' ',
                     'next' => 
                    LoggerPatternConverterLevel::__set_state(array(
                       'next' => 
                      LoggerPatternConverterLiteral::__set_state(array(
                         'literalValue' => ' ',
                         'next' => 
                        LoggerPatternConverterLogger::__set_state(array(
                           'length' => NULL,
                           'cache' => 
                          array (
                            'VT' => 'VT',
                            'user' => 'user',
                          ),
                           'next' => 
                          LoggerPatternConverterLiteral::__set_state(array(
                             'literalValue' => ' ',
                             'next' => 
                            LoggerPatternConverterMessage::__set_state(array(
                               'next' => 
                              LoggerPatternConverterNewLine::__set_state(array(
                                 'next' => NULL,
                                 'formattingInfo' => 
                                LoggerFormattingInfo::__set_state(array(
                                   'min' => 0,
                                   'max' => 9223372036854775807,
                                   'padLeft' => true,
                                   'trimLeft' => false,
                                )),
                                 'option' => '',
                              )),
                               'formattingInfo' => 
                              LoggerFormattingInfo::__set_state(array(
                                 'min' => 0,
                                 'max' => 9223372036854775807,
                                 'padLeft' => true,
                                 'trimLeft' => false,
                              )),
                               'option' => '',
                            )),
                             'formattingInfo' => NULL,
                             'option' => NULL,
                          )),
                           'formattingInfo' => 
                          LoggerFormattingInfo::__set_state(array(
                             'min' => 0,
                             'max' => 9223372036854775807,
                             'padLeft' => true,
                             'trimLeft' => false,
                          )),
                           'option' => '',
                        )),
                         'formattingInfo' => NULL,
                         'option' => NULL,
                      )),
                       'formattingInfo' => 
                      LoggerFormattingInfo::__set_state(array(
                         'min' => 5,
                         'max' => 9223372036854775807,
                         'padLeft' => false,
                         'trimLeft' => false,
                      )),
                       'option' => '',
                    )),
                     'formattingInfo' => NULL,
                     'option' => NULL,
                  )),
                   'formattingInfo' => 
                  LoggerFormattingInfo::__set_state(array(
                     'min' => 0,
                     'max' => 9223372036854775807,
                     'padLeft' => true,
                     'trimLeft' => false,
                  )),
                   'option' => '',
                )),
              )),
               'name' => 'A1',
               'threshold' => NULL,
               'requiresLayout' => true,
            )),
          ),
        )),
         'appenders' => 
        array (
        ),
      )),
       'lastmysqlrow' => -1,
       'enableSQLlog' => false,
       'continueInstallOnError' => true,
       'avoidPreparedSql' => false,
       'isdb_default_utf8_charset' => true,
       'req_flist' => NULL,
       'logSqlTimingID' => false,
    )),
     'log' => 
    Logger::__set_state(array(
       'additive' => true,
       'fqcn' => 'Logger',
       'level' => NULL,
       'name' => 'VT',
       'parent' => 
      LoggerRoot::__set_state(array(
         'additive' => true,
         'fqcn' => 'Logger',
         'level' => 
        LoggerLevel::__set_state(array(
           'level' => 10000,
           'levelStr' => 'DEBUG',
           'syslogEquivalent' => 6,
        )),
         'name' => 'root',
         'parent' => NULL,
         'appenders' => 
        array (
          'A1' => 
          LoggerAppenderRollingFile::__set_state(array(
             'maxFileSize' => 10485760,
             'maxBackupIndex' => 10,
             'compress' => false,
             'clearConditional' => true,
             'locking' => true,
             'append' => true,
             'file' => 'logs/vtigercrm.log',
             'fp' => NULL,
             'closed' => false,
             'filter' => NULL,
             'layout' => 
            LoggerLayoutPattern::__set_state(array(
               'pattern' => '%date %-5level %logger %message%newline',
               'converterMap' => 
              array (
                'c' => 'LoggerPatternConverterLogger',
                'lo' => 'LoggerPatternConverterLogger',
                'logger' => 'LoggerPatternConverterLogger',
                'C' => 'LoggerPatternConverterClass',
                'class' => 'LoggerPatternConverterClass',
                'cookie' => 'LoggerPatternConverterCookie',
                'd' => 'LoggerPatternConverterDate',
                'date' => 'LoggerPatternConverterDate',
                'e' => 'LoggerPatternConverterEnvironment',
                'env' => 'LoggerPatternConverterEnvironment',
                'ex' => 'LoggerPatternConverterThrowable',
                'exception' => 'LoggerPatternConverterThrowable',
                'throwable' => 'LoggerPatternConverterThrowable',
                'F' => 'LoggerPatternConverterFile',
                'file' => 'LoggerPatternConverterFile',
                'l' => 'LoggerPatternConverterLocation',
                'location' => 'LoggerPatternConverterLocation',
                'L' => 'LoggerPatternConverterLine',
                'line' => 'LoggerPatternConverterLine',
                'm' => 'LoggerPatternConverterMessage',
                'msg' => 'LoggerPatternConverterMessage',
                'message' => 'LoggerPatternConverterMessage',
                'M' => 'LoggerPatternConverterMethod',
                'method' => 'LoggerPatternConverterMethod',
                'n' => 'LoggerPatternConverterNewLine',
                'newline' => 'LoggerPatternConverterNewLine',
                'p' => 'LoggerPatternConverterLevel',
                'le' => 'LoggerPatternConverterLevel',
                'level' => 'LoggerPatternConverterLevel',
                'r' => 'LoggerPatternConverterRelative',
                'relative' => 'LoggerPatternConverterRelative',
                'req' => 'LoggerPatternConverterRequest',
                'request' => 'LoggerPatternConverterRequest',
                's' => 'LoggerPatternConverterServer',
                'server' => 'LoggerPatternConverterServer',
                'ses' => 'LoggerPatternConverterSession',
                'session' => 'LoggerPatternConverterSession',
                'sid' => 'LoggerPatternConverterSessionID',
                'sessionid' => 'LoggerPatternConverterSessionID',
                't' => 'LoggerPatternConverterProcess',
                'pid' => 'LoggerPatternConverterProcess',
                'process' => 'LoggerPatternConverterProcess',
                'x' => 'LoggerPatternConverterNDC',
                'ndc' => 'LoggerPatternConverterNDC',
                'X' => 'LoggerPatternConverterMDC',
                'mdc' => 'LoggerPatternConverterMDC',
              ),
               'head' => 
              LoggerPatternConverterDate::__set_state(array(
                 'format' => 'c',
                 'specials' => 
                array (
                  'ISO8601' => 'c',
                  'ABSOLUTE' => 'H:i:s',
                  'DATE' => 'd M Y H:i:s.u',
                ),
                 'useLocalDate' => false,
                 'next' => 
                LoggerPatternConverterLiteral::__set_state(array(
                   'literalValue' => ' ',
                   'next' => 
                  LoggerPatternConverterLevel::__set_state(array(
                     'next' => 
                    LoggerPatternConverterLiteral::__set_state(array(
                       'literalValue' => ' ',
                       'next' => 
                      LoggerPatternConverterLogger::__set_state(array(
                         'length' => NULL,
                         'cache' => 
                        array (
                          'VT' => 'VT',
                          'user' => 'user',
                        ),
                         'next' => 
                        LoggerPatternConverterLiteral::__set_state(array(
                           'literalValue' => ' ',
                           'next' => 
                          LoggerPatternConverterMessage::__set_state(array(
                             'next' => 
                            LoggerPatternConverterNewLine::__set_state(array(
                               'next' => NULL,
                               'formattingInfo' => 
                              LoggerFormattingInfo::__set_state(array(
                                 'min' => 0,
                                 'max' => 9223372036854775807,
                                 'padLeft' => true,
                                 'trimLeft' => false,
                              )),
                               'option' => '',
                            )),
                             'formattingInfo' => 
                            LoggerFormattingInfo::__set_state(array(
                               'min' => 0,
                               'max' => 9223372036854775807,
                               'padLeft' => true,
                               'trimLeft' => false,
                            )),
                             'option' => '',
                          )),
                           'formattingInfo' => NULL,
                           'option' => NULL,
                        )),
                         'formattingInfo' => 
                        LoggerFormattingInfo::__set_state(array(
                           'min' => 0,
                           'max' => 9223372036854775807,
                           'padLeft' => true,
                           'trimLeft' => false,
                        )),
                         'option' => '',
                      )),
                       'formattingInfo' => NULL,
                       'option' => NULL,
                    )),
                     'formattingInfo' => 
                    LoggerFormattingInfo::__set_state(array(
                       'min' => 5,
                       'max' => 9223372036854775807,
                       'padLeft' => false,
                       'trimLeft' => false,
                    )),
                     'option' => '',
                  )),
                   'formattingInfo' => NULL,
                   'option' => NULL,
                )),
                 'formattingInfo' => 
                LoggerFormattingInfo::__set_state(array(
                   'min' => 0,
                   'max' => 9223372036854775807,
                   'padLeft' => true,
                   'trimLeft' => false,
                )),
                 'option' => '',
              )),
            )),
             'name' => 'A1',
             'threshold' => NULL,
             'requiresLayout' => true,
          )),
        ),
      )),
       'appenders' => 
      array (
      ),
    )),
     'column_fields' => 
    TrackableObject::__set_state(array(
       'storage' => 
      array (
        'pt_origen' => 'Leonardo rivero',
        'pt_tema' => 'Trabajadores',
        'pt_grupo' => '2',
        'pt_temavtiger' => '768',
        'CreatedTime' => '2022-12-06 11:39:32',
        'ModifiedTime' => '2022-12-06 17:43:41',
        'pt_motivo' => 'Vtiger EMPRESA (corto)',
        'tags' => '',
        'record_id' => '1406',
        'record_module' => 'Parametrizaciones',
        'id' => '1406',
      ),
       'trackingEnabled' => true,
       'tracking' => true,
       'changed' => 
      array (
        0 => 'id',
      ),
    )),
     'IsCustomModule' => true,
     'sortby_fields' => 
    array (
    ),
     'required_fields' => 
    array (
      'assigned_user_id' => 1,
    ),
     'special_functions' => 
    array (
      0 => 'set_import_assigned_user',
    ),
     'ownedby' => NULL,
     'recordSource' => 'CRM',
     '__inactive_fields_filtered' => false,
     'moduleName' => 'Parametrizaciones',
     'id' => '1406',
  )),
))
params => array (
  'tema' => false,
  'motivo' => 'Vtiger EMPRESA (corto)',
  'origen' => 'Leonardo Rivero',
)
rs => array (
  0 => '1406',
  'crmid' => '1406',
)
models => Parametrizaciones_Record_Model::__set_state(array(
   'module' => 
  Vtiger_Module_Model::__set_state(array(
     'blocks' => false,
     'nameFields' => false,
     'moduleMeta' => false,
     'fields' => false,
     'relations' => NULL,
     'id' => '63',
     'name' => 'Parametrizaciones',
     'label' => 'Parametrizaciones',
     'version' => '0',
     'minversion' => false,
     'maxversion' => false,
     'presence' => '0',
     'ownedby' => '0',
     'tabsequence' => '-1',
     'parent' => 'TOOLS',
     'customized' => '1',
     'trial' => '0',
     'isentitytype' => '1',
     'entityidcolumn' => false,
     'entityidfield' => false,
     'basetable' => false,
     'basetableid' => false,
     'customtable' => false,
     'grouptable' => false,
     'fieldtable' => false,
     'allowDuplicates' => '1',
     'isSyncable' => '0',
     'syncActionForDuplicate' => '1',
     'source' => 'custom',
  )),
   'valueMap' => 
  TrackableObject::__set_state(array(
     'storage' => 
    array (
      'pt_origen' => 'Leonardo rivero',
      'pt_tema' => 'Trabajadores',
      'pt_grupo' => '2',
      'pt_temavtiger' => '768',
      'CreatedTime' => '2022-12-06 11:39:32',
      'ModifiedTime' => '2022-12-06 17:43:41',
      'pt_motivo' => 'Vtiger EMPRESA (corto)',
      'tags' => '',
      'record_id' => '1406',
      'record_module' => 'Parametrizaciones',
      'id' => '1406',
    ),
     'trackingEnabled' => true,
     'tracking' => true,
     'changed' => 
    array (
      0 => 'id',
    ),
  )),
   'entity' => 
  Parametrizaciones::__set_state(array(
     'table_name' => 'vtiger_parametrizaciones',
     'table_index' => 'parametrizacionesid',
     'customFieldTable' => 
    array (
      0 => 'vtiger_parametrizacionescf',
      1 => 'parametrizacionesid',
    ),
     'tab_name' => 
    array (
      0 => 'vtiger_crmentity',
      1 => 'vtiger_parametrizaciones',
      2 => 'vtiger_parametrizacionescf',
      3 => 'vtiger_crmentity_user_field',
    ),
     'tab_name_index' => 
    array (
      'vtiger_crmentity' => 'crmid',
      'vtiger_parametrizaciones' => 'parametrizacionesid',
      'vtiger_parametrizacionescf' => 'parametrizacionesid',
      'vtiger_crmentity_user_field' => 'recordid',
    ),
     'list_fields' => 
    array (
      'parametrizacionesid' => 
      array (
        0 => 'parametrizaciones',
        1 => '<entitycolumn>',
      ),
      'Assigned To' => 
      array (
        0 => 'crmentity',
        1 => 'smownerid',
      ),
    ),
     'list_fields_name' => 
    array (
      'parametrizacionesid' => 'parametrizacionesid',
      'Assigned To' => 'assigned_user_id',
    ),
     'list_link_field' => 'parametrizacionesid',
     'search_fields' => 
    array (
      'parametrizacionesid' => 
      array (
        0 => 'parametrizaciones',
        1 => '<entitycolumn>',
      ),
      'Assigned To' => 
      array (
        0 => 'vtiger_crmentity',
        1 => 'assigned_user_id',
      ),
    ),
     'search_fields_name' => 
    array (
      'parametrizacionesid' => 'parametrizacionesid',
      'Assigned To' => 'assigned_user_id',
    ),
     'popup_fields' => 
    array (
      0 => 'parametrizacionesid',
    ),
     'def_basicsearch_col' => 'parametrizacionesid',
     'def_detailview_recname' => 'parametrizacionesid',
     'mandatory_fields' => 
    array (
      0 => 'parametrizacionesid',
      1 => 'assigned_user_id',
    ),
     'default_order_by' => 'parametrizacionesid',
     'default_sort_order' => 'ASC',
     'db' => 
    PearDatabase::__set_state(array(
       'database' => 
      ADODB_mysqli::__set_state(array(
         'databaseType' => 'mysqli',
         'dataProvider' => 'mysql',
         'hasInsertID' => true,
         'hasAffectedRows' => true,
         'metaTablesSQL' => 'SELECT
			TABLE_NAME,
			CASE WHEN TABLE_TYPE = \'VIEW\' THEN \'V\' ELSE \'T\' END
		FROM INFORMATION_SCHEMA.TABLES
		WHERE TABLE_SCHEMA=',
         'metaColumnsSQL' => 'SHOW COLUMNS FROM `%s`',
         'fmtTimeStamp' => '\'Y-m-d H:i:s\'',
         'hasLimit' => true,
         'hasMoveFirst' => true,
         'hasGenID' => true,
         'isoDates' => true,
         'sysDate' => 'CURDATE()',
         'sysTimeStamp' => 'NOW()',
         'hasTransactions' => true,
         'forceNewConnect' => false,
         'poorAffectedRows' => true,
         'clientFlags' => 0,
         'substr' => 'substring',
         'port' => '3306',
         'socket' => '',
         '_bindInputArray' => false,
         'nameQuote' => '`',
         'optionFlags' => 
        array (
          0 => 
          array (
            0 => 5,
            1 => 0,
          ),
          1 => 
          array (
            0 => 8,
            1 => true,
          ),
        ),
         'arrayClass' => 'ADORecordSet_array_mysqli',
         'multiQuery' => false,
         '_genIDSQL' => 'update %s set id=LAST_INSERT_ID(id+1);',
         '_genSeqSQL' => 'create table if not exists %s (id int not null)',
         '_genSeqCountSQL' => 'select count(*) from %s',
         '_genSeq2SQL' => 'insert into %s values (%s)',
         '_dropSeqSQL' => 'drop table if exists %s',
         'database' => 'bps2',
         'host' => 'localhost',
         'user' => 'root',
         'password' => '',
         'debug' => false,
         'maxblobsize' => 262144,
         'concat_operator' => '+',
         'length' => 'length',
         'random' => 'rand()',
         'upperCase' => 'upper',
         'fmtDate' => '\'Y-m-d\'',
         'true' => '1',
         'false' => '0',
         'replaceQuote' => '\\\'',
         'charSet' => false,
         'metaDatabasesSQL' => '',
         'uniqueOrderBy' => false,
         'emptyDate' => '&nbsp;',
         'emptyTimeStamp' => '&nbsp;',
         'lastInsID' => false,
         'hasTop' => false,
         'readOnly' => false,
         'genID' => 0,
         'raiseErrorFn' => false,
         'cacheSecs' => 3600,
         'memCache' => false,
         'memCacheHost' => NULL,
         'memCachePort' => 11211,
         'memCacheCompress' => false,
         'sysUTimeStamp' => false,
         'noNullStrings' => false,
         'numCacheHits' => 0,
         'numCacheMisses' => 0,
         'pageExecuteCountRows' => true,
         'uniqueSort' => false,
         'leftOuter' => false,
         'rightOuter' => false,
         'ansiOuter' => false,
         'autoRollback' => false,
         'fnExecute' => false,
         'fnCacheExecute' => false,
         'blobEncodeType' => false,
         'rsPrefix' => 'ADORecordSet_',
         'autoCommit' => true,
         'transOff' => 0,
         'transCnt' => 0,
         'fetchMode' => false,
         'null2null' => 'null',
         'bulkBind' => false,
         '_oldRaiseFn' => false,
         '_transOK' => NULL,
         '_connectionID' => 
        mysqli::__set_state(array(
           'affected_rows' => NULL,
           'client_info' => NULL,
           'client_version' => NULL,
           'connect_errno' => NULL,
           'connect_error' => NULL,
           'errno' => NULL,
           'error' => NULL,
           'error_list' => NULL,
           'field_count' => NULL,
           'host_info' => NULL,
           'info' => NULL,
           'insert_id' => NULL,
           'server_info' => NULL,
           'server_version' => NULL,
           'sqlstate' => NULL,
           'protocol_version' => NULL,
           'thread_id' => NULL,
           'warning_count' => NULL,
        )),
         '_errorMsg' => false,
         '_errorCode' => false,
         '_queryID' => 
        mysqli_result::__set_state(array(
           'current_field' => NULL,
           'field_count' => NULL,
           'lengths' => NULL,
           'num_rows' => NULL,
           'type' => NULL,
        )),
         '_isPersistentConnection' => true,
         '_evalAll' => false,
         '_affected' => false,
         '_logsql' => false,
         '_transmode' => '',
         'connectionParameters' => 
        array (
        ),
         'databaseName' => 'bps2',
      )),
       'dieOnError' => false,
       'dbType' => 'mysqli',
       'dbHostName' => 'localhost:3306',
       'dbName' => 'bps2',
       'dbOptions' => 
      array (
        'persistent' => true,
        'autofree' => false,
        'debug' => 0,
        'seqname_format' => '%s_seq',
        'portability' => 0,
        'ssl' => false,
      ),
       'userName' => 'root',
       'userPassword' => '',
       'query_time' => 0,
       'log' => 
      Logger::__set_state(array(
         'additive' => true,
         'fqcn' => 'Logger',
         'level' => NULL,
         'name' => 'PearDatabase_',
         'parent' => 
        LoggerRoot::__set_state(array(
           'additive' => true,
           'fqcn' => 'Logger',
           'level' => 
          LoggerLevel::__set_state(array(
             'level' => 10000,
             'levelStr' => 'DEBUG',
             'syslogEquivalent' => 6,
          )),
           'name' => 'root',
           'parent' => NULL,
           'appenders' => 
          array (
            'A1' => 
            LoggerAppenderRollingFile::__set_state(array(
               'maxFileSize' => 10485760,
               'maxBackupIndex' => 10,
               'compress' => false,
               'clearConditional' => true,
               'locking' => true,
               'append' => true,
               'file' => 'logs/vtigercrm.log',
               'fp' => NULL,
               'closed' => false,
               'filter' => NULL,
               'layout' => 
              LoggerLayoutPattern::__set_state(array(
                 'pattern' => '%date %-5level %logger %message%newline',
                 'converterMap' => 
                array (
                  'c' => 'LoggerPatternConverterLogger',
                  'lo' => 'LoggerPatternConverterLogger',
                  'logger' => 'LoggerPatternConverterLogger',
                  'C' => 'LoggerPatternConverterClass',
                  'class' => 'LoggerPatternConverterClass',
                  'cookie' => 'LoggerPatternConverterCookie',
                  'd' => 'LoggerPatternConverterDate',
                  'date' => 'LoggerPatternConverterDate',
                  'e' => 'LoggerPatternConverterEnvironment',
                  'env' => 'LoggerPatternConverterEnvironment',
                  'ex' => 'LoggerPatternConverterThrowable',
                  'exception' => 'LoggerPatternConverterThrowable',
                  'throwable' => 'LoggerPatternConverterThrowable',
                  'F' => 'LoggerPatternConverterFile',
                  'file' => 'LoggerPatternConverterFile',
                  'l' => 'LoggerPatternConverterLocation',
                  'location' => 'LoggerPatternConverterLocation',
                  'L' => 'LoggerPatternConverterLine',
                  'line' => 'LoggerPatternConverterLine',
                  'm' => 'LoggerPatternConverterMessage',
                  'msg' => 'LoggerPatternConverterMessage',
                  'message' => 'LoggerPatternConverterMessage',
                  'M' => 'LoggerPatternConverterMethod',
                  'method' => 'LoggerPatternConverterMethod',
                  'n' => 'LoggerPatternConverterNewLine',
                  'newline' => 'LoggerPatternConverterNewLine',
                  'p' => 'LoggerPatternConverterLevel',
                  'le' => 'LoggerPatternConverterLevel',
                  'level' => 'LoggerPatternConverterLevel',
                  'r' => 'LoggerPatternConverterRelative',
                  'relative' => 'LoggerPatternConverterRelative',
                  'req' => 'LoggerPatternConverterRequest',
                  'request' => 'LoggerPatternConverterRequest',
                  's' => 'LoggerPatternConverterServer',
                  'server' => 'LoggerPatternConverterServer',
                  'ses' => 'LoggerPatternConverterSession',
                  'session' => 'LoggerPatternConverterSession',
                  'sid' => 'LoggerPatternConverterSessionID',
                  'sessionid' => 'LoggerPatternConverterSessionID',
                  't' => 'LoggerPatternConverterProcess',
                  'pid' => 'LoggerPatternConverterProcess',
                  'process' => 'LoggerPatternConverterProcess',
                  'x' => 'LoggerPatternConverterNDC',
                  'ndc' => 'LoggerPatternConverterNDC',
                  'X' => 'LoggerPatternConverterMDC',
                  'mdc' => 'LoggerPatternConverterMDC',
                ),
                 'head' => 
                LoggerPatternConverterDate::__set_state(array(
                   'format' => 'c',
                   'specials' => 
                  array (
                    'ISO8601' => 'c',
                    'ABSOLUTE' => 'H:i:s',
                    'DATE' => 'd M Y H:i:s.u',
                  ),
                   'useLocalDate' => false,
                   'next' => 
                  LoggerPatternConverterLiteral::__set_state(array(
                     'literalValue' => ' ',
                     'next' => 
                    LoggerPatternConverterLevel::__set_state(array(
                       'next' => 
                      LoggerPatternConverterLiteral::__set_state(array(
                         'literalValue' => ' ',
                         'next' => 
                        LoggerPatternConverterLogger::__set_state(array(
                           'length' => NULL,
                           'cache' => 
                          array (
                            'VT' => 'VT',
                            'user' => 'user',
                          ),
                           'next' => 
                          LoggerPatternConverterLiteral::__set_state(array(
                             'literalValue' => ' ',
                             'next' => 
                            LoggerPatternConverterMessage::__set_state(array(
                               'next' => 
                              LoggerPatternConverterNewLine::__set_state(array(
                                 'next' => NULL,
                                 'formattingInfo' => 
                                LoggerFormattingInfo::__set_state(array(
                                   'min' => 0,
                                   'max' => 9223372036854775807,
                                   'padLeft' => true,
                                   'trimLeft' => false,
                                )),
                                 'option' => '',
                              )),
                               'formattingInfo' => 
                              LoggerFormattingInfo::__set_state(array(
                                 'min' => 0,
                                 'max' => 9223372036854775807,
                                 'padLeft' => true,
                                 'trimLeft' => false,
                              )),
                               'option' => '',
                            )),
                             'formattingInfo' => NULL,
                             'option' => NULL,
                          )),
                           'formattingInfo' => 
                          LoggerFormattingInfo::__set_state(array(
                             'min' => 0,
                             'max' => 9223372036854775807,
                             'padLeft' => true,
                             'trimLeft' => false,
                          )),
                           'option' => '',
                        )),
                         'formattingInfo' => NULL,
                         'option' => NULL,
                      )),
                       'formattingInfo' => 
                      LoggerFormattingInfo::__set_state(array(
                         'min' => 5,
                         'max' => 9223372036854775807,
                         'padLeft' => false,
                         'trimLeft' => false,
                      )),
                       'option' => '',
                    )),
                     'formattingInfo' => NULL,
                     'option' => NULL,
                  )),
                   'formattingInfo' => 
                  LoggerFormattingInfo::__set_state(array(
                     'min' => 0,
                     'max' => 9223372036854775807,
                     'padLeft' => true,
                     'trimLeft' => false,
                  )),
                   'option' => '',
                )),
              )),
               'name' => 'A1',
               'threshold' => NULL,
               'requiresLayout' => true,
            )),
          ),
        )),
         'appenders' => 
        array (
        ),
      )),
       'lastmysqlrow' => -1,
       'enableSQLlog' => false,
       'continueInstallOnError' => true,
       'avoidPreparedSql' => false,
       'isdb_default_utf8_charset' => true,
       'req_flist' => NULL,
       'logSqlTimingID' => false,
    )),
     'log' => 
    Logger::__set_state(array(
       'additive' => true,
       'fqcn' => 'Logger',
       'level' => NULL,
       'name' => 'VT',
       'parent' => 
      LoggerRoot::__set_state(array(
         'additive' => true,
         'fqcn' => 'Logger',
         'level' => 
        LoggerLevel::__set_state(array(
           'level' => 10000,
           'levelStr' => 'DEBUG',
           'syslogEquivalent' => 6,
        )),
         'name' => 'root',
         'parent' => NULL,
         'appenders' => 
        array (
          'A1' => 
          LoggerAppenderRollingFile::__set_state(array(
             'maxFileSize' => 10485760,
             'maxBackupIndex' => 10,
             'compress' => false,
             'clearConditional' => true,
             'locking' => true,
             'append' => true,
             'file' => 'logs/vtigercrm.log',
             'fp' => NULL,
             'closed' => false,
             'filter' => NULL,
             'layout' => 
            LoggerLayoutPattern::__set_state(array(
               'pattern' => '%date %-5level %logger %message%newline',
               'converterMap' => 
              array (
                'c' => 'LoggerPatternConverterLogger',
                'lo' => 'LoggerPatternConverterLogger',
                'logger' => 'LoggerPatternConverterLogger',
                'C' => 'LoggerPatternConverterClass',
                'class' => 'LoggerPatternConverterClass',
                'cookie' => 'LoggerPatternConverterCookie',
                'd' => 'LoggerPatternConverterDate',
                'date' => 'LoggerPatternConverterDate',
                'e' => 'LoggerPatternConverterEnvironment',
                'env' => 'LoggerPatternConverterEnvironment',
                'ex' => 'LoggerPatternConverterThrowable',
                'exception' => 'LoggerPatternConverterThrowable',
                'throwable' => 'LoggerPatternConverterThrowable',
                'F' => 'LoggerPatternConverterFile',
                'file' => 'LoggerPatternConverterFile',
                'l' => 'LoggerPatternConverterLocation',
                'location' => 'LoggerPatternConverterLocation',
                'L' => 'LoggerPatternConverterLine',
                'line' => 'LoggerPatternConverterLine',
                'm' => 'LoggerPatternConverterMessage',
                'msg' => 'LoggerPatternConverterMessage',
                'message' => 'LoggerPatternConverterMessage',
                'M' => 'LoggerPatternConverterMethod',
                'method' => 'LoggerPatternConverterMethod',
                'n' => 'LoggerPatternConverterNewLine',
                'newline' => 'LoggerPatternConverterNewLine',
                'p' => 'LoggerPatternConverterLevel',
                'le' => 'LoggerPatternConverterLevel',
                'level' => 'LoggerPatternConverterLevel',
                'r' => 'LoggerPatternConverterRelative',
                'relative' => 'LoggerPatternConverterRelative',
                'req' => 'LoggerPatternConverterRequest',
                'request' => 'LoggerPatternConverterRequest',
                's' => 'LoggerPatternConverterServer',
                'server' => 'LoggerPatternConverterServer',
                'ses' => 'LoggerPatternConverterSession',
                'session' => 'LoggerPatternConverterSession',
                'sid' => 'LoggerPatternConverterSessionID',
                'sessionid' => 'LoggerPatternConverterSessionID',
                't' => 'LoggerPatternConverterProcess',
                'pid' => 'LoggerPatternConverterProcess',
                'process' => 'LoggerPatternConverterProcess',
                'x' => 'LoggerPatternConverterNDC',
                'ndc' => 'LoggerPatternConverterNDC',
                'X' => 'LoggerPatternConverterMDC',
                'mdc' => 'LoggerPatternConverterMDC',
              ),
               'head' => 
              LoggerPatternConverterDate::__set_state(array(
                 'format' => 'c',
                 'specials' => 
                array (
                  'ISO8601' => 'c',
                  'ABSOLUTE' => 'H:i:s',
                  'DATE' => 'd M Y H:i:s.u',
                ),
                 'useLocalDate' => false,
                 'next' => 
                LoggerPatternConverterLiteral::__set_state(array(
                   'literalValue' => ' ',
                   'next' => 
                  LoggerPatternConverterLevel::__set_state(array(
                     'next' => 
                    LoggerPatternConverterLiteral::__set_state(array(
                       'literalValue' => ' ',
                       'next' => 
                      LoggerPatternConverterLogger::__set_state(array(
                         'length' => NULL,
                         'cache' => 
                        array (
                          'VT' => 'VT',
                          'user' => 'user',
                        ),
                         'next' => 
                        LoggerPatternConverterLiteral::__set_state(array(
                           'literalValue' => ' ',
                           'next' => 
                          LoggerPatternConverterMessage::__set_state(array(
                             'next' => 
                            LoggerPatternConverterNewLine::__set_state(array(
                               'next' => NULL,
                               'formattingInfo' => 
                              LoggerFormattingInfo::__set_state(array(
                                 'min' => 0,
                                 'max' => 9223372036854775807,
                                 'padLeft' => true,
                                 'trimLeft' => false,
                              )),
                               'option' => '',
                            )),
                             'formattingInfo' => 
                            LoggerFormattingInfo::__set_state(array(
                               'min' => 0,
                               'max' => 9223372036854775807,
                               'padLeft' => true,
                               'trimLeft' => false,
                            )),
                             'option' => '',
                          )),
                           'formattingInfo' => NULL,
                           'option' => NULL,
                        )),
                         'formattingInfo' => 
                        LoggerFormattingInfo::__set_state(array(
                           'min' => 0,
                           'max' => 9223372036854775807,
                           'padLeft' => true,
                           'trimLeft' => false,
                        )),
                         'option' => '',
                      )),
                       'formattingInfo' => NULL,
                       'option' => NULL,
                    )),
                     'formattingInfo' => 
                    LoggerFormattingInfo::__set_state(array(
                       'min' => 5,
                       'max' => 9223372036854775807,
                       'padLeft' => false,
                       'trimLeft' => false,
                    )),
                     'option' => '',
                  )),
                   'formattingInfo' => NULL,
                   'option' => NULL,
                )),
                 'formattingInfo' => 
                LoggerFormattingInfo::__set_state(array(
                   'min' => 0,
                   'max' => 9223372036854775807,
                   'padLeft' => true,
                   'trimLeft' => false,
                )),
                 'option' => '',
              )),
            )),
             'name' => 'A1',
             'threshold' => NULL,
             'requiresLayout' => true,
          )),
        ),
      )),
       'appenders' => 
      array (
      ),
    )),
     'column_fields' => 
    TrackableObject::__set_state(array(
       'storage' => 
      array (
        'pt_origen' => 'Leonardo rivero',
        'pt_tema' => 'Trabajadores',
        'pt_grupo' => '2',
        'pt_temavtiger' => '768',
        'CreatedTime' => '2022-12-06 11:39:32',
        'ModifiedTime' => '2022-12-06 17:43:41',
        'pt_motivo' => 'Vtiger EMPRESA (corto)',
        'tags' => '',
        'record_id' => '1406',
        'record_module' => 'Parametrizaciones',
        'id' => '1406',
      ),
       'trackingEnabled' => true,
       'tracking' => true,
       'changed' => 
      array (
        0 => 'id',
      ),
    )),
     'IsCustomModule' => true,
     'sortby_fields' => 
    array (
    ),
     'required_fields' => 
    array (
      'assigned_user_id' => 1,
    ),
     'special_functions' => 
    array (
      0 => 'set_import_assigned_user',
    ),
     'ownedby' => NULL,
     'recordSource' => 'CRM',
     '__inactive_fields_filtered' => false,
     'moduleName' => 'Parametrizaciones',
     'id' => '1406',
  )),
))
params => array (
  'tema' => false,
  'motivo' => 'Vtiger EMPRESA (corto)',
  'origen' => 'Leonardo Rivero',
)
rs => array (
  0 => '1406',
  'crmid' => '1406',
)
models => Parametrizaciones_Record_Model::__set_state(array(
   'module' => 
  Vtiger_Module_Model::__set_state(array(
     'blocks' => false,
     'nameFields' => false,
     'moduleMeta' => false,
     'fields' => false,
     'relations' => NULL,
     'id' => '63',
     'name' => 'Parametrizaciones',
     'label' => 'Parametrizaciones',
     'version' => '0',
     'minversion' => false,
     'maxversion' => false,
     'presence' => '0',
     'ownedby' => '0',
     'tabsequence' => '-1',
     'parent' => 'TOOLS',
     'customized' => '1',
     'trial' => '0',
     'isentitytype' => '1',
     'entityidcolumn' => false,
     'entityidfield' => false,
     'basetable' => false,
     'basetableid' => false,
     'customtable' => false,
     'grouptable' => false,
     'fieldtable' => false,
     'allowDuplicates' => '1',
     'isSyncable' => '0',
     'syncActionForDuplicate' => '1',
     'source' => 'custom',
  )),
   'valueMap' => 
  TrackableObject::__set_state(array(
     'storage' => 
    array (
      'pt_origen' => 'Leonardo rivero',
      'pt_tema' => 'Trabajadores',
      'pt_grupo' => '2',
      'pt_temavtiger' => '768',
      'CreatedTime' => '2022-12-06 11:39:32',
      'ModifiedTime' => '2022-12-06 17:43:41',
      'pt_motivo' => 'Vtiger EMPRESA (corto)',
      'tags' => '',
      'record_id' => '1406',
      'record_module' => 'Parametrizaciones',
      'id' => '1406',
    ),
     'trackingEnabled' => true,
     'tracking' => true,
     'changed' => 
    array (
      0 => 'id',
    ),
  )),
   'entity' => 
  Parametrizaciones::__set_state(array(
     'table_name' => 'vtiger_parametrizaciones',
     'table_index' => 'parametrizacionesid',
     'customFieldTable' => 
    array (
      0 => 'vtiger_parametrizacionescf',
      1 => 'parametrizacionesid',
    ),
     'tab_name' => 
    array (
      0 => 'vtiger_crmentity',
      1 => 'vtiger_parametrizaciones',
      2 => 'vtiger_parametrizacionescf',
      3 => 'vtiger_crmentity_user_field',
    ),
     'tab_name_index' => 
    array (
      'vtiger_crmentity' => 'crmid',
      'vtiger_parametrizaciones' => 'parametrizacionesid',
      'vtiger_parametrizacionescf' => 'parametrizacionesid',
      'vtiger_crmentity_user_field' => 'recordid',
    ),
     'list_fields' => 
    array (
      'parametrizacionesid' => 
      array (
        0 => 'parametrizaciones',
        1 => '<entitycolumn>',
      ),
      'Assigned To' => 
      array (
        0 => 'crmentity',
        1 => 'smownerid',
      ),
    ),
     'list_fields_name' => 
    array (
      'parametrizacionesid' => 'parametrizacionesid',
      'Assigned To' => 'assigned_user_id',
    ),
     'list_link_field' => 'parametrizacionesid',
     'search_fields' => 
    array (
      'parametrizacionesid' => 
      array (
        0 => 'parametrizaciones',
        1 => '<entitycolumn>',
      ),
      'Assigned To' => 
      array (
        0 => 'vtiger_crmentity',
        1 => 'assigned_user_id',
      ),
    ),
     'search_fields_name' => 
    array (
      'parametrizacionesid' => 'parametrizacionesid',
      'Assigned To' => 'assigned_user_id',
    ),
     'popup_fields' => 
    array (
      0 => 'parametrizacionesid',
    ),
     'def_basicsearch_col' => 'parametrizacionesid',
     'def_detailview_recname' => 'parametrizacionesid',
     'mandatory_fields' => 
    array (
      0 => 'parametrizacionesid',
      1 => 'assigned_user_id',
    ),
     'default_order_by' => 'parametrizacionesid',
     'default_sort_order' => 'ASC',
     'db' => 
    PearDatabase::__set_state(array(
       'database' => 
      ADODB_mysqli::__set_state(array(
         'databaseType' => 'mysqli',
         'dataProvider' => 'mysql',
         'hasInsertID' => true,
         'hasAffectedRows' => true,
         'metaTablesSQL' => 'SELECT
			TABLE_NAME,
			CASE WHEN TABLE_TYPE = \'VIEW\' THEN \'V\' ELSE \'T\' END
		FROM INFORMATION_SCHEMA.TABLES
		WHERE TABLE_SCHEMA=',
         'metaColumnsSQL' => 'SHOW COLUMNS FROM `%s`',
         'fmtTimeStamp' => '\'Y-m-d H:i:s\'',
         'hasLimit' => true,
         'hasMoveFirst' => true,
         'hasGenID' => true,
         'isoDates' => true,
         'sysDate' => 'CURDATE()',
         'sysTimeStamp' => 'NOW()',
         'hasTransactions' => true,
         'forceNewConnect' => false,
         'poorAffectedRows' => true,
         'clientFlags' => 0,
         'substr' => 'substring',
         'port' => '3306',
         'socket' => '',
         '_bindInputArray' => false,
         'nameQuote' => '`',
         'optionFlags' => 
        array (
          0 => 
          array (
            0 => 5,
            1 => 0,
          ),
          1 => 
          array (
            0 => 8,
            1 => true,
          ),
        ),
         'arrayClass' => 'ADORecordSet_array_mysqli',
         'multiQuery' => false,
         '_genIDSQL' => 'update %s set id=LAST_INSERT_ID(id+1);',
         '_genSeqSQL' => 'create table if not exists %s (id int not null)',
         '_genSeqCountSQL' => 'select count(*) from %s',
         '_genSeq2SQL' => 'insert into %s values (%s)',
         '_dropSeqSQL' => 'drop table if exists %s',
         'database' => 'bps2',
         'host' => 'localhost',
         'user' => 'root',
         'password' => '',
         'debug' => false,
         'maxblobsize' => 262144,
         'concat_operator' => '+',
         'length' => 'length',
         'random' => 'rand()',
         'upperCase' => 'upper',
         'fmtDate' => '\'Y-m-d\'',
         'true' => '1',
         'false' => '0',
         'replaceQuote' => '\\\'',
         'charSet' => false,
         'metaDatabasesSQL' => '',
         'uniqueOrderBy' => false,
         'emptyDate' => '&nbsp;',
         'emptyTimeStamp' => '&nbsp;',
         'lastInsID' => false,
         'hasTop' => false,
         'readOnly' => false,
         'genID' => 0,
         'raiseErrorFn' => false,
         'cacheSecs' => 3600,
         'memCache' => false,
         'memCacheHost' => NULL,
         'memCachePort' => 11211,
         'memCacheCompress' => false,
         'sysUTimeStamp' => false,
         'noNullStrings' => false,
         'numCacheHits' => 0,
         'numCacheMisses' => 0,
         'pageExecuteCountRows' => true,
         'uniqueSort' => false,
         'leftOuter' => false,
         'rightOuter' => false,
         'ansiOuter' => false,
         'autoRollback' => false,
         'fnExecute' => false,
         'fnCacheExecute' => false,
         'blobEncodeType' => false,
         'rsPrefix' => 'ADORecordSet_',
         'autoCommit' => true,
         'transOff' => 0,
         'transCnt' => 0,
         'fetchMode' => false,
         'null2null' => 'null',
         'bulkBind' => false,
         '_oldRaiseFn' => false,
         '_transOK' => NULL,
         '_connectionID' => 
        mysqli::__set_state(array(
           'affected_rows' => NULL,
           'client_info' => NULL,
           'client_version' => NULL,
           'connect_errno' => NULL,
           'connect_error' => NULL,
           'errno' => NULL,
           'error' => NULL,
           'error_list' => NULL,
           'field_count' => NULL,
           'host_info' => NULL,
           'info' => NULL,
           'insert_id' => NULL,
           'server_info' => NULL,
           'server_version' => NULL,
           'sqlstate' => NULL,
           'protocol_version' => NULL,
           'thread_id' => NULL,
           'warning_count' => NULL,
        )),
         '_errorMsg' => false,
         '_errorCode' => false,
         '_queryID' => 
        mysqli_result::__set_state(array(
           'current_field' => NULL,
           'field_count' => NULL,
           'lengths' => NULL,
           'num_rows' => NULL,
           'type' => NULL,
        )),
         '_isPersistentConnection' => true,
         '_evalAll' => false,
         '_affected' => false,
         '_logsql' => false,
         '_transmode' => '',
         'connectionParameters' => 
        array (
        ),
         'databaseName' => 'bps2',
      )),
       'dieOnError' => false,
       'dbType' => 'mysqli',
       'dbHostName' => 'localhost:3306',
       'dbName' => 'bps2',
       'dbOptions' => 
      array (
        'persistent' => true,
        'autofree' => false,
        'debug' => 0,
        'seqname_format' => '%s_seq',
        'portability' => 0,
        'ssl' => false,
      ),
       'userName' => 'root',
       'userPassword' => '',
       'query_time' => 0,
       'log' => 
      Logger::__set_state(array(
         'additive' => true,
         'fqcn' => 'Logger',
         'level' => NULL,
         'name' => 'PearDatabase_',
         'parent' => 
        LoggerRoot::__set_state(array(
           'additive' => true,
           'fqcn' => 'Logger',
           'level' => 
          LoggerLevel::__set_state(array(
             'level' => 10000,
             'levelStr' => 'DEBUG',
             'syslogEquivalent' => 6,
          )),
           'name' => 'root',
           'parent' => NULL,
           'appenders' => 
          array (
            'A1' => 
            LoggerAppenderRollingFile::__set_state(array(
               'maxFileSize' => 10485760,
               'maxBackupIndex' => 10,
               'compress' => false,
               'clearConditional' => true,
               'locking' => true,
               'append' => true,
               'file' => 'logs/vtigercrm.log',
               'fp' => NULL,
               'closed' => false,
               'filter' => NULL,
               'layout' => 
              LoggerLayoutPattern::__set_state(array(
                 'pattern' => '%date %-5level %logger %message%newline',
                 'converterMap' => 
                array (
                  'c' => 'LoggerPatternConverterLogger',
                  'lo' => 'LoggerPatternConverterLogger',
                  'logger' => 'LoggerPatternConverterLogger',
                  'C' => 'LoggerPatternConverterClass',
                  'class' => 'LoggerPatternConverterClass',
                  'cookie' => 'LoggerPatternConverterCookie',
                  'd' => 'LoggerPatternConverterDate',
                  'date' => 'LoggerPatternConverterDate',
                  'e' => 'LoggerPatternConverterEnvironment',
                  'env' => 'LoggerPatternConverterEnvironment',
                  'ex' => 'LoggerPatternConverterThrowable',
                  'exception' => 'LoggerPatternConverterThrowable',
                  'throwable' => 'LoggerPatternConverterThrowable',
                  'F' => 'LoggerPatternConverterFile',
                  'file' => 'LoggerPatternConverterFile',
                  'l' => 'LoggerPatternConverterLocation',
                  'location' => 'LoggerPatternConverterLocation',
                  'L' => 'LoggerPatternConverterLine',
                  'line' => 'LoggerPatternConverterLine',
                  'm' => 'LoggerPatternConverterMessage',
                  'msg' => 'LoggerPatternConverterMessage',
                  'message' => 'LoggerPatternConverterMessage',
                  'M' => 'LoggerPatternConverterMethod',
                  'method' => 'LoggerPatternConverterMethod',
                  'n' => 'LoggerPatternConverterNewLine',
                  'newline' => 'LoggerPatternConverterNewLine',
                  'p' => 'LoggerPatternConverterLevel',
                  'le' => 'LoggerPatternConverterLevel',
                  'level' => 'LoggerPatternConverterLevel',
                  'r' => 'LoggerPatternConverterRelative',
                  'relative' => 'LoggerPatternConverterRelative',
                  'req' => 'LoggerPatternConverterRequest',
                  'request' => 'LoggerPatternConverterRequest',
                  's' => 'LoggerPatternConverterServer',
                  'server' => 'LoggerPatternConverterServer',
                  'ses' => 'LoggerPatternConverterSession',
                  'session' => 'LoggerPatternConverterSession',
                  'sid' => 'LoggerPatternConverterSessionID',
                  'sessionid' => 'LoggerPatternConverterSessionID',
                  't' => 'LoggerPatternConverterProcess',
                  'pid' => 'LoggerPatternConverterProcess',
                  'process' => 'LoggerPatternConverterProcess',
                  'x' => 'LoggerPatternConverterNDC',
                  'ndc' => 'LoggerPatternConverterNDC',
                  'X' => 'LoggerPatternConverterMDC',
                  'mdc' => 'LoggerPatternConverterMDC',
                ),
                 'head' => 
                LoggerPatternConverterDate::__set_state(array(
                   'format' => 'c',
                   'specials' => 
                  array (
                    'ISO8601' => 'c',
                    'ABSOLUTE' => 'H:i:s',
                    'DATE' => 'd M Y H:i:s.u',
                  ),
                   'useLocalDate' => false,
                   'next' => 
                  LoggerPatternConverterLiteral::__set_state(array(
                     'literalValue' => ' ',
                     'next' => 
                    LoggerPatternConverterLevel::__set_state(array(
                       'next' => 
                      LoggerPatternConverterLiteral::__set_state(array(
                         'literalValue' => ' ',
                         'next' => 
                        LoggerPatternConverterLogger::__set_state(array(
                           'length' => NULL,
                           'cache' => 
                          array (
                            'VT' => 'VT',
                            'user' => 'user',
                          ),
                           'next' => 
                          LoggerPatternConverterLiteral::__set_state(array(
                             'literalValue' => ' ',
                             'next' => 
                            LoggerPatternConverterMessage::__set_state(array(
                               'next' => 
                              LoggerPatternConverterNewLine::__set_state(array(
                                 'next' => NULL,
                                 'formattingInfo' => 
                                LoggerFormattingInfo::__set_state(array(
                                   'min' => 0,
                                   'max' => 9223372036854775807,
                                   'padLeft' => true,
                                   'trimLeft' => false,
                                )),
                                 'option' => '',
                              )),
                               'formattingInfo' => 
                              LoggerFormattingInfo::__set_state(array(
                                 'min' => 0,
                                 'max' => 9223372036854775807,
                                 'padLeft' => true,
                                 'trimLeft' => false,
                              )),
                               'option' => '',
                            )),
                             'formattingInfo' => NULL,
                             'option' => NULL,
                          )),
                           'formattingInfo' => 
                          LoggerFormattingInfo::__set_state(array(
                             'min' => 0,
                             'max' => 9223372036854775807,
                             'padLeft' => true,
                             'trimLeft' => false,
                          )),
                           'option' => '',
                        )),
                         'formattingInfo' => NULL,
                         'option' => NULL,
                      )),
                       'formattingInfo' => 
                      LoggerFormattingInfo::__set_state(array(
                         'min' => 5,
                         'max' => 9223372036854775807,
                         'padLeft' => false,
                         'trimLeft' => false,
                      )),
                       'option' => '',
                    )),
                     'formattingInfo' => NULL,
                     'option' => NULL,
                  )),
                   'formattingInfo' => 
                  LoggerFormattingInfo::__set_state(array(
                     'min' => 0,
                     'max' => 9223372036854775807,
                     'padLeft' => true,
                     'trimLeft' => false,
                  )),
                   'option' => '',
                )),
              )),
               'name' => 'A1',
               'threshold' => NULL,
               'requiresLayout' => true,
            )),
          ),
        )),
         'appenders' => 
        array (
        ),
      )),
       'lastmysqlrow' => -1,
       'enableSQLlog' => false,
       'continueInstallOnError' => true,
       'avoidPreparedSql' => false,
       'isdb_default_utf8_charset' => true,
       'req_flist' => NULL,
       'logSqlTimingID' => false,
    )),
     'log' => 
    Logger::__set_state(array(
       'additive' => true,
       'fqcn' => 'Logger',
       'level' => NULL,
       'name' => 'VT',
       'parent' => 
      LoggerRoot::__set_state(array(
         'additive' => true,
         'fqcn' => 'Logger',
         'level' => 
        LoggerLevel::__set_state(array(
           'level' => 10000,
           'levelStr' => 'DEBUG',
           'syslogEquivalent' => 6,
        )),
         'name' => 'root',
         'parent' => NULL,
         'appenders' => 
        array (
          'A1' => 
          LoggerAppenderRollingFile::__set_state(array(
             'maxFileSize' => 10485760,
             'maxBackupIndex' => 10,
             'compress' => false,
             'clearConditional' => true,
             'locking' => true,
             'append' => true,
             'file' => 'logs/vtigercrm.log',
             'fp' => NULL,
             'closed' => false,
             'filter' => NULL,
             'layout' => 
            LoggerLayoutPattern::__set_state(array(
               'pattern' => '%date %-5level %logger %message%newline',
               'converterMap' => 
              array (
                'c' => 'LoggerPatternConverterLogger',
                'lo' => 'LoggerPatternConverterLogger',
                'logger' => 'LoggerPatternConverterLogger',
                'C' => 'LoggerPatternConverterClass',
                'class' => 'LoggerPatternConverterClass',
                'cookie' => 'LoggerPatternConverterCookie',
                'd' => 'LoggerPatternConverterDate',
                'date' => 'LoggerPatternConverterDate',
                'e' => 'LoggerPatternConverterEnvironment',
                'env' => 'LoggerPatternConverterEnvironment',
                'ex' => 'LoggerPatternConverterThrowable',
                'exception' => 'LoggerPatternConverterThrowable',
                'throwable' => 'LoggerPatternConverterThrowable',
                'F' => 'LoggerPatternConverterFile',
                'file' => 'LoggerPatternConverterFile',
                'l' => 'LoggerPatternConverterLocation',
                'location' => 'LoggerPatternConverterLocation',
                'L' => 'LoggerPatternConverterLine',
                'line' => 'LoggerPatternConverterLine',
                'm' => 'LoggerPatternConverterMessage',
                'msg' => 'LoggerPatternConverterMessage',
                'message' => 'LoggerPatternConverterMessage',
                'M' => 'LoggerPatternConverterMethod',
                'method' => 'LoggerPatternConverterMethod',
                'n' => 'LoggerPatternConverterNewLine',
                'newline' => 'LoggerPatternConverterNewLine',
                'p' => 'LoggerPatternConverterLevel',
                'le' => 'LoggerPatternConverterLevel',
                'level' => 'LoggerPatternConverterLevel',
                'r' => 'LoggerPatternConverterRelative',
                'relative' => 'LoggerPatternConverterRelative',
                'req' => 'LoggerPatternConverterRequest',
                'request' => 'LoggerPatternConverterRequest',
                's' => 'LoggerPatternConverterServer',
                'server' => 'LoggerPatternConverterServer',
                'ses' => 'LoggerPatternConverterSession',
                'session' => 'LoggerPatternConverterSession',
                'sid' => 'LoggerPatternConverterSessionID',
                'sessionid' => 'LoggerPatternConverterSessionID',
                't' => 'LoggerPatternConverterProcess',
                'pid' => 'LoggerPatternConverterProcess',
                'process' => 'LoggerPatternConverterProcess',
                'x' => 'LoggerPatternConverterNDC',
                'ndc' => 'LoggerPatternConverterNDC',
                'X' => 'LoggerPatternConverterMDC',
                'mdc' => 'LoggerPatternConverterMDC',
              ),
               'head' => 
              LoggerPatternConverterDate::__set_state(array(
                 'format' => 'c',
                 'specials' => 
                array (
                  'ISO8601' => 'c',
                  'ABSOLUTE' => 'H:i:s',
                  'DATE' => 'd M Y H:i:s.u',
                ),
                 'useLocalDate' => false,
                 'next' => 
                LoggerPatternConverterLiteral::__set_state(array(
                   'literalValue' => ' ',
                   'next' => 
                  LoggerPatternConverterLevel::__set_state(array(
                     'next' => 
                    LoggerPatternConverterLiteral::__set_state(array(
                       'literalValue' => ' ',
                       'next' => 
                      LoggerPatternConverterLogger::__set_state(array(
                         'length' => NULL,
                         'cache' => 
                        array (
                          'VT' => 'VT',
                          'user' => 'user',
                        ),
                         'next' => 
                        LoggerPatternConverterLiteral::__set_state(array(
                           'literalValue' => ' ',
                           'next' => 
                          LoggerPatternConverterMessage::__set_state(array(
                             'next' => 
                            LoggerPatternConverterNewLine::__set_state(array(
                               'next' => NULL,
                               'formattingInfo' => 
                              LoggerFormattingInfo::__set_state(array(
                                 'min' => 0,
                                 'max' => 9223372036854775807,
                                 'padLeft' => true,
                                 'trimLeft' => false,
                              )),
                               'option' => '',
                            )),
                             'formattingInfo' => 
                            LoggerFormattingInfo::__set_state(array(
                               'min' => 0,
                               'max' => 9223372036854775807,
                               'padLeft' => true,
                               'trimLeft' => false,
                            )),
                             'option' => '',
                          )),
                           'formattingInfo' => NULL,
                           'option' => NULL,
                        )),
                         'formattingInfo' => 
                        LoggerFormattingInfo::__set_state(array(
                           'min' => 0,
                           'max' => 9223372036854775807,
                           'padLeft' => true,
                           'trimLeft' => false,
                        )),
                         'option' => '',
                      )),
                       'formattingInfo' => NULL,
                       'option' => NULL,
                    )),
                     'formattingInfo' => 
                    LoggerFormattingInfo::__set_state(array(
                       'min' => 5,
                       'max' => 9223372036854775807,
                       'padLeft' => false,
                       'trimLeft' => false,
                    )),
                     'option' => '',
                  )),
                   'formattingInfo' => NULL,
                   'option' => NULL,
                )),
                 'formattingInfo' => 
                LoggerFormattingInfo::__set_state(array(
                   'min' => 0,
                   'max' => 9223372036854775807,
                   'padLeft' => true,
                   'trimLeft' => false,
                )),
                 'option' => '',
              )),
            )),
             'name' => 'A1',
             'threshold' => NULL,
             'requiresLayout' => true,
          )),
        ),
      )),
       'appenders' => 
      array (
      ),
    )),
     'column_fields' => 
    TrackableObject::__set_state(array(
       'storage' => 
      array (
        'pt_origen' => 'Leonardo rivero',
        'pt_tema' => 'Trabajadores',
        'pt_grupo' => '2',
        'pt_temavtiger' => '768',
        'CreatedTime' => '2022-12-06 11:39:32',
        'ModifiedTime' => '2022-12-06 17:43:41',
        'pt_motivo' => 'Vtiger EMPRESA (corto)',
        'tags' => '',
        'record_id' => '1406',
        'record_module' => 'Parametrizaciones',
        'id' => '1406',
      ),
       'trackingEnabled' => true,
       'tracking' => true,
       'changed' => 
      array (
        0 => 'id',
      ),
    )),
     'IsCustomModule' => true,
     'sortby_fields' => 
    array (
    ),
     'required_fields' => 
    array (
      'assigned_user_id' => 1,
    ),
     'special_functions' => 
    array (
      0 => 'set_import_assigned_user',
    ),
     'ownedby' => NULL,
     'recordSource' => 'CRM',
     '__inactive_fields_filtered' => false,
     'moduleName' => 'Parametrizaciones',
     'id' => '1406',
  )),
))
params => array (
  'tema' => false,
  'motivo' => 'Vtiger EMPRESA (corto)',
  'origen' => 'Leonardo Rivero',
)
rs => array (
  0 => '1406',
  'crmid' => '1406',
)
models => Parametrizaciones_Record_Model::__set_state(array(
   'module' => 
  Vtiger_Module_Model::__set_state(array(
     'blocks' => false,
     'nameFields' => false,
     'moduleMeta' => false,
     'fields' => false,
     'relations' => NULL,
     'id' => '63',
     'name' => 'Parametrizaciones',
     'label' => 'Parametrizaciones',
     'version' => '0',
     'minversion' => false,
     'maxversion' => false,
     'presence' => '0',
     'ownedby' => '0',
     'tabsequence' => '-1',
     'parent' => 'TOOLS',
     'customized' => '1',
     'trial' => '0',
     'isentitytype' => '1',
     'entityidcolumn' => false,
     'entityidfield' => false,
     'basetable' => false,
     'basetableid' => false,
     'customtable' => false,
     'grouptable' => false,
     'fieldtable' => false,
     'allowDuplicates' => '1',
     'isSyncable' => '0',
     'syncActionForDuplicate' => '1',
     'source' => 'custom',
  )),
   'valueMap' => 
  TrackableObject::__set_state(array(
     'storage' => 
    array (
      'pt_origen' => 'Leonardo rivero',
      'pt_tema' => 'Trabajadores',
      'pt_grupo' => '2',
      'pt_temavtiger' => '768',
      'CreatedTime' => '2022-12-06 11:39:32',
      'ModifiedTime' => '2022-12-06 17:43:41',
      'pt_motivo' => 'Vtiger EMPRESA (corto)',
      'tags' => '',
      'record_id' => '1406',
      'record_module' => 'Parametrizaciones',
      'id' => '1406',
    ),
     'trackingEnabled' => true,
     'tracking' => true,
     'changed' => 
    array (
      0 => 'id',
    ),
  )),
   'entity' => 
  Parametrizaciones::__set_state(array(
     'table_name' => 'vtiger_parametrizaciones',
     'table_index' => 'parametrizacionesid',
     'customFieldTable' => 
    array (
      0 => 'vtiger_parametrizacionescf',
      1 => 'parametrizacionesid',
    ),
     'tab_name' => 
    array (
      0 => 'vtiger_crmentity',
      1 => 'vtiger_parametrizaciones',
      2 => 'vtiger_parametrizacionescf',
      3 => 'vtiger_crmentity_user_field',
    ),
     'tab_name_index' => 
    array (
      'vtiger_crmentity' => 'crmid',
      'vtiger_parametrizaciones' => 'parametrizacionesid',
      'vtiger_parametrizacionescf' => 'parametrizacionesid',
      'vtiger_crmentity_user_field' => 'recordid',
    ),
     'list_fields' => 
    array (
      'parametrizacionesid' => 
      array (
        0 => 'parametrizaciones',
        1 => '<entitycolumn>',
      ),
      'Assigned To' => 
      array (
        0 => 'crmentity',
        1 => 'smownerid',
      ),
    ),
     'list_fields_name' => 
    array (
      'parametrizacionesid' => 'parametrizacionesid',
      'Assigned To' => 'assigned_user_id',
    ),
     'list_link_field' => 'parametrizacionesid',
     'search_fields' => 
    array (
      'parametrizacionesid' => 
      array (
        0 => 'parametrizaciones',
        1 => '<entitycolumn>',
      ),
      'Assigned To' => 
      array (
        0 => 'vtiger_crmentity',
        1 => 'assigned_user_id',
      ),
    ),
     'search_fields_name' => 
    array (
      'parametrizacionesid' => 'parametrizacionesid',
      'Assigned To' => 'assigned_user_id',
    ),
     'popup_fields' => 
    array (
      0 => 'parametrizacionesid',
    ),
     'def_basicsearch_col' => 'parametrizacionesid',
     'def_detailview_recname' => 'parametrizacionesid',
     'mandatory_fields' => 
    array (
      0 => 'parametrizacionesid',
      1 => 'assigned_user_id',
    ),
     'default_order_by' => 'parametrizacionesid',
     'default_sort_order' => 'ASC',
     'db' => 
    PearDatabase::__set_state(array(
       'database' => 
      ADODB_mysqli::__set_state(array(
         'databaseType' => 'mysqli',
         'dataProvider' => 'mysql',
         'hasInsertID' => true,
         'hasAffectedRows' => true,
         'metaTablesSQL' => 'SELECT
			TABLE_NAME,
			CASE WHEN TABLE_TYPE = \'VIEW\' THEN \'V\' ELSE \'T\' END
		FROM INFORMATION_SCHEMA.TABLES
		WHERE TABLE_SCHEMA=',
         'metaColumnsSQL' => 'SHOW COLUMNS FROM `%s`',
         'fmtTimeStamp' => '\'Y-m-d H:i:s\'',
         'hasLimit' => true,
         'hasMoveFirst' => true,
         'hasGenID' => true,
         'isoDates' => true,
         'sysDate' => 'CURDATE()',
         'sysTimeStamp' => 'NOW()',
         'hasTransactions' => true,
         'forceNewConnect' => false,
         'poorAffectedRows' => true,
         'clientFlags' => 0,
         'substr' => 'substring',
         'port' => '3306',
         'socket' => '',
         '_bindInputArray' => false,
         'nameQuote' => '`',
         'optionFlags' => 
        array (
          0 => 
          array (
            0 => 5,
            1 => 0,
          ),
          1 => 
          array (
            0 => 8,
            1 => true,
          ),
        ),
         'arrayClass' => 'ADORecordSet_array_mysqli',
         'multiQuery' => false,
         '_genIDSQL' => 'update %s set id=LAST_INSERT_ID(id+1);',
         '_genSeqSQL' => 'create table if not exists %s (id int not null)',
         '_genSeqCountSQL' => 'select count(*) from %s',
         '_genSeq2SQL' => 'insert into %s values (%s)',
         '_dropSeqSQL' => 'drop table if exists %s',
         'database' => 'bps2',
         'host' => 'localhost',
         'user' => 'root',
         'password' => '',
         'debug' => false,
         'maxblobsize' => 262144,
         'concat_operator' => '+',
         'length' => 'length',
         'random' => 'rand()',
         'upperCase' => 'upper',
         'fmtDate' => '\'Y-m-d\'',
         'true' => '1',
         'false' => '0',
         'replaceQuote' => '\\\'',
         'charSet' => false,
         'metaDatabasesSQL' => '',
         'uniqueOrderBy' => false,
         'emptyDate' => '&nbsp;',
         'emptyTimeStamp' => '&nbsp;',
         'lastInsID' => false,
         'hasTop' => false,
         'readOnly' => false,
         'genID' => 0,
         'raiseErrorFn' => false,
         'cacheSecs' => 3600,
         'memCache' => false,
         'memCacheHost' => NULL,
         'memCachePort' => 11211,
         'memCacheCompress' => false,
         'sysUTimeStamp' => false,
         'noNullStrings' => false,
         'numCacheHits' => 0,
         'numCacheMisses' => 0,
         'pageExecuteCountRows' => true,
         'uniqueSort' => false,
         'leftOuter' => false,
         'rightOuter' => false,
         'ansiOuter' => false,
         'autoRollback' => false,
         'fnExecute' => false,
         'fnCacheExecute' => false,
         'blobEncodeType' => false,
         'rsPrefix' => 'ADORecordSet_',
         'autoCommit' => true,
         'transOff' => 0,
         'transCnt' => 0,
         'fetchMode' => false,
         'null2null' => 'null',
         'bulkBind' => false,
         '_oldRaiseFn' => false,
         '_transOK' => NULL,
         '_connectionID' => 
        mysqli::__set_state(array(
           'affected_rows' => NULL,
           'client_info' => NULL,
           'client_version' => NULL,
           'connect_errno' => NULL,
           'connect_error' => NULL,
           'errno' => NULL,
           'error' => NULL,
           'error_list' => NULL,
           'field_count' => NULL,
           'host_info' => NULL,
           'info' => NULL,
           'insert_id' => NULL,
           'server_info' => NULL,
           'server_version' => NULL,
           'sqlstate' => NULL,
           'protocol_version' => NULL,
           'thread_id' => NULL,
           'warning_count' => NULL,
        )),
         '_errorMsg' => false,
         '_errorCode' => false,
         '_queryID' => 
        mysqli_result::__set_state(array(
           'current_field' => NULL,
           'field_count' => NULL,
           'lengths' => NULL,
           'num_rows' => NULL,
           'type' => NULL,
        )),
         '_isPersistentConnection' => true,
         '_evalAll' => false,
         '_affected' => false,
         '_logsql' => false,
         '_transmode' => '',
         'connectionParameters' => 
        array (
        ),
         'databaseName' => 'bps2',
      )),
       'dieOnError' => false,
       'dbType' => 'mysqli',
       'dbHostName' => 'localhost:3306',
       'dbName' => 'bps2',
       'dbOptions' => 
      array (
        'persistent' => true,
        'autofree' => false,
        'debug' => 0,
        'seqname_format' => '%s_seq',
        'portability' => 0,
        'ssl' => false,
      ),
       'userName' => 'root',
       'userPassword' => '',
       'query_time' => 0,
       'log' => 
      Logger::__set_state(array(
         'additive' => true,
         'fqcn' => 'Logger',
         'level' => NULL,
         'name' => 'PearDatabase_',
         'parent' => 
        LoggerRoot::__set_state(array(
           'additive' => true,
           'fqcn' => 'Logger',
           'level' => 
          LoggerLevel::__set_state(array(
             'level' => 10000,
             'levelStr' => 'DEBUG',
             'syslogEquivalent' => 6,
          )),
           'name' => 'root',
           'parent' => NULL,
           'appenders' => 
          array (
            'A1' => 
            LoggerAppenderRollingFile::__set_state(array(
               'maxFileSize' => 10485760,
               'maxBackupIndex' => 10,
               'compress' => false,
               'clearConditional' => true,
               'locking' => true,
               'append' => true,
               'file' => 'logs/vtigercrm.log',
               'fp' => NULL,
               'closed' => false,
               'filter' => NULL,
               'layout' => 
              LoggerLayoutPattern::__set_state(array(
                 'pattern' => '%date %-5level %logger %message%newline',
                 'converterMap' => 
                array (
                  'c' => 'LoggerPatternConverterLogger',
                  'lo' => 'LoggerPatternConverterLogger',
                  'logger' => 'LoggerPatternConverterLogger',
                  'C' => 'LoggerPatternConverterClass',
                  'class' => 'LoggerPatternConverterClass',
                  'cookie' => 'LoggerPatternConverterCookie',
                  'd' => 'LoggerPatternConverterDate',
                  'date' => 'LoggerPatternConverterDate',
                  'e' => 'LoggerPatternConverterEnvironment',
                  'env' => 'LoggerPatternConverterEnvironment',
                  'ex' => 'LoggerPatternConverterThrowable',
                  'exception' => 'LoggerPatternConverterThrowable',
                  'throwable' => 'LoggerPatternConverterThrowable',
                  'F' => 'LoggerPatternConverterFile',
                  'file' => 'LoggerPatternConverterFile',
                  'l' => 'LoggerPatternConverterLocation',
                  'location' => 'LoggerPatternConverterLocation',
                  'L' => 'LoggerPatternConverterLine',
                  'line' => 'LoggerPatternConverterLine',
                  'm' => 'LoggerPatternConverterMessage',
                  'msg' => 'LoggerPatternConverterMessage',
                  'message' => 'LoggerPatternConverterMessage',
                  'M' => 'LoggerPatternConverterMethod',
                  'method' => 'LoggerPatternConverterMethod',
                  'n' => 'LoggerPatternConverterNewLine',
                  'newline' => 'LoggerPatternConverterNewLine',
                  'p' => 'LoggerPatternConverterLevel',
                  'le' => 'LoggerPatternConverterLevel',
                  'level' => 'LoggerPatternConverterLevel',
                  'r' => 'LoggerPatternConverterRelative',
                  'relative' => 'LoggerPatternConverterRelative',
                  'req' => 'LoggerPatternConverterRequest',
                  'request' => 'LoggerPatternConverterRequest',
                  's' => 'LoggerPatternConverterServer',
                  'server' => 'LoggerPatternConverterServer',
                  'ses' => 'LoggerPatternConverterSession',
                  'session' => 'LoggerPatternConverterSession',
                  'sid' => 'LoggerPatternConverterSessionID',
                  'sessionid' => 'LoggerPatternConverterSessionID',
                  't' => 'LoggerPatternConverterProcess',
                  'pid' => 'LoggerPatternConverterProcess',
                  'process' => 'LoggerPatternConverterProcess',
                  'x' => 'LoggerPatternConverterNDC',
                  'ndc' => 'LoggerPatternConverterNDC',
                  'X' => 'LoggerPatternConverterMDC',
                  'mdc' => 'LoggerPatternConverterMDC',
                ),
                 'head' => 
                LoggerPatternConverterDate::__set_state(array(
                   'format' => 'c',
                   'specials' => 
                  array (
                    'ISO8601' => 'c',
                    'ABSOLUTE' => 'H:i:s',
                    'DATE' => 'd M Y H:i:s.u',
                  ),
                   'useLocalDate' => false,
                   'next' => 
                  LoggerPatternConverterLiteral::__set_state(array(
                     'literalValue' => ' ',
                     'next' => 
                    LoggerPatternConverterLevel::__set_state(array(
                       'next' => 
                      LoggerPatternConverterLiteral::__set_state(array(
                         'literalValue' => ' ',
                         'next' => 
                        LoggerPatternConverterLogger::__set_state(array(
                           'length' => NULL,
                           'cache' => 
                          array (
                            'VT' => 'VT',
                            'user' => 'user',
                          ),
                           'next' => 
                          LoggerPatternConverterLiteral::__set_state(array(
                             'literalValue' => ' ',
                             'next' => 
                            LoggerPatternConverterMessage::__set_state(array(
                               'next' => 
                              LoggerPatternConverterNewLine::__set_state(array(
                                 'next' => NULL,
                                 'formattingInfo' => 
                                LoggerFormattingInfo::__set_state(array(
                                   'min' => 0,
                                   'max' => 9223372036854775807,
                                   'padLeft' => true,
                                   'trimLeft' => false,
                                )),
                                 'option' => '',
                              )),
                               'formattingInfo' => 
                              LoggerFormattingInfo::__set_state(array(
                                 'min' => 0,
                                 'max' => 9223372036854775807,
                                 'padLeft' => true,
                                 'trimLeft' => false,
                              )),
                               'option' => '',
                            )),
                             'formattingInfo' => NULL,
                             'option' => NULL,
                          )),
                           'formattingInfo' => 
                          LoggerFormattingInfo::__set_state(array(
                             'min' => 0,
                             'max' => 9223372036854775807,
                             'padLeft' => true,
                             'trimLeft' => false,
                          )),
                           'option' => '',
                        )),
                         'formattingInfo' => NULL,
                         'option' => NULL,
                      )),
                       'formattingInfo' => 
                      LoggerFormattingInfo::__set_state(array(
                         'min' => 5,
                         'max' => 9223372036854775807,
                         'padLeft' => false,
                         'trimLeft' => false,
                      )),
                       'option' => '',
                    )),
                     'formattingInfo' => NULL,
                     'option' => NULL,
                  )),
                   'formattingInfo' => 
                  LoggerFormattingInfo::__set_state(array(
                     'min' => 0,
                     'max' => 9223372036854775807,
                     'padLeft' => true,
                     'trimLeft' => false,
                  )),
                   'option' => '',
                )),
              )),
               'name' => 'A1',
               'threshold' => NULL,
               'requiresLayout' => true,
            )),
          ),
        )),
         'appenders' => 
        array (
        ),
      )),
       'lastmysqlrow' => -1,
       'enableSQLlog' => false,
       'continueInstallOnError' => true,
       'avoidPreparedSql' => false,
       'isdb_default_utf8_charset' => true,
       'req_flist' => NULL,
       'logSqlTimingID' => false,
    )),
     'log' => 
    Logger::__set_state(array(
       'additive' => true,
       'fqcn' => 'Logger',
       'level' => NULL,
       'name' => 'VT',
       'parent' => 
      LoggerRoot::__set_state(array(
         'additive' => true,
         'fqcn' => 'Logger',
         'level' => 
        LoggerLevel::__set_state(array(
           'level' => 10000,
           'levelStr' => 'DEBUG',
           'syslogEquivalent' => 6,
        )),
         'name' => 'root',
         'parent' => NULL,
         'appenders' => 
        array (
          'A1' => 
          LoggerAppenderRollingFile::__set_state(array(
             'maxFileSize' => 10485760,
             'maxBackupIndex' => 10,
             'compress' => false,
             'clearConditional' => true,
             'locking' => true,
             'append' => true,
             'file' => 'logs/vtigercrm.log',
             'fp' => NULL,
             'closed' => false,
             'filter' => NULL,
             'layout' => 
            LoggerLayoutPattern::__set_state(array(
               'pattern' => '%date %-5level %logger %message%newline',
               'converterMap' => 
              array (
                'c' => 'LoggerPatternConverterLogger',
                'lo' => 'LoggerPatternConverterLogger',
                'logger' => 'LoggerPatternConverterLogger',
                'C' => 'LoggerPatternConverterClass',
                'class' => 'LoggerPatternConverterClass',
                'cookie' => 'LoggerPatternConverterCookie',
                'd' => 'LoggerPatternConverterDate',
                'date' => 'LoggerPatternConverterDate',
                'e' => 'LoggerPatternConverterEnvironment',
                'env' => 'LoggerPatternConverterEnvironment',
                'ex' => 'LoggerPatternConverterThrowable',
                'exception' => 'LoggerPatternConverterThrowable',
                'throwable' => 'LoggerPatternConverterThrowable',
                'F' => 'LoggerPatternConverterFile',
                'file' => 'LoggerPatternConverterFile',
                'l' => 'LoggerPatternConverterLocation',
                'location' => 'LoggerPatternConverterLocation',
                'L' => 'LoggerPatternConverterLine',
                'line' => 'LoggerPatternConverterLine',
                'm' => 'LoggerPatternConverterMessage',
                'msg' => 'LoggerPatternConverterMessage',
                'message' => 'LoggerPatternConverterMessage',
                'M' => 'LoggerPatternConverterMethod',
                'method' => 'LoggerPatternConverterMethod',
                'n' => 'LoggerPatternConverterNewLine',
                'newline' => 'LoggerPatternConverterNewLine',
                'p' => 'LoggerPatternConverterLevel',
                'le' => 'LoggerPatternConverterLevel',
                'level' => 'LoggerPatternConverterLevel',
                'r' => 'LoggerPatternConverterRelative',
                'relative' => 'LoggerPatternConverterRelative',
                'req' => 'LoggerPatternConverterRequest',
                'request' => 'LoggerPatternConverterRequest',
                's' => 'LoggerPatternConverterServer',
                'server' => 'LoggerPatternConverterServer',
                'ses' => 'LoggerPatternConverterSession',
                'session' => 'LoggerPatternConverterSession',
                'sid' => 'LoggerPatternConverterSessionID',
                'sessionid' => 'LoggerPatternConverterSessionID',
                't' => 'LoggerPatternConverterProcess',
                'pid' => 'LoggerPatternConverterProcess',
                'process' => 'LoggerPatternConverterProcess',
                'x' => 'LoggerPatternConverterNDC',
                'ndc' => 'LoggerPatternConverterNDC',
                'X' => 'LoggerPatternConverterMDC',
                'mdc' => 'LoggerPatternConverterMDC',
              ),
               'head' => 
              LoggerPatternConverterDate::__set_state(array(
                 'format' => 'c',
                 'specials' => 
                array (
                  'ISO8601' => 'c',
                  'ABSOLUTE' => 'H:i:s',
                  'DATE' => 'd M Y H:i:s.u',
                ),
                 'useLocalDate' => false,
                 'next' => 
                LoggerPatternConverterLiteral::__set_state(array(
                   'literalValue' => ' ',
                   'next' => 
                  LoggerPatternConverterLevel::__set_state(array(
                     'next' => 
                    LoggerPatternConverterLiteral::__set_state(array(
                       'literalValue' => ' ',
                       'next' => 
                      LoggerPatternConverterLogger::__set_state(array(
                         'length' => NULL,
                         'cache' => 
                        array (
                          'VT' => 'VT',
                          'user' => 'user',
                        ),
                         'next' => 
                        LoggerPatternConverterLiteral::__set_state(array(
                           'literalValue' => ' ',
                           'next' => 
                          LoggerPatternConverterMessage::__set_state(array(
                             'next' => 
                            LoggerPatternConverterNewLine::__set_state(array(
                               'next' => NULL,
                               'formattingInfo' => 
                              LoggerFormattingInfo::__set_state(array(
                                 'min' => 0,
                                 'max' => 9223372036854775807,
                                 'padLeft' => true,
                                 'trimLeft' => false,
                              )),
                               'option' => '',
                            )),
                             'formattingInfo' => 
                            LoggerFormattingInfo::__set_state(array(
                               'min' => 0,
                               'max' => 9223372036854775807,
                               'padLeft' => true,
                               'trimLeft' => false,
                            )),
                             'option' => '',
                          )),
                           'formattingInfo' => NULL,
                           'option' => NULL,
                        )),
                         'formattingInfo' => 
                        LoggerFormattingInfo::__set_state(array(
                           'min' => 0,
                           'max' => 9223372036854775807,
                           'padLeft' => true,
                           'trimLeft' => false,
                        )),
                         'option' => '',
                      )),
                       'formattingInfo' => NULL,
                       'option' => NULL,
                    )),
                     'formattingInfo' => 
                    LoggerFormattingInfo::__set_state(array(
                       'min' => 5,
                       'max' => 9223372036854775807,
                       'padLeft' => false,
                       'trimLeft' => false,
                    )),
                     'option' => '',
                  )),
                   'formattingInfo' => NULL,
                   'option' => NULL,
                )),
                 'formattingInfo' => 
                LoggerFormattingInfo::__set_state(array(
                   'min' => 0,
                   'max' => 9223372036854775807,
                   'padLeft' => true,
                   'trimLeft' => false,
                )),
                 'option' => '',
              )),
            )),
             'name' => 'A1',
             'threshold' => NULL,
             'requiresLayout' => true,
          )),
        ),
      )),
       'appenders' => 
      array (
      ),
    )),
     'column_fields' => 
    TrackableObject::__set_state(array(
       'storage' => 
      array (
        'pt_origen' => 'Leonardo rivero',
        'pt_tema' => 'Trabajadores',
        'pt_grupo' => '2',
        'pt_temavtiger' => '768',
        'CreatedTime' => '2022-12-06 11:39:32',
        'ModifiedTime' => '2022-12-06 17:43:41',
        'pt_motivo' => 'Vtiger EMPRESA (corto)',
        'tags' => '',
        'record_id' => '1406',
        'record_module' => 'Parametrizaciones',
        'id' => '1406',
      ),
       'trackingEnabled' => true,
       'tracking' => true,
       'changed' => 
      array (
        0 => 'id',
      ),
    )),
     'IsCustomModule' => true,
     'sortby_fields' => 
    array (
    ),
     'required_fields' => 
    array (
      'assigned_user_id' => 1,
    ),
     'special_functions' => 
    array (
      0 => 'set_import_assigned_user',
    ),
     'ownedby' => NULL,
     'recordSource' => 'CRM',
     '__inactive_fields_filtered' => false,
     'moduleName' => 'Parametrizaciones',
     'id' => '1406',
  )),
))
params => array (
  'tema' => false,
  'motivo' => 'Vtiger EMPRESA (corto)',
  'origen' => 'Leonardo Rivero',
)
rs => array (
  0 => '1406',
  'crmid' => '1406',
)
models => Parametrizaciones_Record_Model::__set_state(array(
   'module' => 
  Vtiger_Module_Model::__set_state(array(
     'blocks' => false,
     'nameFields' => false,
     'moduleMeta' => false,
     'fields' => false,
     'relations' => NULL,
     'id' => '63',
     'name' => 'Parametrizaciones',
     'label' => 'Parametrizaciones',
     'version' => '0',
     'minversion' => false,
     'maxversion' => false,
     'presence' => '0',
     'ownedby' => '0',
     'tabsequence' => '-1',
     'parent' => 'TOOLS',
     'customized' => '1',
     'trial' => '0',
     'isentitytype' => '1',
     'entityidcolumn' => false,
     'entityidfield' => false,
     'basetable' => false,
     'basetableid' => false,
     'customtable' => false,
     'grouptable' => false,
     'fieldtable' => false,
     'allowDuplicates' => '1',
     'isSyncable' => '0',
     'syncActionForDuplicate' => '1',
     'source' => 'custom',
  )),
   'valueMap' => 
  TrackableObject::__set_state(array(
     'storage' => 
    array (
      'pt_origen' => 'Leonardo rivero',
      'pt_tema' => 'Trabajadores',
      'pt_grupo' => '3',
      'pt_temavtiger' => '768',
      'CreatedTime' => '2022-12-06 11:39:32',
      'ModifiedTime' => '2022-12-08 15:20:51',
      'pt_motivo' => 'Vtiger EMPRESA (corto)',
      'tags' => '',
      'record_id' => '1406',
      'record_module' => 'Parametrizaciones',
      'id' => '1406',
    ),
     'trackingEnabled' => true,
     'tracking' => true,
     'changed' => 
    array (
      0 => 'id',
    ),
  )),
   'entity' => 
  Parametrizaciones::__set_state(array(
     'table_name' => 'vtiger_parametrizaciones',
     'table_index' => 'parametrizacionesid',
     'customFieldTable' => 
    array (
      0 => 'vtiger_parametrizacionescf',
      1 => 'parametrizacionesid',
    ),
     'tab_name' => 
    array (
      0 => 'vtiger_crmentity',
      1 => 'vtiger_parametrizaciones',
      2 => 'vtiger_parametrizacionescf',
      3 => 'vtiger_crmentity_user_field',
    ),
     'tab_name_index' => 
    array (
      'vtiger_crmentity' => 'crmid',
      'vtiger_parametrizaciones' => 'parametrizacionesid',
      'vtiger_parametrizacionescf' => 'parametrizacionesid',
      'vtiger_crmentity_user_field' => 'recordid',
    ),
     'list_fields' => 
    array (
      'parametrizacionesid' => 
      array (
        0 => 'parametrizaciones',
        1 => '<entitycolumn>',
      ),
      'Assigned To' => 
      array (
        0 => 'crmentity',
        1 => 'smownerid',
      ),
    ),
     'list_fields_name' => 
    array (
      'parametrizacionesid' => 'parametrizacionesid',
      'Assigned To' => 'assigned_user_id',
    ),
     'list_link_field' => 'parametrizacionesid',
     'search_fields' => 
    array (
      'parametrizacionesid' => 
      array (
        0 => 'parametrizaciones',
        1 => '<entitycolumn>',
      ),
      'Assigned To' => 
      array (
        0 => 'vtiger_crmentity',
        1 => 'assigned_user_id',
      ),
    ),
     'search_fields_name' => 
    array (
      'parametrizacionesid' => 'parametrizacionesid',
      'Assigned To' => 'assigned_user_id',
    ),
     'popup_fields' => 
    array (
      0 => 'parametrizacionesid',
    ),
     'def_basicsearch_col' => 'parametrizacionesid',
     'def_detailview_recname' => 'parametrizacionesid',
     'mandatory_fields' => 
    array (
      0 => 'parametrizacionesid',
      1 => 'assigned_user_id',
    ),
     'default_order_by' => 'parametrizacionesid',
     'default_sort_order' => 'ASC',
     'db' => 
    PearDatabase::__set_state(array(
       'database' => 
      ADODB_mysqli::__set_state(array(
         'databaseType' => 'mysqli',
         'dataProvider' => 'mysql',
         'hasInsertID' => true,
         'hasAffectedRows' => true,
         'metaTablesSQL' => 'SELECT
			TABLE_NAME,
			CASE WHEN TABLE_TYPE = \'VIEW\' THEN \'V\' ELSE \'T\' END
		FROM INFORMATION_SCHEMA.TABLES
		WHERE TABLE_SCHEMA=',
         'metaColumnsSQL' => 'SHOW COLUMNS FROM `%s`',
         'fmtTimeStamp' => '\'Y-m-d H:i:s\'',
         'hasLimit' => true,
         'hasMoveFirst' => true,
         'hasGenID' => true,
         'isoDates' => true,
         'sysDate' => 'CURDATE()',
         'sysTimeStamp' => 'NOW()',
         'hasTransactions' => true,
         'forceNewConnect' => false,
         'poorAffectedRows' => true,
         'clientFlags' => 0,
         'substr' => 'substring',
         'port' => '3306',
         'socket' => '',
         '_bindInputArray' => false,
         'nameQuote' => '`',
         'optionFlags' => 
        array (
          0 => 
          array (
            0 => 5,
            1 => 0,
          ),
          1 => 
          array (
            0 => 8,
            1 => true,
          ),
        ),
         'arrayClass' => 'ADORecordSet_array_mysqli',
         'multiQuery' => false,
         '_genIDSQL' => 'update %s set id=LAST_INSERT_ID(id+1);',
         '_genSeqSQL' => 'create table if not exists %s (id int not null)',
         '_genSeqCountSQL' => 'select count(*) from %s',
         '_genSeq2SQL' => 'insert into %s values (%s)',
         '_dropSeqSQL' => 'drop table if exists %s',
         'database' => 'bps2',
         'host' => 'localhost',
         'user' => 'root',
         'password' => '',
         'debug' => false,
         'maxblobsize' => 262144,
         'concat_operator' => '+',
         'length' => 'length',
         'random' => 'rand()',
         'upperCase' => 'upper',
         'fmtDate' => '\'Y-m-d\'',
         'true' => '1',
         'false' => '0',
         'replaceQuote' => '\\\'',
         'charSet' => false,
         'metaDatabasesSQL' => '',
         'uniqueOrderBy' => false,
         'emptyDate' => '&nbsp;',
         'emptyTimeStamp' => '&nbsp;',
         'lastInsID' => false,
         'hasTop' => false,
         'readOnly' => false,
         'genID' => 0,
         'raiseErrorFn' => false,
         'cacheSecs' => 3600,
         'memCache' => false,
         'memCacheHost' => NULL,
         'memCachePort' => 11211,
         'memCacheCompress' => false,
         'sysUTimeStamp' => false,
         'noNullStrings' => false,
         'numCacheHits' => 0,
         'numCacheMisses' => 0,
         'pageExecuteCountRows' => true,
         'uniqueSort' => false,
         'leftOuter' => false,
         'rightOuter' => false,
         'ansiOuter' => false,
         'autoRollback' => false,
         'fnExecute' => false,
         'fnCacheExecute' => false,
         'blobEncodeType' => false,
         'rsPrefix' => 'ADORecordSet_',
         'autoCommit' => true,
         'transOff' => 0,
         'transCnt' => 0,
         'fetchMode' => false,
         'null2null' => 'null',
         'bulkBind' => false,
         '_oldRaiseFn' => false,
         '_transOK' => NULL,
         '_connectionID' => 
        mysqli::__set_state(array(
           'affected_rows' => NULL,
           'client_info' => NULL,
           'client_version' => NULL,
           'connect_errno' => NULL,
           'connect_error' => NULL,
           'errno' => NULL,
           'error' => NULL,
           'error_list' => NULL,
           'field_count' => NULL,
           'host_info' => NULL,
           'info' => NULL,
           'insert_id' => NULL,
           'server_info' => NULL,
           'server_version' => NULL,
           'sqlstate' => NULL,
           'protocol_version' => NULL,
           'thread_id' => NULL,
           'warning_count' => NULL,
        )),
         '_errorMsg' => false,
         '_errorCode' => false,
         '_queryID' => 
        mysqli_result::__set_state(array(
           'current_field' => NULL,
           'field_count' => NULL,
           'lengths' => NULL,
           'num_rows' => NULL,
           'type' => NULL,
        )),
         '_isPersistentConnection' => true,
         '_evalAll' => false,
         '_affected' => false,
         '_logsql' => false,
         '_transmode' => '',
         'connectionParameters' => 
        array (
        ),
         'databaseName' => 'bps2',
      )),
       'dieOnError' => false,
       'dbType' => 'mysqli',
       'dbHostName' => 'localhost:3306',
       'dbName' => 'bps2',
       'dbOptions' => 
      array (
        'persistent' => true,
        'autofree' => false,
        'debug' => 0,
        'seqname_format' => '%s_seq',
        'portability' => 0,
        'ssl' => false,
      ),
       'userName' => 'root',
       'userPassword' => '',
       'query_time' => 0,
       'log' => 
      Logger::__set_state(array(
         'additive' => true,
         'fqcn' => 'Logger',
         'level' => NULL,
         'name' => 'PearDatabase_',
         'parent' => 
        LoggerRoot::__set_state(array(
           'additive' => true,
           'fqcn' => 'Logger',
           'level' => 
          LoggerLevel::__set_state(array(
             'level' => 10000,
             'levelStr' => 'DEBUG',
             'syslogEquivalent' => 6,
          )),
           'name' => 'root',
           'parent' => NULL,
           'appenders' => 
          array (
            'A1' => 
            LoggerAppenderRollingFile::__set_state(array(
               'maxFileSize' => 10485760,
               'maxBackupIndex' => 10,
               'compress' => false,
               'clearConditional' => true,
               'locking' => true,
               'append' => true,
               'file' => 'logs/vtigercrm.log',
               'fp' => NULL,
               'closed' => false,
               'filter' => NULL,
               'layout' => 
              LoggerLayoutPattern::__set_state(array(
                 'pattern' => '%date %-5level %logger %message%newline',
                 'converterMap' => 
                array (
                  'c' => 'LoggerPatternConverterLogger',
                  'lo' => 'LoggerPatternConverterLogger',
                  'logger' => 'LoggerPatternConverterLogger',
                  'C' => 'LoggerPatternConverterClass',
                  'class' => 'LoggerPatternConverterClass',
                  'cookie' => 'LoggerPatternConverterCookie',
                  'd' => 'LoggerPatternConverterDate',
                  'date' => 'LoggerPatternConverterDate',
                  'e' => 'LoggerPatternConverterEnvironment',
                  'env' => 'LoggerPatternConverterEnvironment',
                  'ex' => 'LoggerPatternConverterThrowable',
                  'exception' => 'LoggerPatternConverterThrowable',
                  'throwable' => 'LoggerPatternConverterThrowable',
                  'F' => 'LoggerPatternConverterFile',
                  'file' => 'LoggerPatternConverterFile',
                  'l' => 'LoggerPatternConverterLocation',
                  'location' => 'LoggerPatternConverterLocation',
                  'L' => 'LoggerPatternConverterLine',
                  'line' => 'LoggerPatternConverterLine',
                  'm' => 'LoggerPatternConverterMessage',
                  'msg' => 'LoggerPatternConverterMessage',
                  'message' => 'LoggerPatternConverterMessage',
                  'M' => 'LoggerPatternConverterMethod',
                  'method' => 'LoggerPatternConverterMethod',
                  'n' => 'LoggerPatternConverterNewLine',
                  'newline' => 'LoggerPatternConverterNewLine',
                  'p' => 'LoggerPatternConverterLevel',
                  'le' => 'LoggerPatternConverterLevel',
                  'level' => 'LoggerPatternConverterLevel',
                  'r' => 'LoggerPatternConverterRelative',
                  'relative' => 'LoggerPatternConverterRelative',
                  'req' => 'LoggerPatternConverterRequest',
                  'request' => 'LoggerPatternConverterRequest',
                  's' => 'LoggerPatternConverterServer',
                  'server' => 'LoggerPatternConverterServer',
                  'ses' => 'LoggerPatternConverterSession',
                  'session' => 'LoggerPatternConverterSession',
                  'sid' => 'LoggerPatternConverterSessionID',
                  'sessionid' => 'LoggerPatternConverterSessionID',
                  't' => 'LoggerPatternConverterProcess',
                  'pid' => 'LoggerPatternConverterProcess',
                  'process' => 'LoggerPatternConverterProcess',
                  'x' => 'LoggerPatternConverterNDC',
                  'ndc' => 'LoggerPatternConverterNDC',
                  'X' => 'LoggerPatternConverterMDC',
                  'mdc' => 'LoggerPatternConverterMDC',
                ),
                 'head' => 
                LoggerPatternConverterDate::__set_state(array(
                   'format' => 'c',
                   'specials' => 
                  array (
                    'ISO8601' => 'c',
                    'ABSOLUTE' => 'H:i:s',
                    'DATE' => 'd M Y H:i:s.u',
                  ),
                   'useLocalDate' => false,
                   'next' => 
                  LoggerPatternConverterLiteral::__set_state(array(
                     'literalValue' => ' ',
                     'next' => 
                    LoggerPatternConverterLevel::__set_state(array(
                       'next' => 
                      LoggerPatternConverterLiteral::__set_state(array(
                         'literalValue' => ' ',
                         'next' => 
                        LoggerPatternConverterLogger::__set_state(array(
                           'length' => NULL,
                           'cache' => 
                          array (
                            'VT' => 'VT',
                            'user' => 'user',
                          ),
                           'next' => 
                          LoggerPatternConverterLiteral::__set_state(array(
                             'literalValue' => ' ',
                             'next' => 
                            LoggerPatternConverterMessage::__set_state(array(
                               'next' => 
                              LoggerPatternConverterNewLine::__set_state(array(
                                 'next' => NULL,
                                 'formattingInfo' => 
                                LoggerFormattingInfo::__set_state(array(
                                   'min' => 0,
                                   'max' => 9223372036854775807,
                                   'padLeft' => true,
                                   'trimLeft' => false,
                                )),
                                 'option' => '',
                              )),
                               'formattingInfo' => 
                              LoggerFormattingInfo::__set_state(array(
                                 'min' => 0,
                                 'max' => 9223372036854775807,
                                 'padLeft' => true,
                                 'trimLeft' => false,
                              )),
                               'option' => '',
                            )),
                             'formattingInfo' => NULL,
                             'option' => NULL,
                          )),
                           'formattingInfo' => 
                          LoggerFormattingInfo::__set_state(array(
                             'min' => 0,
                             'max' => 9223372036854775807,
                             'padLeft' => true,
                             'trimLeft' => false,
                          )),
                           'option' => '',
                        )),
                         'formattingInfo' => NULL,
                         'option' => NULL,
                      )),
                       'formattingInfo' => 
                      LoggerFormattingInfo::__set_state(array(
                         'min' => 5,
                         'max' => 9223372036854775807,
                         'padLeft' => false,
                         'trimLeft' => false,
                      )),
                       'option' => '',
                    )),
                     'formattingInfo' => NULL,
                     'option' => NULL,
                  )),
                   'formattingInfo' => 
                  LoggerFormattingInfo::__set_state(array(
                     'min' => 0,
                     'max' => 9223372036854775807,
                     'padLeft' => true,
                     'trimLeft' => false,
                  )),
                   'option' => '',
                )),
              )),
               'name' => 'A1',
               'threshold' => NULL,
               'requiresLayout' => true,
            )),
          ),
        )),
         'appenders' => 
        array (
        ),
      )),
       'lastmysqlrow' => -1,
       'enableSQLlog' => false,
       'continueInstallOnError' => true,
       'avoidPreparedSql' => false,
       'isdb_default_utf8_charset' => true,
       'req_flist' => NULL,
       'logSqlTimingID' => false,
    )),
     'log' => 
    Logger::__set_state(array(
       'additive' => true,
       'fqcn' => 'Logger',
       'level' => NULL,
       'name' => 'VT',
       'parent' => 
      LoggerRoot::__set_state(array(
         'additive' => true,
         'fqcn' => 'Logger',
         'level' => 
        LoggerLevel::__set_state(array(
           'level' => 10000,
           'levelStr' => 'DEBUG',
           'syslogEquivalent' => 6,
        )),
         'name' => 'root',
         'parent' => NULL,
         'appenders' => 
        array (
          'A1' => 
          LoggerAppenderRollingFile::__set_state(array(
             'maxFileSize' => 10485760,
             'maxBackupIndex' => 10,
             'compress' => false,
             'clearConditional' => true,
             'locking' => true,
             'append' => true,
             'file' => 'logs/vtigercrm.log',
             'fp' => NULL,
             'closed' => false,
             'filter' => NULL,
             'layout' => 
            LoggerLayoutPattern::__set_state(array(
               'pattern' => '%date %-5level %logger %message%newline',
               'converterMap' => 
              array (
                'c' => 'LoggerPatternConverterLogger',
                'lo' => 'LoggerPatternConverterLogger',
                'logger' => 'LoggerPatternConverterLogger',
                'C' => 'LoggerPatternConverterClass',
                'class' => 'LoggerPatternConverterClass',
                'cookie' => 'LoggerPatternConverterCookie',
                'd' => 'LoggerPatternConverterDate',
                'date' => 'LoggerPatternConverterDate',
                'e' => 'LoggerPatternConverterEnvironment',
                'env' => 'LoggerPatternConverterEnvironment',
                'ex' => 'LoggerPatternConverterThrowable',
                'exception' => 'LoggerPatternConverterThrowable',
                'throwable' => 'LoggerPatternConverterThrowable',
                'F' => 'LoggerPatternConverterFile',
                'file' => 'LoggerPatternConverterFile',
                'l' => 'LoggerPatternConverterLocation',
                'location' => 'LoggerPatternConverterLocation',
                'L' => 'LoggerPatternConverterLine',
                'line' => 'LoggerPatternConverterLine',
                'm' => 'LoggerPatternConverterMessage',
                'msg' => 'LoggerPatternConverterMessage',
                'message' => 'LoggerPatternConverterMessage',
                'M' => 'LoggerPatternConverterMethod',
                'method' => 'LoggerPatternConverterMethod',
                'n' => 'LoggerPatternConverterNewLine',
                'newline' => 'LoggerPatternConverterNewLine',
                'p' => 'LoggerPatternConverterLevel',
                'le' => 'LoggerPatternConverterLevel',
                'level' => 'LoggerPatternConverterLevel',
                'r' => 'LoggerPatternConverterRelative',
                'relative' => 'LoggerPatternConverterRelative',
                'req' => 'LoggerPatternConverterRequest',
                'request' => 'LoggerPatternConverterRequest',
                's' => 'LoggerPatternConverterServer',
                'server' => 'LoggerPatternConverterServer',
                'ses' => 'LoggerPatternConverterSession',
                'session' => 'LoggerPatternConverterSession',
                'sid' => 'LoggerPatternConverterSessionID',
                'sessionid' => 'LoggerPatternConverterSessionID',
                't' => 'LoggerPatternConverterProcess',
                'pid' => 'LoggerPatternConverterProcess',
                'process' => 'LoggerPatternConverterProcess',
                'x' => 'LoggerPatternConverterNDC',
                'ndc' => 'LoggerPatternConverterNDC',
                'X' => 'LoggerPatternConverterMDC',
                'mdc' => 'LoggerPatternConverterMDC',
              ),
               'head' => 
              LoggerPatternConverterDate::__set_state(array(
                 'format' => 'c',
                 'specials' => 
                array (
                  'ISO8601' => 'c',
                  'ABSOLUTE' => 'H:i:s',
                  'DATE' => 'd M Y H:i:s.u',
                ),
                 'useLocalDate' => false,
                 'next' => 
                LoggerPatternConverterLiteral::__set_state(array(
                   'literalValue' => ' ',
                   'next' => 
                  LoggerPatternConverterLevel::__set_state(array(
                     'next' => 
                    LoggerPatternConverterLiteral::__set_state(array(
                       'literalValue' => ' ',
                       'next' => 
                      LoggerPatternConverterLogger::__set_state(array(
                         'length' => NULL,
                         'cache' => 
                        array (
                          'VT' => 'VT',
                          'user' => 'user',
                        ),
                         'next' => 
                        LoggerPatternConverterLiteral::__set_state(array(
                           'literalValue' => ' ',
                           'next' => 
                          LoggerPatternConverterMessage::__set_state(array(
                             'next' => 
                            LoggerPatternConverterNewLine::__set_state(array(
                               'next' => NULL,
                               'formattingInfo' => 
                              LoggerFormattingInfo::__set_state(array(
                                 'min' => 0,
                                 'max' => 9223372036854775807,
                                 'padLeft' => true,
                                 'trimLeft' => false,
                              )),
                               'option' => '',
                            )),
                             'formattingInfo' => 
                            LoggerFormattingInfo::__set_state(array(
                               'min' => 0,
                               'max' => 9223372036854775807,
                               'padLeft' => true,
                               'trimLeft' => false,
                            )),
                             'option' => '',
                          )),
                           'formattingInfo' => NULL,
                           'option' => NULL,
                        )),
                         'formattingInfo' => 
                        LoggerFormattingInfo::__set_state(array(
                           'min' => 0,
                           'max' => 9223372036854775807,
                           'padLeft' => true,
                           'trimLeft' => false,
                        )),
                         'option' => '',
                      )),
                       'formattingInfo' => NULL,
                       'option' => NULL,
                    )),
                     'formattingInfo' => 
                    LoggerFormattingInfo::__set_state(array(
                       'min' => 5,
                       'max' => 9223372036854775807,
                       'padLeft' => false,
                       'trimLeft' => false,
                    )),
                     'option' => '',
                  )),
                   'formattingInfo' => NULL,
                   'option' => NULL,
                )),
                 'formattingInfo' => 
                LoggerFormattingInfo::__set_state(array(
                   'min' => 0,
                   'max' => 9223372036854775807,
                   'padLeft' => true,
                   'trimLeft' => false,
                )),
                 'option' => '',
              )),
            )),
             'name' => 'A1',
             'threshold' => NULL,
             'requiresLayout' => true,
          )),
        ),
      )),
       'appenders' => 
      array (
      ),
    )),
     'column_fields' => 
    TrackableObject::__set_state(array(
       'storage' => 
      array (
        'pt_origen' => 'Leonardo rivero',
        'pt_tema' => 'Trabajadores',
        'pt_grupo' => '3',
        'pt_temavtiger' => '768',
        'CreatedTime' => '2022-12-06 11:39:32',
        'ModifiedTime' => '2022-12-08 15:20:51',
        'pt_motivo' => 'Vtiger EMPRESA (corto)',
        'tags' => '',
        'record_id' => '1406',
        'record_module' => 'Parametrizaciones',
        'id' => '1406',
      ),
       'trackingEnabled' => true,
       'tracking' => true,
       'changed' => 
      array (
        0 => 'id',
      ),
    )),
     'IsCustomModule' => true,
     'sortby_fields' => 
    array (
    ),
     'required_fields' => 
    array (
      'assigned_user_id' => 1,
    ),
     'special_functions' => 
    array (
      0 => 'set_import_assigned_user',
    ),
     'ownedby' => NULL,
     'recordSource' => 'CRM',
     '__inactive_fields_filtered' => false,
     'moduleName' => 'Parametrizaciones',
     'id' => '1406',
  )),
))
params => array (
  'tema' => false,
  'motivo' => 'Vtiger EMPRESA (corto)',
  'origen' => 'Leonardo Rivero',
)
rs => array (
  0 => '1406',
  'crmid' => '1406',
)
models => Parametrizaciones_Record_Model::__set_state(array(
   'module' => 
  Vtiger_Module_Model::__set_state(array(
     'blocks' => false,
     'nameFields' => false,
     'moduleMeta' => false,
     'fields' => false,
     'relations' => NULL,
     'id' => '63',
     'name' => 'Parametrizaciones',
     'label' => 'Parametrizaciones',
     'version' => '0',
     'minversion' => false,
     'maxversion' => false,
     'presence' => '0',
     'ownedby' => '0',
     'tabsequence' => '-1',
     'parent' => 'TOOLS',
     'customized' => '1',
     'trial' => '0',
     'isentitytype' => '1',
     'entityidcolumn' => false,
     'entityidfield' => false,
     'basetable' => false,
     'basetableid' => false,
     'customtable' => false,
     'grouptable' => false,
     'fieldtable' => false,
     'allowDuplicates' => '1',
     'isSyncable' => '0',
     'syncActionForDuplicate' => '1',
     'source' => 'custom',
  )),
   'valueMap' => 
  TrackableObject::__set_state(array(
     'storage' => 
    array (
      'pt_origen' => 'Leonardo rivero',
      'pt_tema' => 'Trabajadores',
      'pt_grupo' => '3',
      'pt_temavtiger' => '768',
      'CreatedTime' => '2022-12-06 11:39:32',
      'ModifiedTime' => '2022-12-08 15:20:51',
      'pt_motivo' => 'Vtiger EMPRESA (corto)',
      'tags' => '',
      'record_id' => '1406',
      'record_module' => 'Parametrizaciones',
      'id' => '1406',
    ),
     'trackingEnabled' => true,
     'tracking' => true,
     'changed' => 
    array (
      0 => 'id',
    ),
  )),
   'entity' => 
  Parametrizaciones::__set_state(array(
     'table_name' => 'vtiger_parametrizaciones',
     'table_index' => 'parametrizacionesid',
     'customFieldTable' => 
    array (
      0 => 'vtiger_parametrizacionescf',
      1 => 'parametrizacionesid',
    ),
     'tab_name' => 
    array (
      0 => 'vtiger_crmentity',
      1 => 'vtiger_parametrizaciones',
      2 => 'vtiger_parametrizacionescf',
      3 => 'vtiger_crmentity_user_field',
    ),
     'tab_name_index' => 
    array (
      'vtiger_crmentity' => 'crmid',
      'vtiger_parametrizaciones' => 'parametrizacionesid',
      'vtiger_parametrizacionescf' => 'parametrizacionesid',
      'vtiger_crmentity_user_field' => 'recordid',
    ),
     'list_fields' => 
    array (
      'parametrizacionesid' => 
      array (
        0 => 'parametrizaciones',
        1 => '<entitycolumn>',
      ),
      'Assigned To' => 
      array (
        0 => 'crmentity',
        1 => 'smownerid',
      ),
    ),
     'list_fields_name' => 
    array (
      'parametrizacionesid' => 'parametrizacionesid',
      'Assigned To' => 'assigned_user_id',
    ),
     'list_link_field' => 'parametrizacionesid',
     'search_fields' => 
    array (
      'parametrizacionesid' => 
      array (
        0 => 'parametrizaciones',
        1 => '<entitycolumn>',
      ),
      'Assigned To' => 
      array (
        0 => 'vtiger_crmentity',
        1 => 'assigned_user_id',
      ),
    ),
     'search_fields_name' => 
    array (
      'parametrizacionesid' => 'parametrizacionesid',
      'Assigned To' => 'assigned_user_id',
    ),
     'popup_fields' => 
    array (
      0 => 'parametrizacionesid',
    ),
     'def_basicsearch_col' => 'parametrizacionesid',
     'def_detailview_recname' => 'parametrizacionesid',
     'mandatory_fields' => 
    array (
      0 => 'parametrizacionesid',
      1 => 'assigned_user_id',
    ),
     'default_order_by' => 'parametrizacionesid',
     'default_sort_order' => 'ASC',
     'db' => 
    PearDatabase::__set_state(array(
       'database' => 
      ADODB_mysqli::__set_state(array(
         'databaseType' => 'mysqli',
         'dataProvider' => 'mysql',
         'hasInsertID' => true,
         'hasAffectedRows' => true,
         'metaTablesSQL' => 'SELECT
			TABLE_NAME,
			CASE WHEN TABLE_TYPE = \'VIEW\' THEN \'V\' ELSE \'T\' END
		FROM INFORMATION_SCHEMA.TABLES
		WHERE TABLE_SCHEMA=',
         'metaColumnsSQL' => 'SHOW COLUMNS FROM `%s`',
         'fmtTimeStamp' => '\'Y-m-d H:i:s\'',
         'hasLimit' => true,
         'hasMoveFirst' => true,
         'hasGenID' => true,
         'isoDates' => true,
         'sysDate' => 'CURDATE()',
         'sysTimeStamp' => 'NOW()',
         'hasTransactions' => true,
         'forceNewConnect' => false,
         'poorAffectedRows' => true,
         'clientFlags' => 0,
         'substr' => 'substring',
         'port' => '3306',
         'socket' => '',
         '_bindInputArray' => false,
         'nameQuote' => '`',
         'optionFlags' => 
        array (
          0 => 
          array (
            0 => 5,
            1 => 0,
          ),
          1 => 
          array (
            0 => 8,
            1 => true,
          ),
        ),
         'arrayClass' => 'ADORecordSet_array_mysqli',
         'multiQuery' => false,
         '_genIDSQL' => 'update %s set id=LAST_INSERT_ID(id+1);',
         '_genSeqSQL' => 'create table if not exists %s (id int not null)',
         '_genSeqCountSQL' => 'select count(*) from %s',
         '_genSeq2SQL' => 'insert into %s values (%s)',
         '_dropSeqSQL' => 'drop table if exists %s',
         'database' => 'bps2',
         'host' => 'localhost',
         'user' => 'root',
         'password' => '',
         'debug' => false,
         'maxblobsize' => 262144,
         'concat_operator' => '+',
         'length' => 'length',
         'random' => 'rand()',
         'upperCase' => 'upper',
         'fmtDate' => '\'Y-m-d\'',
         'true' => '1',
         'false' => '0',
         'replaceQuote' => '\\\'',
         'charSet' => false,
         'metaDatabasesSQL' => '',
         'uniqueOrderBy' => false,
         'emptyDate' => '&nbsp;',
         'emptyTimeStamp' => '&nbsp;',
         'lastInsID' => false,
         'hasTop' => false,
         'readOnly' => false,
         'genID' => 0,
         'raiseErrorFn' => false,
         'cacheSecs' => 3600,
         'memCache' => false,
         'memCacheHost' => NULL,
         'memCachePort' => 11211,
         'memCacheCompress' => false,
         'sysUTimeStamp' => false,
         'noNullStrings' => false,
         'numCacheHits' => 0,
         'numCacheMisses' => 0,
         'pageExecuteCountRows' => true,
         'uniqueSort' => false,
         'leftOuter' => false,
         'rightOuter' => false,
         'ansiOuter' => false,
         'autoRollback' => false,
         'fnExecute' => false,
         'fnCacheExecute' => false,
         'blobEncodeType' => false,
         'rsPrefix' => 'ADORecordSet_',
         'autoCommit' => true,
         'transOff' => 0,
         'transCnt' => 0,
         'fetchMode' => false,
         'null2null' => 'null',
         'bulkBind' => false,
         '_oldRaiseFn' => false,
         '_transOK' => NULL,
         '_connectionID' => 
        mysqli::__set_state(array(
           'affected_rows' => NULL,
           'client_info' => NULL,
           'client_version' => NULL,
           'connect_errno' => NULL,
           'connect_error' => NULL,
           'errno' => NULL,
           'error' => NULL,
           'error_list' => NULL,
           'field_count' => NULL,
           'host_info' => NULL,
           'info' => NULL,
           'insert_id' => NULL,
           'server_info' => NULL,
           'server_version' => NULL,
           'sqlstate' => NULL,
           'protocol_version' => NULL,
           'thread_id' => NULL,
           'warning_count' => NULL,
        )),
         '_errorMsg' => false,
         '_errorCode' => false,
         '_queryID' => 
        mysqli_result::__set_state(array(
           'current_field' => NULL,
           'field_count' => NULL,
           'lengths' => NULL,
           'num_rows' => NULL,
           'type' => NULL,
        )),
         '_isPersistentConnection' => true,
         '_evalAll' => false,
         '_affected' => false,
         '_logsql' => false,
         '_transmode' => '',
         'connectionParameters' => 
        array (
        ),
         'databaseName' => 'bps2',
      )),
       'dieOnError' => false,
       'dbType' => 'mysqli',
       'dbHostName' => 'localhost:3306',
       'dbName' => 'bps2',
       'dbOptions' => 
      array (
        'persistent' => true,
        'autofree' => false,
        'debug' => 0,
        'seqname_format' => '%s_seq',
        'portability' => 0,
        'ssl' => false,
      ),
       'userName' => 'root',
       'userPassword' => '',
       'query_time' => 0,
       'log' => 
      Logger::__set_state(array(
         'additive' => true,
         'fqcn' => 'Logger',
         'level' => NULL,
         'name' => 'PearDatabase_',
         'parent' => 
        LoggerRoot::__set_state(array(
           'additive' => true,
           'fqcn' => 'Logger',
           'level' => 
          LoggerLevel::__set_state(array(
             'level' => 10000,
             'levelStr' => 'DEBUG',
             'syslogEquivalent' => 6,
          )),
           'name' => 'root',
           'parent' => NULL,
           'appenders' => 
          array (
            'A1' => 
            LoggerAppenderRollingFile::__set_state(array(
               'maxFileSize' => 10485760,
               'maxBackupIndex' => 10,
               'compress' => false,
               'clearConditional' => true,
               'locking' => true,
               'append' => true,
               'file' => 'logs/vtigercrm.log',
               'fp' => NULL,
               'closed' => false,
               'filter' => NULL,
               'layout' => 
              LoggerLayoutPattern::__set_state(array(
                 'pattern' => '%date %-5level %logger %message%newline',
                 'converterMap' => 
                array (
                  'c' => 'LoggerPatternConverterLogger',
                  'lo' => 'LoggerPatternConverterLogger',
                  'logger' => 'LoggerPatternConverterLogger',
                  'C' => 'LoggerPatternConverterClass',
                  'class' => 'LoggerPatternConverterClass',
                  'cookie' => 'LoggerPatternConverterCookie',
                  'd' => 'LoggerPatternConverterDate',
                  'date' => 'LoggerPatternConverterDate',
                  'e' => 'LoggerPatternConverterEnvironment',
                  'env' => 'LoggerPatternConverterEnvironment',
                  'ex' => 'LoggerPatternConverterThrowable',
                  'exception' => 'LoggerPatternConverterThrowable',
                  'throwable' => 'LoggerPatternConverterThrowable',
                  'F' => 'LoggerPatternConverterFile',
                  'file' => 'LoggerPatternConverterFile',
                  'l' => 'LoggerPatternConverterLocation',
                  'location' => 'LoggerPatternConverterLocation',
                  'L' => 'LoggerPatternConverterLine',
                  'line' => 'LoggerPatternConverterLine',
                  'm' => 'LoggerPatternConverterMessage',
                  'msg' => 'LoggerPatternConverterMessage',
                  'message' => 'LoggerPatternConverterMessage',
                  'M' => 'LoggerPatternConverterMethod',
                  'method' => 'LoggerPatternConverterMethod',
                  'n' => 'LoggerPatternConverterNewLine',
                  'newline' => 'LoggerPatternConverterNewLine',
                  'p' => 'LoggerPatternConverterLevel',
                  'le' => 'LoggerPatternConverterLevel',
                  'level' => 'LoggerPatternConverterLevel',
                  'r' => 'LoggerPatternConverterRelative',
                  'relative' => 'LoggerPatternConverterRelative',
                  'req' => 'LoggerPatternConverterRequest',
                  'request' => 'LoggerPatternConverterRequest',
                  's' => 'LoggerPatternConverterServer',
                  'server' => 'LoggerPatternConverterServer',
                  'ses' => 'LoggerPatternConverterSession',
                  'session' => 'LoggerPatternConverterSession',
                  'sid' => 'LoggerPatternConverterSessionID',
                  'sessionid' => 'LoggerPatternConverterSessionID',
                  't' => 'LoggerPatternConverterProcess',
                  'pid' => 'LoggerPatternConverterProcess',
                  'process' => 'LoggerPatternConverterProcess',
                  'x' => 'LoggerPatternConverterNDC',
                  'ndc' => 'LoggerPatternConverterNDC',
                  'X' => 'LoggerPatternConverterMDC',
                  'mdc' => 'LoggerPatternConverterMDC',
                ),
                 'head' => 
                LoggerPatternConverterDate::__set_state(array(
                   'format' => 'c',
                   'specials' => 
                  array (
                    'ISO8601' => 'c',
                    'ABSOLUTE' => 'H:i:s',
                    'DATE' => 'd M Y H:i:s.u',
                  ),
                   'useLocalDate' => false,
                   'next' => 
                  LoggerPatternConverterLiteral::__set_state(array(
                     'literalValue' => ' ',
                     'next' => 
                    LoggerPatternConverterLevel::__set_state(array(
                       'next' => 
                      LoggerPatternConverterLiteral::__set_state(array(
                         'literalValue' => ' ',
                         'next' => 
                        LoggerPatternConverterLogger::__set_state(array(
                           'length' => NULL,
                           'cache' => 
                          array (
                            'VT' => 'VT',
                            'user' => 'user',
                          ),
                           'next' => 
                          LoggerPatternConverterLiteral::__set_state(array(
                             'literalValue' => ' ',
                             'next' => 
                            LoggerPatternConverterMessage::__set_state(array(
                               'next' => 
                              LoggerPatternConverterNewLine::__set_state(array(
                                 'next' => NULL,
                                 'formattingInfo' => 
                                LoggerFormattingInfo::__set_state(array(
                                   'min' => 0,
                                   'max' => 9223372036854775807,
                                   'padLeft' => true,
                                   'trimLeft' => false,
                                )),
                                 'option' => '',
                              )),
                               'formattingInfo' => 
                              LoggerFormattingInfo::__set_state(array(
                                 'min' => 0,
                                 'max' => 9223372036854775807,
                                 'padLeft' => true,
                                 'trimLeft' => false,
                              )),
                               'option' => '',
                            )),
                             'formattingInfo' => NULL,
                             'option' => NULL,
                          )),
                           'formattingInfo' => 
                          LoggerFormattingInfo::__set_state(array(
                             'min' => 0,
                             'max' => 9223372036854775807,
                             'padLeft' => true,
                             'trimLeft' => false,
                          )),
                           'option' => '',
                        )),
                         'formattingInfo' => NULL,
                         'option' => NULL,
                      )),
                       'formattingInfo' => 
                      LoggerFormattingInfo::__set_state(array(
                         'min' => 5,
                         'max' => 9223372036854775807,
                         'padLeft' => false,
                         'trimLeft' => false,
                      )),
                       'option' => '',
                    )),
                     'formattingInfo' => NULL,
                     'option' => NULL,
                  )),
                   'formattingInfo' => 
                  LoggerFormattingInfo::__set_state(array(
                     'min' => 0,
                     'max' => 9223372036854775807,
                     'padLeft' => true,
                     'trimLeft' => false,
                  )),
                   'option' => '',
                )),
              )),
               'name' => 'A1',
               'threshold' => NULL,
               'requiresLayout' => true,
            )),
          ),
        )),
         'appenders' => 
        array (
        ),
      )),
       'lastmysqlrow' => -1,
       'enableSQLlog' => false,
       'continueInstallOnError' => true,
       'avoidPreparedSql' => false,
       'isdb_default_utf8_charset' => true,
       'req_flist' => NULL,
       'logSqlTimingID' => false,
    )),
     'log' => 
    Logger::__set_state(array(
       'additive' => true,
       'fqcn' => 'Logger',
       'level' => NULL,
       'name' => 'VT',
       'parent' => 
      LoggerRoot::__set_state(array(
         'additive' => true,
         'fqcn' => 'Logger',
         'level' => 
        LoggerLevel::__set_state(array(
           'level' => 10000,
           'levelStr' => 'DEBUG',
           'syslogEquivalent' => 6,
        )),
         'name' => 'root',
         'parent' => NULL,
         'appenders' => 
        array (
          'A1' => 
          LoggerAppenderRollingFile::__set_state(array(
             'maxFileSize' => 10485760,
             'maxBackupIndex' => 10,
             'compress' => false,
             'clearConditional' => true,
             'locking' => true,
             'append' => true,
             'file' => 'logs/vtigercrm.log',
             'fp' => NULL,
             'closed' => false,
             'filter' => NULL,
             'layout' => 
            LoggerLayoutPattern::__set_state(array(
               'pattern' => '%date %-5level %logger %message%newline',
               'converterMap' => 
              array (
                'c' => 'LoggerPatternConverterLogger',
                'lo' => 'LoggerPatternConverterLogger',
                'logger' => 'LoggerPatternConverterLogger',
                'C' => 'LoggerPatternConverterClass',
                'class' => 'LoggerPatternConverterClass',
                'cookie' => 'LoggerPatternConverterCookie',
                'd' => 'LoggerPatternConverterDate',
                'date' => 'LoggerPatternConverterDate',
                'e' => 'LoggerPatternConverterEnvironment',
                'env' => 'LoggerPatternConverterEnvironment',
                'ex' => 'LoggerPatternConverterThrowable',
                'exception' => 'LoggerPatternConverterThrowable',
                'throwable' => 'LoggerPatternConverterThrowable',
                'F' => 'LoggerPatternConverterFile',
                'file' => 'LoggerPatternConverterFile',
                'l' => 'LoggerPatternConverterLocation',
                'location' => 'LoggerPatternConverterLocation',
                'L' => 'LoggerPatternConverterLine',
                'line' => 'LoggerPatternConverterLine',
                'm' => 'LoggerPatternConverterMessage',
                'msg' => 'LoggerPatternConverterMessage',
                'message' => 'LoggerPatternConverterMessage',
                'M' => 'LoggerPatternConverterMethod',
                'method' => 'LoggerPatternConverterMethod',
                'n' => 'LoggerPatternConverterNewLine',
                'newline' => 'LoggerPatternConverterNewLine',
                'p' => 'LoggerPatternConverterLevel',
                'le' => 'LoggerPatternConverterLevel',
                'level' => 'LoggerPatternConverterLevel',
                'r' => 'LoggerPatternConverterRelative',
                'relative' => 'LoggerPatternConverterRelative',
                'req' => 'LoggerPatternConverterRequest',
                'request' => 'LoggerPatternConverterRequest',
                's' => 'LoggerPatternConverterServer',
                'server' => 'LoggerPatternConverterServer',
                'ses' => 'LoggerPatternConverterSession',
                'session' => 'LoggerPatternConverterSession',
                'sid' => 'LoggerPatternConverterSessionID',
                'sessionid' => 'LoggerPatternConverterSessionID',
                't' => 'LoggerPatternConverterProcess',
                'pid' => 'LoggerPatternConverterProcess',
                'process' => 'LoggerPatternConverterProcess',
                'x' => 'LoggerPatternConverterNDC',
                'ndc' => 'LoggerPatternConverterNDC',
                'X' => 'LoggerPatternConverterMDC',
                'mdc' => 'LoggerPatternConverterMDC',
              ),
               'head' => 
              LoggerPatternConverterDate::__set_state(array(
                 'format' => 'c',
                 'specials' => 
                array (
                  'ISO8601' => 'c',
                  'ABSOLUTE' => 'H:i:s',
                  'DATE' => 'd M Y H:i:s.u',
                ),
                 'useLocalDate' => false,
                 'next' => 
                LoggerPatternConverterLiteral::__set_state(array(
                   'literalValue' => ' ',
                   'next' => 
                  LoggerPatternConverterLevel::__set_state(array(
                     'next' => 
                    LoggerPatternConverterLiteral::__set_state(array(
                       'literalValue' => ' ',
                       'next' => 
                      LoggerPatternConverterLogger::__set_state(array(
                         'length' => NULL,
                         'cache' => 
                        array (
                          'VT' => 'VT',
                          'user' => 'user',
                        ),
                         'next' => 
                        LoggerPatternConverterLiteral::__set_state(array(
                           'literalValue' => ' ',
                           'next' => 
                          LoggerPatternConverterMessage::__set_state(array(
                             'next' => 
                            LoggerPatternConverterNewLine::__set_state(array(
                               'next' => NULL,
                               'formattingInfo' => 
                              LoggerFormattingInfo::__set_state(array(
                                 'min' => 0,
                                 'max' => 9223372036854775807,
                                 'padLeft' => true,
                                 'trimLeft' => false,
                              )),
                               'option' => '',
                            )),
                             'formattingInfo' => 
                            LoggerFormattingInfo::__set_state(array(
                               'min' => 0,
                               'max' => 9223372036854775807,
                               'padLeft' => true,
                               'trimLeft' => false,
                            )),
                             'option' => '',
                          )),
                           'formattingInfo' => NULL,
                           'option' => NULL,
                        )),
                         'formattingInfo' => 
                        LoggerFormattingInfo::__set_state(array(
                           'min' => 0,
                           'max' => 9223372036854775807,
                           'padLeft' => true,
                           'trimLeft' => false,
                        )),
                         'option' => '',
                      )),
                       'formattingInfo' => NULL,
                       'option' => NULL,
                    )),
                     'formattingInfo' => 
                    LoggerFormattingInfo::__set_state(array(
                       'min' => 5,
                       'max' => 9223372036854775807,
                       'padLeft' => false,
                       'trimLeft' => false,
                    )),
                     'option' => '',
                  )),
                   'formattingInfo' => NULL,
                   'option' => NULL,
                )),
                 'formattingInfo' => 
                LoggerFormattingInfo::__set_state(array(
                   'min' => 0,
                   'max' => 9223372036854775807,
                   'padLeft' => true,
                   'trimLeft' => false,
                )),
                 'option' => '',
              )),
            )),
             'name' => 'A1',
             'threshold' => NULL,
             'requiresLayout' => true,
          )),
        ),
      )),
       'appenders' => 
      array (
      ),
    )),
     'column_fields' => 
    TrackableObject::__set_state(array(
       'storage' => 
      array (
        'pt_origen' => 'Leonardo rivero',
        'pt_tema' => 'Trabajadores',
        'pt_grupo' => '3',
        'pt_temavtiger' => '768',
        'CreatedTime' => '2022-12-06 11:39:32',
        'ModifiedTime' => '2022-12-08 15:20:51',
        'pt_motivo' => 'Vtiger EMPRESA (corto)',
        'tags' => '',
        'record_id' => '1406',
        'record_module' => 'Parametrizaciones',
        'id' => '1406',
      ),
       'trackingEnabled' => true,
       'tracking' => true,
       'changed' => 
      array (
        0 => 'id',
      ),
    )),
     'IsCustomModule' => true,
     'sortby_fields' => 
    array (
    ),
     'required_fields' => 
    array (
      'assigned_user_id' => 1,
    ),
     'special_functions' => 
    array (
      0 => 'set_import_assigned_user',
    ),
     'ownedby' => NULL,
     'recordSource' => 'CRM',
     '__inactive_fields_filtered' => false,
     'moduleName' => 'Parametrizaciones',
     'id' => '1406',
  )),
))
params => array (
  'tema' => false,
  'motivo' => 'Vtiger EMPRESA (corto)',
  'origen' => 'Leonardo Rivero',
)
rs => array (
  0 => '1406',
  'crmid' => '1406',
)
models => Parametrizaciones_Record_Model::__set_state(array(
   'module' => 
  Vtiger_Module_Model::__set_state(array(
     'blocks' => false,
     'nameFields' => false,
     'moduleMeta' => false,
     'fields' => false,
     'relations' => NULL,
     'id' => '63',
     'name' => 'Parametrizaciones',
     'label' => 'Parametrizaciones',
     'version' => '0',
     'minversion' => false,
     'maxversion' => false,
     'presence' => '0',
     'ownedby' => '0',
     'tabsequence' => '-1',
     'parent' => 'TOOLS',
     'customized' => '1',
     'trial' => '0',
     'isentitytype' => '1',
     'entityidcolumn' => false,
     'entityidfield' => false,
     'basetable' => false,
     'basetableid' => false,
     'customtable' => false,
     'grouptable' => false,
     'fieldtable' => false,
     'allowDuplicates' => '1',
     'isSyncable' => '0',
     'syncActionForDuplicate' => '1',
     'source' => 'custom',
  )),
   'valueMap' => 
  TrackableObject::__set_state(array(
     'storage' => 
    array (
      'pt_origen' => 'Leonardo rivero',
      'pt_tema' => 'Trabajadores',
      'pt_grupo' => '3',
      'pt_temavtiger' => '768',
      'CreatedTime' => '2022-12-06 11:39:32',
      'ModifiedTime' => '2022-12-08 15:20:51',
      'pt_motivo' => 'Vtiger EMPRESA (corto)',
      'tags' => '',
      'record_id' => '1406',
      'record_module' => 'Parametrizaciones',
      'id' => '1406',
    ),
     'trackingEnabled' => true,
     'tracking' => true,
     'changed' => 
    array (
      0 => 'id',
    ),
  )),
   'entity' => 
  Parametrizaciones::__set_state(array(
     'table_name' => 'vtiger_parametrizaciones',
     'table_index' => 'parametrizacionesid',
     'customFieldTable' => 
    array (
      0 => 'vtiger_parametrizacionescf',
      1 => 'parametrizacionesid',
    ),
     'tab_name' => 
    array (
      0 => 'vtiger_crmentity',
      1 => 'vtiger_parametrizaciones',
      2 => 'vtiger_parametrizacionescf',
      3 => 'vtiger_crmentity_user_field',
    ),
     'tab_name_index' => 
    array (
      'vtiger_crmentity' => 'crmid',
      'vtiger_parametrizaciones' => 'parametrizacionesid',
      'vtiger_parametrizacionescf' => 'parametrizacionesid',
      'vtiger_crmentity_user_field' => 'recordid',
    ),
     'list_fields' => 
    array (
      'parametrizacionesid' => 
      array (
        0 => 'parametrizaciones',
        1 => '<entitycolumn>',
      ),
      'Assigned To' => 
      array (
        0 => 'crmentity',
        1 => 'smownerid',
      ),
    ),
     'list_fields_name' => 
    array (
      'parametrizacionesid' => 'parametrizacionesid',
      'Assigned To' => 'assigned_user_id',
    ),
     'list_link_field' => 'parametrizacionesid',
     'search_fields' => 
    array (
      'parametrizacionesid' => 
      array (
        0 => 'parametrizaciones',
        1 => '<entitycolumn>',
      ),
      'Assigned To' => 
      array (
        0 => 'vtiger_crmentity',
        1 => 'assigned_user_id',
      ),
    ),
     'search_fields_name' => 
    array (
      'parametrizacionesid' => 'parametrizacionesid',
      'Assigned To' => 'assigned_user_id',
    ),
     'popup_fields' => 
    array (
      0 => 'parametrizacionesid',
    ),
     'def_basicsearch_col' => 'parametrizacionesid',
     'def_detailview_recname' => 'parametrizacionesid',
     'mandatory_fields' => 
    array (
      0 => 'parametrizacionesid',
      1 => 'assigned_user_id',
    ),
     'default_order_by' => 'parametrizacionesid',
     'default_sort_order' => 'ASC',
     'db' => 
    PearDatabase::__set_state(array(
       'database' => 
      ADODB_mysqli::__set_state(array(
         'databaseType' => 'mysqli',
         'dataProvider' => 'mysql',
         'hasInsertID' => true,
         'hasAffectedRows' => true,
         'metaTablesSQL' => 'SELECT
			TABLE_NAME,
			CASE WHEN TABLE_TYPE = \'VIEW\' THEN \'V\' ELSE \'T\' END
		FROM INFORMATION_SCHEMA.TABLES
		WHERE TABLE_SCHEMA=',
         'metaColumnsSQL' => 'SHOW COLUMNS FROM `%s`',
         'fmtTimeStamp' => '\'Y-m-d H:i:s\'',
         'hasLimit' => true,
         'hasMoveFirst' => true,
         'hasGenID' => true,
         'isoDates' => true,
         'sysDate' => 'CURDATE()',
         'sysTimeStamp' => 'NOW()',
         'hasTransactions' => true,
         'forceNewConnect' => false,
         'poorAffectedRows' => true,
         'clientFlags' => 0,
         'substr' => 'substring',
         'port' => '3306',
         'socket' => '',
         '_bindInputArray' => false,
         'nameQuote' => '`',
         'optionFlags' => 
        array (
          0 => 
          array (
            0 => 5,
            1 => 0,
          ),
          1 => 
          array (
            0 => 8,
            1 => true,
          ),
        ),
         'arrayClass' => 'ADORecordSet_array_mysqli',
         'multiQuery' => false,
         '_genIDSQL' => 'update %s set id=LAST_INSERT_ID(id+1);',
         '_genSeqSQL' => 'create table if not exists %s (id int not null)',
         '_genSeqCountSQL' => 'select count(*) from %s',
         '_genSeq2SQL' => 'insert into %s values (%s)',
         '_dropSeqSQL' => 'drop table if exists %s',
         'database' => 'bps2',
         'host' => 'localhost',
         'user' => 'root',
         'password' => '',
         'debug' => false,
         'maxblobsize' => 262144,
         'concat_operator' => '+',
         'length' => 'length',
         'random' => 'rand()',
         'upperCase' => 'upper',
         'fmtDate' => '\'Y-m-d\'',
         'true' => '1',
         'false' => '0',
         'replaceQuote' => '\\\'',
         'charSet' => false,
         'metaDatabasesSQL' => '',
         'uniqueOrderBy' => false,
         'emptyDate' => '&nbsp;',
         'emptyTimeStamp' => '&nbsp;',
         'lastInsID' => false,
         'hasTop' => false,
         'readOnly' => false,
         'genID' => 0,
         'raiseErrorFn' => false,
         'cacheSecs' => 3600,
         'memCache' => false,
         'memCacheHost' => NULL,
         'memCachePort' => 11211,
         'memCacheCompress' => false,
         'sysUTimeStamp' => false,
         'noNullStrings' => false,
         'numCacheHits' => 0,
         'numCacheMisses' => 0,
         'pageExecuteCountRows' => true,
         'uniqueSort' => false,
         'leftOuter' => false,
         'rightOuter' => false,
         'ansiOuter' => false,
         'autoRollback' => false,
         'fnExecute' => false,
         'fnCacheExecute' => false,
         'blobEncodeType' => false,
         'rsPrefix' => 'ADORecordSet_',
         'autoCommit' => true,
         'transOff' => 0,
         'transCnt' => 0,
         'fetchMode' => false,
         'null2null' => 'null',
         'bulkBind' => false,
         '_oldRaiseFn' => false,
         '_transOK' => NULL,
         '_connectionID' => 
        mysqli::__set_state(array(
           'affected_rows' => NULL,
           'client_info' => NULL,
           'client_version' => NULL,
           'connect_errno' => NULL,
           'connect_error' => NULL,
           'errno' => NULL,
           'error' => NULL,
           'error_list' => NULL,
           'field_count' => NULL,
           'host_info' => NULL,
           'info' => NULL,
           'insert_id' => NULL,
           'server_info' => NULL,
           'server_version' => NULL,
           'sqlstate' => NULL,
           'protocol_version' => NULL,
           'thread_id' => NULL,
           'warning_count' => NULL,
        )),
         '_errorMsg' => false,
         '_errorCode' => false,
         '_queryID' => 
        mysqli_result::__set_state(array(
           'current_field' => NULL,
           'field_count' => NULL,
           'lengths' => NULL,
           'num_rows' => NULL,
           'type' => NULL,
        )),
         '_isPersistentConnection' => true,
         '_evalAll' => false,
         '_affected' => false,
         '_logsql' => false,
         '_transmode' => '',
         'connectionParameters' => 
        array (
        ),
         'databaseName' => 'bps2',
      )),
       'dieOnError' => false,
       'dbType' => 'mysqli',
       'dbHostName' => 'localhost:3306',
       'dbName' => 'bps2',
       'dbOptions' => 
      array (
        'persistent' => true,
        'autofree' => false,
        'debug' => 0,
        'seqname_format' => '%s_seq',
        'portability' => 0,
        'ssl' => false,
      ),
       'userName' => 'root',
       'userPassword' => '',
       'query_time' => 0,
       'log' => 
      Logger::__set_state(array(
         'additive' => true,
         'fqcn' => 'Logger',
         'level' => NULL,
         'name' => 'PearDatabase_',
         'parent' => 
        LoggerRoot::__set_state(array(
           'additive' => true,
           'fqcn' => 'Logger',
           'level' => 
          LoggerLevel::__set_state(array(
             'level' => 10000,
             'levelStr' => 'DEBUG',
             'syslogEquivalent' => 6,
          )),
           'name' => 'root',
           'parent' => NULL,
           'appenders' => 
          array (
            'A1' => 
            LoggerAppenderRollingFile::__set_state(array(
               'maxFileSize' => 10485760,
               'maxBackupIndex' => 10,
               'compress' => false,
               'clearConditional' => true,
               'locking' => true,
               'append' => true,
               'file' => 'logs/vtigercrm.log',
               'fp' => NULL,
               'closed' => false,
               'filter' => NULL,
               'layout' => 
              LoggerLayoutPattern::__set_state(array(
                 'pattern' => '%date %-5level %logger %message%newline',
                 'converterMap' => 
                array (
                  'c' => 'LoggerPatternConverterLogger',
                  'lo' => 'LoggerPatternConverterLogger',
                  'logger' => 'LoggerPatternConverterLogger',
                  'C' => 'LoggerPatternConverterClass',
                  'class' => 'LoggerPatternConverterClass',
                  'cookie' => 'LoggerPatternConverterCookie',
                  'd' => 'LoggerPatternConverterDate',
                  'date' => 'LoggerPatternConverterDate',
                  'e' => 'LoggerPatternConverterEnvironment',
                  'env' => 'LoggerPatternConverterEnvironment',
                  'ex' => 'LoggerPatternConverterThrowable',
                  'exception' => 'LoggerPatternConverterThrowable',
                  'throwable' => 'LoggerPatternConverterThrowable',
                  'F' => 'LoggerPatternConverterFile',
                  'file' => 'LoggerPatternConverterFile',
                  'l' => 'LoggerPatternConverterLocation',
                  'location' => 'LoggerPatternConverterLocation',
                  'L' => 'LoggerPatternConverterLine',
                  'line' => 'LoggerPatternConverterLine',
                  'm' => 'LoggerPatternConverterMessage',
                  'msg' => 'LoggerPatternConverterMessage',
                  'message' => 'LoggerPatternConverterMessage',
                  'M' => 'LoggerPatternConverterMethod',
                  'method' => 'LoggerPatternConverterMethod',
                  'n' => 'LoggerPatternConverterNewLine',
                  'newline' => 'LoggerPatternConverterNewLine',
                  'p' => 'LoggerPatternConverterLevel',
                  'le' => 'LoggerPatternConverterLevel',
                  'level' => 'LoggerPatternConverterLevel',
                  'r' => 'LoggerPatternConverterRelative',
                  'relative' => 'LoggerPatternConverterRelative',
                  'req' => 'LoggerPatternConverterRequest',
                  'request' => 'LoggerPatternConverterRequest',
                  's' => 'LoggerPatternConverterServer',
                  'server' => 'LoggerPatternConverterServer',
                  'ses' => 'LoggerPatternConverterSession',
                  'session' => 'LoggerPatternConverterSession',
                  'sid' => 'LoggerPatternConverterSessionID',
                  'sessionid' => 'LoggerPatternConverterSessionID',
                  't' => 'LoggerPatternConverterProcess',
                  'pid' => 'LoggerPatternConverterProcess',
                  'process' => 'LoggerPatternConverterProcess',
                  'x' => 'LoggerPatternConverterNDC',
                  'ndc' => 'LoggerPatternConverterNDC',
                  'X' => 'LoggerPatternConverterMDC',
                  'mdc' => 'LoggerPatternConverterMDC',
                ),
                 'head' => 
                LoggerPatternConverterDate::__set_state(array(
                   'format' => 'c',
                   'specials' => 
                  array (
                    'ISO8601' => 'c',
                    'ABSOLUTE' => 'H:i:s',
                    'DATE' => 'd M Y H:i:s.u',
                  ),
                   'useLocalDate' => false,
                   'next' => 
                  LoggerPatternConverterLiteral::__set_state(array(
                     'literalValue' => ' ',
                     'next' => 
                    LoggerPatternConverterLevel::__set_state(array(
                       'next' => 
                      LoggerPatternConverterLiteral::__set_state(array(
                         'literalValue' => ' ',
                         'next' => 
                        LoggerPatternConverterLogger::__set_state(array(
                           'length' => NULL,
                           'cache' => 
                          array (
                            'VT' => 'VT',
                            'user' => 'user',
                          ),
                           'next' => 
                          LoggerPatternConverterLiteral::__set_state(array(
                             'literalValue' => ' ',
                             'next' => 
                            LoggerPatternConverterMessage::__set_state(array(
                               'next' => 
                              LoggerPatternConverterNewLine::__set_state(array(
                                 'next' => NULL,
                                 'formattingInfo' => 
                                LoggerFormattingInfo::__set_state(array(
                                   'min' => 0,
                                   'max' => 9223372036854775807,
                                   'padLeft' => true,
                                   'trimLeft' => false,
                                )),
                                 'option' => '',
                              )),
                               'formattingInfo' => 
                              LoggerFormattingInfo::__set_state(array(
                                 'min' => 0,
                                 'max' => 9223372036854775807,
                                 'padLeft' => true,
                                 'trimLeft' => false,
                              )),
                               'option' => '',
                            )),
                             'formattingInfo' => NULL,
                             'option' => NULL,
                          )),
                           'formattingInfo' => 
                          LoggerFormattingInfo::__set_state(array(
                             'min' => 0,
                             'max' => 9223372036854775807,
                             'padLeft' => true,
                             'trimLeft' => false,
                          )),
                           'option' => '',
                        )),
                         'formattingInfo' => NULL,
                         'option' => NULL,
                      )),
                       'formattingInfo' => 
                      LoggerFormattingInfo::__set_state(array(
                         'min' => 5,
                         'max' => 9223372036854775807,
                         'padLeft' => false,
                         'trimLeft' => false,
                      )),
                       'option' => '',
                    )),
                     'formattingInfo' => NULL,
                     'option' => NULL,
                  )),
                   'formattingInfo' => 
                  LoggerFormattingInfo::__set_state(array(
                     'min' => 0,
                     'max' => 9223372036854775807,
                     'padLeft' => true,
                     'trimLeft' => false,
                  )),
                   'option' => '',
                )),
              )),
               'name' => 'A1',
               'threshold' => NULL,
               'requiresLayout' => true,
            )),
          ),
        )),
         'appenders' => 
        array (
        ),
      )),
       'lastmysqlrow' => -1,
       'enableSQLlog' => false,
       'continueInstallOnError' => true,
       'avoidPreparedSql' => false,
       'isdb_default_utf8_charset' => true,
       'req_flist' => NULL,
       'logSqlTimingID' => false,
    )),
     'log' => 
    Logger::__set_state(array(
       'additive' => true,
       'fqcn' => 'Logger',
       'level' => NULL,
       'name' => 'VT',
       'parent' => 
      LoggerRoot::__set_state(array(
         'additive' => true,
         'fqcn' => 'Logger',
         'level' => 
        LoggerLevel::__set_state(array(
           'level' => 10000,
           'levelStr' => 'DEBUG',
           'syslogEquivalent' => 6,
        )),
         'name' => 'root',
         'parent' => NULL,
         'appenders' => 
        array (
          'A1' => 
          LoggerAppenderRollingFile::__set_state(array(
             'maxFileSize' => 10485760,
             'maxBackupIndex' => 10,
             'compress' => false,
             'clearConditional' => true,
             'locking' => true,
             'append' => true,
             'file' => 'logs/vtigercrm.log',
             'fp' => NULL,
             'closed' => false,
             'filter' => NULL,
             'layout' => 
            LoggerLayoutPattern::__set_state(array(
               'pattern' => '%date %-5level %logger %message%newline',
               'converterMap' => 
              array (
                'c' => 'LoggerPatternConverterLogger',
                'lo' => 'LoggerPatternConverterLogger',
                'logger' => 'LoggerPatternConverterLogger',
                'C' => 'LoggerPatternConverterClass',
                'class' => 'LoggerPatternConverterClass',
                'cookie' => 'LoggerPatternConverterCookie',
                'd' => 'LoggerPatternConverterDate',
                'date' => 'LoggerPatternConverterDate',
                'e' => 'LoggerPatternConverterEnvironment',
                'env' => 'LoggerPatternConverterEnvironment',
                'ex' => 'LoggerPatternConverterThrowable',
                'exception' => 'LoggerPatternConverterThrowable',
                'throwable' => 'LoggerPatternConverterThrowable',
                'F' => 'LoggerPatternConverterFile',
                'file' => 'LoggerPatternConverterFile',
                'l' => 'LoggerPatternConverterLocation',
                'location' => 'LoggerPatternConverterLocation',
                'L' => 'LoggerPatternConverterLine',
                'line' => 'LoggerPatternConverterLine',
                'm' => 'LoggerPatternConverterMessage',
                'msg' => 'LoggerPatternConverterMessage',
                'message' => 'LoggerPatternConverterMessage',
                'M' => 'LoggerPatternConverterMethod',
                'method' => 'LoggerPatternConverterMethod',
                'n' => 'LoggerPatternConverterNewLine',
                'newline' => 'LoggerPatternConverterNewLine',
                'p' => 'LoggerPatternConverterLevel',
                'le' => 'LoggerPatternConverterLevel',
                'level' => 'LoggerPatternConverterLevel',
                'r' => 'LoggerPatternConverterRelative',
                'relative' => 'LoggerPatternConverterRelative',
                'req' => 'LoggerPatternConverterRequest',
                'request' => 'LoggerPatternConverterRequest',
                's' => 'LoggerPatternConverterServer',
                'server' => 'LoggerPatternConverterServer',
                'ses' => 'LoggerPatternConverterSession',
                'session' => 'LoggerPatternConverterSession',
                'sid' => 'LoggerPatternConverterSessionID',
                'sessionid' => 'LoggerPatternConverterSessionID',
                't' => 'LoggerPatternConverterProcess',
                'pid' => 'LoggerPatternConverterProcess',
                'process' => 'LoggerPatternConverterProcess',
                'x' => 'LoggerPatternConverterNDC',
                'ndc' => 'LoggerPatternConverterNDC',
                'X' => 'LoggerPatternConverterMDC',
                'mdc' => 'LoggerPatternConverterMDC',
              ),
               'head' => 
              LoggerPatternConverterDate::__set_state(array(
                 'format' => 'c',
                 'specials' => 
                array (
                  'ISO8601' => 'c',
                  'ABSOLUTE' => 'H:i:s',
                  'DATE' => 'd M Y H:i:s.u',
                ),
                 'useLocalDate' => false,
                 'next' => 
                LoggerPatternConverterLiteral::__set_state(array(
                   'literalValue' => ' ',
                   'next' => 
                  LoggerPatternConverterLevel::__set_state(array(
                     'next' => 
                    LoggerPatternConverterLiteral::__set_state(array(
                       'literalValue' => ' ',
                       'next' => 
                      LoggerPatternConverterLogger::__set_state(array(
                         'length' => NULL,
                         'cache' => 
                        array (
                          'VT' => 'VT',
                          'user' => 'user',
                        ),
                         'next' => 
                        LoggerPatternConverterLiteral::__set_state(array(
                           'literalValue' => ' ',
                           'next' => 
                          LoggerPatternConverterMessage::__set_state(array(
                             'next' => 
                            LoggerPatternConverterNewLine::__set_state(array(
                               'next' => NULL,
                               'formattingInfo' => 
                              LoggerFormattingInfo::__set_state(array(
                                 'min' => 0,
                                 'max' => 9223372036854775807,
                                 'padLeft' => true,
                                 'trimLeft' => false,
                              )),
                               'option' => '',
                            )),
                             'formattingInfo' => 
                            LoggerFormattingInfo::__set_state(array(
                               'min' => 0,
                               'max' => 9223372036854775807,
                               'padLeft' => true,
                               'trimLeft' => false,
                            )),
                             'option' => '',
                          )),
                           'formattingInfo' => NULL,
                           'option' => NULL,
                        )),
                         'formattingInfo' => 
                        LoggerFormattingInfo::__set_state(array(
                           'min' => 0,
                           'max' => 9223372036854775807,
                           'padLeft' => true,
                           'trimLeft' => false,
                        )),
                         'option' => '',
                      )),
                       'formattingInfo' => NULL,
                       'option' => NULL,
                    )),
                     'formattingInfo' => 
                    LoggerFormattingInfo::__set_state(array(
                       'min' => 5,
                       'max' => 9223372036854775807,
                       'padLeft' => false,
                       'trimLeft' => false,
                    )),
                     'option' => '',
                  )),
                   'formattingInfo' => NULL,
                   'option' => NULL,
                )),
                 'formattingInfo' => 
                LoggerFormattingInfo::__set_state(array(
                   'min' => 0,
                   'max' => 9223372036854775807,
                   'padLeft' => true,
                   'trimLeft' => false,
                )),
                 'option' => '',
              )),
            )),
             'name' => 'A1',
             'threshold' => NULL,
             'requiresLayout' => true,
          )),
        ),
      )),
       'appenders' => 
      array (
      ),
    )),
     'column_fields' => 
    TrackableObject::__set_state(array(
       'storage' => 
      array (
        'pt_origen' => 'Leonardo rivero',
        'pt_tema' => 'Trabajadores',
        'pt_grupo' => '3',
        'pt_temavtiger' => '768',
        'CreatedTime' => '2022-12-06 11:39:32',
        'ModifiedTime' => '2022-12-08 15:20:51',
        'pt_motivo' => 'Vtiger EMPRESA (corto)',
        'tags' => '',
        'record_id' => '1406',
        'record_module' => 'Parametrizaciones',
        'id' => '1406',
      ),
       'trackingEnabled' => true,
       'tracking' => true,
       'changed' => 
      array (
        0 => 'id',
      ),
    )),
     'IsCustomModule' => true,
     'sortby_fields' => 
    array (
    ),
     'required_fields' => 
    array (
      'assigned_user_id' => 1,
    ),
     'special_functions' => 
    array (
      0 => 'set_import_assigned_user',
    ),
     'ownedby' => NULL,
     'recordSource' => 'CRM',
     '__inactive_fields_filtered' => false,
     'moduleName' => 'Parametrizaciones',
     'id' => '1406',
  )),
))
params => array (
  'tema' => false,
  'motivo' => 'Vtiger EMPRESA (corto)',
  'origen' => 'Leonardo Rivero',
)
rs => array (
  0 => '1406',
  'crmid' => '1406',
)
models => Parametrizaciones_Record_Model::__set_state(array(
   'module' => 
  Vtiger_Module_Model::__set_state(array(
     'blocks' => false,
     'nameFields' => false,
     'moduleMeta' => false,
     'fields' => false,
     'relations' => NULL,
     'id' => '63',
     'name' => 'Parametrizaciones',
     'label' => 'Parametrizaciones',
     'version' => '0',
     'minversion' => false,
     'maxversion' => false,
     'presence' => '0',
     'ownedby' => '0',
     'tabsequence' => '-1',
     'parent' => 'TOOLS',
     'customized' => '1',
     'trial' => '0',
     'isentitytype' => '1',
     'entityidcolumn' => false,
     'entityidfield' => false,
     'basetable' => false,
     'basetableid' => false,
     'customtable' => false,
     'grouptable' => false,
     'fieldtable' => false,
     'allowDuplicates' => '1',
     'isSyncable' => '0',
     'syncActionForDuplicate' => '1',
     'source' => 'custom',
  )),
   'valueMap' => 
  TrackableObject::__set_state(array(
     'storage' => 
    array (
      'pt_origen' => 'Leonardo rivero',
      'pt_tema' => 'Trabajadores',
      'pt_grupo' => '3',
      'pt_temavtiger' => '768',
      'CreatedTime' => '2022-12-06 11:39:32',
      'ModifiedTime' => '2022-12-08 15:20:51',
      'pt_motivo' => 'Vtiger EMPRESA (corto)',
      'tags' => '',
      'record_id' => '1406',
      'record_module' => 'Parametrizaciones',
      'id' => '1406',
    ),
     'trackingEnabled' => true,
     'tracking' => true,
     'changed' => 
    array (
      0 => 'id',
    ),
  )),
   'entity' => 
  Parametrizaciones::__set_state(array(
     'table_name' => 'vtiger_parametrizaciones',
     'table_index' => 'parametrizacionesid',
     'customFieldTable' => 
    array (
      0 => 'vtiger_parametrizacionescf',
      1 => 'parametrizacionesid',
    ),
     'tab_name' => 
    array (
      0 => 'vtiger_crmentity',
      1 => 'vtiger_parametrizaciones',
      2 => 'vtiger_parametrizacionescf',
      3 => 'vtiger_crmentity_user_field',
    ),
     'tab_name_index' => 
    array (
      'vtiger_crmentity' => 'crmid',
      'vtiger_parametrizaciones' => 'parametrizacionesid',
      'vtiger_parametrizacionescf' => 'parametrizacionesid',
      'vtiger_crmentity_user_field' => 'recordid',
    ),
     'list_fields' => 
    array (
      'parametrizacionesid' => 
      array (
        0 => 'parametrizaciones',
        1 => '<entitycolumn>',
      ),
      'Assigned To' => 
      array (
        0 => 'crmentity',
        1 => 'smownerid',
      ),
    ),
     'list_fields_name' => 
    array (
      'parametrizacionesid' => 'parametrizacionesid',
      'Assigned To' => 'assigned_user_id',
    ),
     'list_link_field' => 'parametrizacionesid',
     'search_fields' => 
    array (
      'parametrizacionesid' => 
      array (
        0 => 'parametrizaciones',
        1 => '<entitycolumn>',
      ),
      'Assigned To' => 
      array (
        0 => 'vtiger_crmentity',
        1 => 'assigned_user_id',
      ),
    ),
     'search_fields_name' => 
    array (
      'parametrizacionesid' => 'parametrizacionesid',
      'Assigned To' => 'assigned_user_id',
    ),
     'popup_fields' => 
    array (
      0 => 'parametrizacionesid',
    ),
     'def_basicsearch_col' => 'parametrizacionesid',
     'def_detailview_recname' => 'parametrizacionesid',
     'mandatory_fields' => 
    array (
      0 => 'parametrizacionesid',
      1 => 'assigned_user_id',
    ),
     'default_order_by' => 'parametrizacionesid',
     'default_sort_order' => 'ASC',
     'db' => 
    PearDatabase::__set_state(array(
       'database' => 
      ADODB_mysqli::__set_state(array(
         'databaseType' => 'mysqli',
         'dataProvider' => 'mysql',
         'hasInsertID' => true,
         'hasAffectedRows' => true,
         'metaTablesSQL' => 'SELECT
			TABLE_NAME,
			CASE WHEN TABLE_TYPE = \'VIEW\' THEN \'V\' ELSE \'T\' END
		FROM INFORMATION_SCHEMA.TABLES
		WHERE TABLE_SCHEMA=',
         'metaColumnsSQL' => 'SHOW COLUMNS FROM `%s`',
         'fmtTimeStamp' => '\'Y-m-d H:i:s\'',
         'hasLimit' => true,
         'hasMoveFirst' => true,
         'hasGenID' => true,
         'isoDates' => true,
         'sysDate' => 'CURDATE()',
         'sysTimeStamp' => 'NOW()',
         'hasTransactions' => true,
         'forceNewConnect' => false,
         'poorAffectedRows' => true,
         'clientFlags' => 0,
         'substr' => 'substring',
         'port' => '3306',
         'socket' => '',
         '_bindInputArray' => false,
         'nameQuote' => '`',
         'optionFlags' => 
        array (
          0 => 
          array (
            0 => 5,
            1 => 0,
          ),
          1 => 
          array (
            0 => 8,
            1 => true,
          ),
        ),
         'arrayClass' => 'ADORecordSet_array_mysqli',
         'multiQuery' => false,
         '_genIDSQL' => 'update %s set id=LAST_INSERT_ID(id+1);',
         '_genSeqSQL' => 'create table if not exists %s (id int not null)',
         '_genSeqCountSQL' => 'select count(*) from %s',
         '_genSeq2SQL' => 'insert into %s values (%s)',
         '_dropSeqSQL' => 'drop table if exists %s',
         'database' => 'bps2',
         'host' => 'localhost',
         'user' => 'root',
         'password' => '',
         'debug' => false,
         'maxblobsize' => 262144,
         'concat_operator' => '+',
         'length' => 'length',
         'random' => 'rand()',
         'upperCase' => 'upper',
         'fmtDate' => '\'Y-m-d\'',
         'true' => '1',
         'false' => '0',
         'replaceQuote' => '\\\'',
         'charSet' => false,
         'metaDatabasesSQL' => '',
         'uniqueOrderBy' => false,
         'emptyDate' => '&nbsp;',
         'emptyTimeStamp' => '&nbsp;',
         'lastInsID' => false,
         'hasTop' => false,
         'readOnly' => false,
         'genID' => 0,
         'raiseErrorFn' => false,
         'cacheSecs' => 3600,
         'memCache' => false,
         'memCacheHost' => NULL,
         'memCachePort' => 11211,
         'memCacheCompress' => false,
         'sysUTimeStamp' => false,
         'noNullStrings' => false,
         'numCacheHits' => 0,
         'numCacheMisses' => 0,
         'pageExecuteCountRows' => true,
         'uniqueSort' => false,
         'leftOuter' => false,
         'rightOuter' => false,
         'ansiOuter' => false,
         'autoRollback' => false,
         'fnExecute' => false,
         'fnCacheExecute' => false,
         'blobEncodeType' => false,
         'rsPrefix' => 'ADORecordSet_',
         'autoCommit' => true,
         'transOff' => 0,
         'transCnt' => 0,
         'fetchMode' => false,
         'null2null' => 'null',
         'bulkBind' => false,
         '_oldRaiseFn' => false,
         '_transOK' => NULL,
         '_connectionID' => 
        mysqli::__set_state(array(
           'affected_rows' => NULL,
           'client_info' => NULL,
           'client_version' => NULL,
           'connect_errno' => NULL,
           'connect_error' => NULL,
           'errno' => NULL,
           'error' => NULL,
           'error_list' => NULL,
           'field_count' => NULL,
           'host_info' => NULL,
           'info' => NULL,
           'insert_id' => NULL,
           'server_info' => NULL,
           'server_version' => NULL,
           'sqlstate' => NULL,
           'protocol_version' => NULL,
           'thread_id' => NULL,
           'warning_count' => NULL,
        )),
         '_errorMsg' => false,
         '_errorCode' => false,
         '_queryID' => 
        mysqli_result::__set_state(array(
           'current_field' => NULL,
           'field_count' => NULL,
           'lengths' => NULL,
           'num_rows' => NULL,
           'type' => NULL,
        )),
         '_isPersistentConnection' => true,
         '_evalAll' => false,
         '_affected' => false,
         '_logsql' => false,
         '_transmode' => '',
         'connectionParameters' => 
        array (
        ),
         'databaseName' => 'bps2',
      )),
       'dieOnError' => false,
       'dbType' => 'mysqli',
       'dbHostName' => 'localhost:3306',
       'dbName' => 'bps2',
       'dbOptions' => 
      array (
        'persistent' => true,
        'autofree' => false,
        'debug' => 0,
        'seqname_format' => '%s_seq',
        'portability' => 0,
        'ssl' => false,
      ),
       'userName' => 'root',
       'userPassword' => '',
       'query_time' => 0,
       'log' => 
      Logger::__set_state(array(
         'additive' => true,
         'fqcn' => 'Logger',
         'level' => NULL,
         'name' => 'PearDatabase_',
         'parent' => 
        LoggerRoot::__set_state(array(
           'additive' => true,
           'fqcn' => 'Logger',
           'level' => 
          LoggerLevel::__set_state(array(
             'level' => 10000,
             'levelStr' => 'DEBUG',
             'syslogEquivalent' => 6,
          )),
           'name' => 'root',
           'parent' => NULL,
           'appenders' => 
          array (
            'A1' => 
            LoggerAppenderRollingFile::__set_state(array(
               'maxFileSize' => 10485760,
               'maxBackupIndex' => 10,
               'compress' => false,
               'clearConditional' => true,
               'locking' => true,
               'append' => true,
               'file' => 'logs/vtigercrm.log',
               'fp' => NULL,
               'closed' => false,
               'filter' => NULL,
               'layout' => 
              LoggerLayoutPattern::__set_state(array(
                 'pattern' => '%date %-5level %logger %message%newline',
                 'converterMap' => 
                array (
                  'c' => 'LoggerPatternConverterLogger',
                  'lo' => 'LoggerPatternConverterLogger',
                  'logger' => 'LoggerPatternConverterLogger',
                  'C' => 'LoggerPatternConverterClass',
                  'class' => 'LoggerPatternConverterClass',
                  'cookie' => 'LoggerPatternConverterCookie',
                  'd' => 'LoggerPatternConverterDate',
                  'date' => 'LoggerPatternConverterDate',
                  'e' => 'LoggerPatternConverterEnvironment',
                  'env' => 'LoggerPatternConverterEnvironment',
                  'ex' => 'LoggerPatternConverterThrowable',
                  'exception' => 'LoggerPatternConverterThrowable',
                  'throwable' => 'LoggerPatternConverterThrowable',
                  'F' => 'LoggerPatternConverterFile',
                  'file' => 'LoggerPatternConverterFile',
                  'l' => 'LoggerPatternConverterLocation',
                  'location' => 'LoggerPatternConverterLocation',
                  'L' => 'LoggerPatternConverterLine',
                  'line' => 'LoggerPatternConverterLine',
                  'm' => 'LoggerPatternConverterMessage',
                  'msg' => 'LoggerPatternConverterMessage',
                  'message' => 'LoggerPatternConverterMessage',
                  'M' => 'LoggerPatternConverterMethod',
                  'method' => 'LoggerPatternConverterMethod',
                  'n' => 'LoggerPatternConverterNewLine',
                  'newline' => 'LoggerPatternConverterNewLine',
                  'p' => 'LoggerPatternConverterLevel',
                  'le' => 'LoggerPatternConverterLevel',
                  'level' => 'LoggerPatternConverterLevel',
                  'r' => 'LoggerPatternConverterRelative',
                  'relative' => 'LoggerPatternConverterRelative',
                  'req' => 'LoggerPatternConverterRequest',
                  'request' => 'LoggerPatternConverterRequest',
                  's' => 'LoggerPatternConverterServer',
                  'server' => 'LoggerPatternConverterServer',
                  'ses' => 'LoggerPatternConverterSession',
                  'session' => 'LoggerPatternConverterSession',
                  'sid' => 'LoggerPatternConverterSessionID',
                  'sessionid' => 'LoggerPatternConverterSessionID',
                  't' => 'LoggerPatternConverterProcess',
                  'pid' => 'LoggerPatternConverterProcess',
                  'process' => 'LoggerPatternConverterProcess',
                  'x' => 'LoggerPatternConverterNDC',
                  'ndc' => 'LoggerPatternConverterNDC',
                  'X' => 'LoggerPatternConverterMDC',
                  'mdc' => 'LoggerPatternConverterMDC',
                ),
                 'head' => 
                LoggerPatternConverterDate::__set_state(array(
                   'format' => 'c',
                   'specials' => 
                  array (
                    'ISO8601' => 'c',
                    'ABSOLUTE' => 'H:i:s',
                    'DATE' => 'd M Y H:i:s.u',
                  ),
                   'useLocalDate' => false,
                   'next' => 
                  LoggerPatternConverterLiteral::__set_state(array(
                     'literalValue' => ' ',
                     'next' => 
                    LoggerPatternConverterLevel::__set_state(array(
                       'next' => 
                      LoggerPatternConverterLiteral::__set_state(array(
                         'literalValue' => ' ',
                         'next' => 
                        LoggerPatternConverterLogger::__set_state(array(
                           'length' => NULL,
                           'cache' => 
                          array (
                            'VT' => 'VT',
                            'user' => 'user',
                          ),
                           'next' => 
                          LoggerPatternConverterLiteral::__set_state(array(
                             'literalValue' => ' ',
                             'next' => 
                            LoggerPatternConverterMessage::__set_state(array(
                               'next' => 
                              LoggerPatternConverterNewLine::__set_state(array(
                                 'next' => NULL,
                                 'formattingInfo' => 
                                LoggerFormattingInfo::__set_state(array(
                                   'min' => 0,
                                   'max' => 9223372036854775807,
                                   'padLeft' => true,
                                   'trimLeft' => false,
                                )),
                                 'option' => '',
                              )),
                               'formattingInfo' => 
                              LoggerFormattingInfo::__set_state(array(
                                 'min' => 0,
                                 'max' => 9223372036854775807,
                                 'padLeft' => true,
                                 'trimLeft' => false,
                              )),
                               'option' => '',
                            )),
                             'formattingInfo' => NULL,
                             'option' => NULL,
                          )),
                           'formattingInfo' => 
                          LoggerFormattingInfo::__set_state(array(
                             'min' => 0,
                             'max' => 9223372036854775807,
                             'padLeft' => true,
                             'trimLeft' => false,
                          )),
                           'option' => '',
                        )),
                         'formattingInfo' => NULL,
                         'option' => NULL,
                      )),
                       'formattingInfo' => 
                      LoggerFormattingInfo::__set_state(array(
                         'min' => 5,
                         'max' => 9223372036854775807,
                         'padLeft' => false,
                         'trimLeft' => false,
                      )),
                       'option' => '',
                    )),
                     'formattingInfo' => NULL,
                     'option' => NULL,
                  )),
                   'formattingInfo' => 
                  LoggerFormattingInfo::__set_state(array(
                     'min' => 0,
                     'max' => 9223372036854775807,
                     'padLeft' => true,
                     'trimLeft' => false,
                  )),
                   'option' => '',
                )),
              )),
               'name' => 'A1',
               'threshold' => NULL,
               'requiresLayout' => true,
            )),
          ),
        )),
         'appenders' => 
        array (
        ),
      )),
       'lastmysqlrow' => -1,
       'enableSQLlog' => false,
       'continueInstallOnError' => true,
       'avoidPreparedSql' => false,
       'isdb_default_utf8_charset' => true,
       'req_flist' => NULL,
       'logSqlTimingID' => false,
    )),
     'log' => 
    Logger::__set_state(array(
       'additive' => true,
       'fqcn' => 'Logger',
       'level' => NULL,
       'name' => 'VT',
       'parent' => 
      LoggerRoot::__set_state(array(
         'additive' => true,
         'fqcn' => 'Logger',
         'level' => 
        LoggerLevel::__set_state(array(
           'level' => 10000,
           'levelStr' => 'DEBUG',
           'syslogEquivalent' => 6,
        )),
         'name' => 'root',
         'parent' => NULL,
         'appenders' => 
        array (
          'A1' => 
          LoggerAppenderRollingFile::__set_state(array(
             'maxFileSize' => 10485760,
             'maxBackupIndex' => 10,
             'compress' => false,
             'clearConditional' => true,
             'locking' => true,
             'append' => true,
             'file' => 'logs/vtigercrm.log',
             'fp' => NULL,
             'closed' => false,
             'filter' => NULL,
             'layout' => 
            LoggerLayoutPattern::__set_state(array(
               'pattern' => '%date %-5level %logger %message%newline',
               'converterMap' => 
              array (
                'c' => 'LoggerPatternConverterLogger',
                'lo' => 'LoggerPatternConverterLogger',
                'logger' => 'LoggerPatternConverterLogger',
                'C' => 'LoggerPatternConverterClass',
                'class' => 'LoggerPatternConverterClass',
                'cookie' => 'LoggerPatternConverterCookie',
                'd' => 'LoggerPatternConverterDate',
                'date' => 'LoggerPatternConverterDate',
                'e' => 'LoggerPatternConverterEnvironment',
                'env' => 'LoggerPatternConverterEnvironment',
                'ex' => 'LoggerPatternConverterThrowable',
                'exception' => 'LoggerPatternConverterThrowable',
                'throwable' => 'LoggerPatternConverterThrowable',
                'F' => 'LoggerPatternConverterFile',
                'file' => 'LoggerPatternConverterFile',
                'l' => 'LoggerPatternConverterLocation',
                'location' => 'LoggerPatternConverterLocation',
                'L' => 'LoggerPatternConverterLine',
                'line' => 'LoggerPatternConverterLine',
                'm' => 'LoggerPatternConverterMessage',
                'msg' => 'LoggerPatternConverterMessage',
                'message' => 'LoggerPatternConverterMessage',
                'M' => 'LoggerPatternConverterMethod',
                'method' => 'LoggerPatternConverterMethod',
                'n' => 'LoggerPatternConverterNewLine',
                'newline' => 'LoggerPatternConverterNewLine',
                'p' => 'LoggerPatternConverterLevel',
                'le' => 'LoggerPatternConverterLevel',
                'level' => 'LoggerPatternConverterLevel',
                'r' => 'LoggerPatternConverterRelative',
                'relative' => 'LoggerPatternConverterRelative',
                'req' => 'LoggerPatternConverterRequest',
                'request' => 'LoggerPatternConverterRequest',
                's' => 'LoggerPatternConverterServer',
                'server' => 'LoggerPatternConverterServer',
                'ses' => 'LoggerPatternConverterSession',
                'session' => 'LoggerPatternConverterSession',
                'sid' => 'LoggerPatternConverterSessionID',
                'sessionid' => 'LoggerPatternConverterSessionID',
                't' => 'LoggerPatternConverterProcess',
                'pid' => 'LoggerPatternConverterProcess',
                'process' => 'LoggerPatternConverterProcess',
                'x' => 'LoggerPatternConverterNDC',
                'ndc' => 'LoggerPatternConverterNDC',
                'X' => 'LoggerPatternConverterMDC',
                'mdc' => 'LoggerPatternConverterMDC',
              ),
               'head' => 
              LoggerPatternConverterDate::__set_state(array(
                 'format' => 'c',
                 'specials' => 
                array (
                  'ISO8601' => 'c',
                  'ABSOLUTE' => 'H:i:s',
                  'DATE' => 'd M Y H:i:s.u',
                ),
                 'useLocalDate' => false,
                 'next' => 
                LoggerPatternConverterLiteral::__set_state(array(
                   'literalValue' => ' ',
                   'next' => 
                  LoggerPatternConverterLevel::__set_state(array(
                     'next' => 
                    LoggerPatternConverterLiteral::__set_state(array(
                       'literalValue' => ' ',
                       'next' => 
                      LoggerPatternConverterLogger::__set_state(array(
                         'length' => NULL,
                         'cache' => 
                        array (
                          'VT' => 'VT',
                          'user' => 'user',
                        ),
                         'next' => 
                        LoggerPatternConverterLiteral::__set_state(array(
                           'literalValue' => ' ',
                           'next' => 
                          LoggerPatternConverterMessage::__set_state(array(
                             'next' => 
                            LoggerPatternConverterNewLine::__set_state(array(
                               'next' => NULL,
                               'formattingInfo' => 
                              LoggerFormattingInfo::__set_state(array(
                                 'min' => 0,
                                 'max' => 9223372036854775807,
                                 'padLeft' => true,
                                 'trimLeft' => false,
                              )),
                               'option' => '',
                            )),
                             'formattingInfo' => 
                            LoggerFormattingInfo::__set_state(array(
                               'min' => 0,
                               'max' => 9223372036854775807,
                               'padLeft' => true,
                               'trimLeft' => false,
                            )),
                             'option' => '',
                          )),
                           'formattingInfo' => NULL,
                           'option' => NULL,
                        )),
                         'formattingInfo' => 
                        LoggerFormattingInfo::__set_state(array(
                           'min' => 0,
                           'max' => 9223372036854775807,
                           'padLeft' => true,
                           'trimLeft' => false,
                        )),
                         'option' => '',
                      )),
                       'formattingInfo' => NULL,
                       'option' => NULL,
                    )),
                     'formattingInfo' => 
                    LoggerFormattingInfo::__set_state(array(
                       'min' => 5,
                       'max' => 9223372036854775807,
                       'padLeft' => false,
                       'trimLeft' => false,
                    )),
                     'option' => '',
                  )),
                   'formattingInfo' => NULL,
                   'option' => NULL,
                )),
                 'formattingInfo' => 
                LoggerFormattingInfo::__set_state(array(
                   'min' => 0,
                   'max' => 9223372036854775807,
                   'padLeft' => true,
                   'trimLeft' => false,
                )),
                 'option' => '',
              )),
            )),
             'name' => 'A1',
             'threshold' => NULL,
             'requiresLayout' => true,
          )),
        ),
      )),
       'appenders' => 
      array (
      ),
    )),
     'column_fields' => 
    TrackableObject::__set_state(array(
       'storage' => 
      array (
        'pt_origen' => 'Leonardo rivero',
        'pt_tema' => 'Trabajadores',
        'pt_grupo' => '3',
        'pt_temavtiger' => '768',
        'CreatedTime' => '2022-12-06 11:39:32',
        'ModifiedTime' => '2022-12-08 15:20:51',
        'pt_motivo' => 'Vtiger EMPRESA (corto)',
        'tags' => '',
        'record_id' => '1406',
        'record_module' => 'Parametrizaciones',
        'id' => '1406',
      ),
       'trackingEnabled' => true,
       'tracking' => true,
       'changed' => 
      array (
        0 => 'id',
      ),
    )),
     'IsCustomModule' => true,
     'sortby_fields' => 
    array (
    ),
     'required_fields' => 
    array (
      'assigned_user_id' => 1,
    ),
     'special_functions' => 
    array (
      0 => 'set_import_assigned_user',
    ),
     'ownedby' => NULL,
     'recordSource' => 'CRM',
     '__inactive_fields_filtered' => false,
     'moduleName' => 'Parametrizaciones',
     'id' => '1406',
  )),
))
params => array (
  'tema' => false,
  'motivo' => 'Vtiger EMPRESA (corto)',
  'origen' => 'Leonardo Rivero',
)
rs => array (
  0 => '1406',
  'crmid' => '1406',
)
models => Parametrizaciones_Record_Model::__set_state(array(
   'module' => 
  Vtiger_Module_Model::__set_state(array(
     'blocks' => false,
     'nameFields' => false,
     'moduleMeta' => false,
     'fields' => false,
     'relations' => NULL,
     'id' => '63',
     'name' => 'Parametrizaciones',
     'label' => 'Parametrizaciones',
     'version' => '0',
     'minversion' => false,
     'maxversion' => false,
     'presence' => '0',
     'ownedby' => '0',
     'tabsequence' => '-1',
     'parent' => 'TOOLS',
     'customized' => '1',
     'trial' => '0',
     'isentitytype' => '1',
     'entityidcolumn' => false,
     'entityidfield' => false,
     'basetable' => false,
     'basetableid' => false,
     'customtable' => false,
     'grouptable' => false,
     'fieldtable' => false,
     'allowDuplicates' => '1',
     'isSyncable' => '0',
     'syncActionForDuplicate' => '1',
     'source' => 'custom',
  )),
   'valueMap' => 
  TrackableObject::__set_state(array(
     'storage' => 
    array (
      'pt_origen' => 'Leonardo rivero',
      'pt_tema' => 'Trabajadores',
      'pt_grupo' => '64',
      'pt_temavtiger' => '768',
      'CreatedTime' => '2022-12-06 11:39:32',
      'ModifiedTime' => '2022-12-08 15:42:19',
      'pt_motivo' => 'Vtiger EMPRESA (corto)',
      'tags' => '',
      'record_id' => '1406',
      'record_module' => 'Parametrizaciones',
      'id' => '1406',
    ),
     'trackingEnabled' => true,
     'tracking' => true,
     'changed' => 
    array (
      0 => 'id',
    ),
  )),
   'entity' => 
  Parametrizaciones::__set_state(array(
     'table_name' => 'vtiger_parametrizaciones',
     'table_index' => 'parametrizacionesid',
     'customFieldTable' => 
    array (
      0 => 'vtiger_parametrizacionescf',
      1 => 'parametrizacionesid',
    ),
     'tab_name' => 
    array (
      0 => 'vtiger_crmentity',
      1 => 'vtiger_parametrizaciones',
      2 => 'vtiger_parametrizacionescf',
      3 => 'vtiger_crmentity_user_field',
    ),
     'tab_name_index' => 
    array (
      'vtiger_crmentity' => 'crmid',
      'vtiger_parametrizaciones' => 'parametrizacionesid',
      'vtiger_parametrizacionescf' => 'parametrizacionesid',
      'vtiger_crmentity_user_field' => 'recordid',
    ),
     'list_fields' => 
    array (
      'parametrizacionesid' => 
      array (
        0 => 'parametrizaciones',
        1 => '<entitycolumn>',
      ),
      'Assigned To' => 
      array (
        0 => 'crmentity',
        1 => 'smownerid',
      ),
    ),
     'list_fields_name' => 
    array (
      'parametrizacionesid' => 'parametrizacionesid',
      'Assigned To' => 'assigned_user_id',
    ),
     'list_link_field' => 'parametrizacionesid',
     'search_fields' => 
    array (
      'parametrizacionesid' => 
      array (
        0 => 'parametrizaciones',
        1 => '<entitycolumn>',
      ),
      'Assigned To' => 
      array (
        0 => 'vtiger_crmentity',
        1 => 'assigned_user_id',
      ),
    ),
     'search_fields_name' => 
    array (
      'parametrizacionesid' => 'parametrizacionesid',
      'Assigned To' => 'assigned_user_id',
    ),
     'popup_fields' => 
    array (
      0 => 'parametrizacionesid',
    ),
     'def_basicsearch_col' => 'parametrizacionesid',
     'def_detailview_recname' => 'parametrizacionesid',
     'mandatory_fields' => 
    array (
      0 => 'parametrizacionesid',
      1 => 'assigned_user_id',
    ),
     'default_order_by' => 'parametrizacionesid',
     'default_sort_order' => 'ASC',
     'db' => 
    PearDatabase::__set_state(array(
       'database' => 
      ADODB_mysqli::__set_state(array(
         'databaseType' => 'mysqli',
         'dataProvider' => 'mysql',
         'hasInsertID' => true,
         'hasAffectedRows' => true,
         'metaTablesSQL' => 'SELECT
			TABLE_NAME,
			CASE WHEN TABLE_TYPE = \'VIEW\' THEN \'V\' ELSE \'T\' END
		FROM INFORMATION_SCHEMA.TABLES
		WHERE TABLE_SCHEMA=',
         'metaColumnsSQL' => 'SHOW COLUMNS FROM `%s`',
         'fmtTimeStamp' => '\'Y-m-d H:i:s\'',
         'hasLimit' => true,
         'hasMoveFirst' => true,
         'hasGenID' => true,
         'isoDates' => true,
         'sysDate' => 'CURDATE()',
         'sysTimeStamp' => 'NOW()',
         'hasTransactions' => true,
         'forceNewConnect' => false,
         'poorAffectedRows' => true,
         'clientFlags' => 0,
         'substr' => 'substring',
         'port' => '3306',
         'socket' => '',
         '_bindInputArray' => false,
         'nameQuote' => '`',
         'optionFlags' => 
        array (
          0 => 
          array (
            0 => 5,
            1 => 0,
          ),
          1 => 
          array (
            0 => 8,
            1 => true,
          ),
        ),
         'arrayClass' => 'ADORecordSet_array_mysqli',
         'multiQuery' => false,
         '_genIDSQL' => 'update %s set id=LAST_INSERT_ID(id+1);',
         '_genSeqSQL' => 'create table if not exists %s (id int not null)',
         '_genSeqCountSQL' => 'select count(*) from %s',
         '_genSeq2SQL' => 'insert into %s values (%s)',
         '_dropSeqSQL' => 'drop table if exists %s',
         'database' => 'bps2',
         'host' => 'localhost',
         'user' => 'root',
         'password' => '',
         'debug' => false,
         'maxblobsize' => 262144,
         'concat_operator' => '+',
         'length' => 'length',
         'random' => 'rand()',
         'upperCase' => 'upper',
         'fmtDate' => '\'Y-m-d\'',
         'true' => '1',
         'false' => '0',
         'replaceQuote' => '\\\'',
         'charSet' => false,
         'metaDatabasesSQL' => '',
         'uniqueOrderBy' => false,
         'emptyDate' => '&nbsp;',
         'emptyTimeStamp' => '&nbsp;',
         'lastInsID' => false,
         'hasTop' => false,
         'readOnly' => false,
         'genID' => 0,
         'raiseErrorFn' => false,
         'cacheSecs' => 3600,
         'memCache' => false,
         'memCacheHost' => NULL,
         'memCachePort' => 11211,
         'memCacheCompress' => false,
         'sysUTimeStamp' => false,
         'noNullStrings' => false,
         'numCacheHits' => 0,
         'numCacheMisses' => 0,
         'pageExecuteCountRows' => true,
         'uniqueSort' => false,
         'leftOuter' => false,
         'rightOuter' => false,
         'ansiOuter' => false,
         'autoRollback' => false,
         'fnExecute' => false,
         'fnCacheExecute' => false,
         'blobEncodeType' => false,
         'rsPrefix' => 'ADORecordSet_',
         'autoCommit' => true,
         'transOff' => 0,
         'transCnt' => 0,
         'fetchMode' => false,
         'null2null' => 'null',
         'bulkBind' => false,
         '_oldRaiseFn' => false,
         '_transOK' => NULL,
         '_connectionID' => 
        mysqli::__set_state(array(
           'affected_rows' => NULL,
           'client_info' => NULL,
           'client_version' => NULL,
           'connect_errno' => NULL,
           'connect_error' => NULL,
           'errno' => NULL,
           'error' => NULL,
           'error_list' => NULL,
           'field_count' => NULL,
           'host_info' => NULL,
           'info' => NULL,
           'insert_id' => NULL,
           'server_info' => NULL,
           'server_version' => NULL,
           'sqlstate' => NULL,
           'protocol_version' => NULL,
           'thread_id' => NULL,
           'warning_count' => NULL,
        )),
         '_errorMsg' => false,
         '_errorCode' => false,
         '_queryID' => 
        mysqli_result::__set_state(array(
           'current_field' => NULL,
           'field_count' => NULL,
           'lengths' => NULL,
           'num_rows' => NULL,
           'type' => NULL,
        )),
         '_isPersistentConnection' => true,
         '_evalAll' => false,
         '_affected' => false,
         '_logsql' => false,
         '_transmode' => '',
         'connectionParameters' => 
        array (
        ),
         'databaseName' => 'bps2',
      )),
       'dieOnError' => false,
       'dbType' => 'mysqli',
       'dbHostName' => 'localhost:3306',
       'dbName' => 'bps2',
       'dbOptions' => 
      array (
        'persistent' => true,
        'autofree' => false,
        'debug' => 0,
        'seqname_format' => '%s_seq',
        'portability' => 0,
        'ssl' => false,
      ),
       'userName' => 'root',
       'userPassword' => '',
       'query_time' => 0,
       'log' => 
      Logger::__set_state(array(
         'additive' => true,
         'fqcn' => 'Logger',
         'level' => NULL,
         'name' => 'PearDatabase_',
         'parent' => 
        LoggerRoot::__set_state(array(
           'additive' => true,
           'fqcn' => 'Logger',
           'level' => 
          LoggerLevel::__set_state(array(
             'level' => 10000,
             'levelStr' => 'DEBUG',
             'syslogEquivalent' => 6,
          )),
           'name' => 'root',
           'parent' => NULL,
           'appenders' => 
          array (
            'A1' => 
            LoggerAppenderRollingFile::__set_state(array(
               'maxFileSize' => 10485760,
               'maxBackupIndex' => 10,
               'compress' => false,
               'clearConditional' => true,
               'locking' => true,
               'append' => true,
               'file' => 'logs/vtigercrm.log',
               'fp' => NULL,
               'closed' => false,
               'filter' => NULL,
               'layout' => 
              LoggerLayoutPattern::__set_state(array(
                 'pattern' => '%date %-5level %logger %message%newline',
                 'converterMap' => 
                array (
                  'c' => 'LoggerPatternConverterLogger',
                  'lo' => 'LoggerPatternConverterLogger',
                  'logger' => 'LoggerPatternConverterLogger',
                  'C' => 'LoggerPatternConverterClass',
                  'class' => 'LoggerPatternConverterClass',
                  'cookie' => 'LoggerPatternConverterCookie',
                  'd' => 'LoggerPatternConverterDate',
                  'date' => 'LoggerPatternConverterDate',
                  'e' => 'LoggerPatternConverterEnvironment',
                  'env' => 'LoggerPatternConverterEnvironment',
                  'ex' => 'LoggerPatternConverterThrowable',
                  'exception' => 'LoggerPatternConverterThrowable',
                  'throwable' => 'LoggerPatternConverterThrowable',
                  'F' => 'LoggerPatternConverterFile',
                  'file' => 'LoggerPatternConverterFile',
                  'l' => 'LoggerPatternConverterLocation',
                  'location' => 'LoggerPatternConverterLocation',
                  'L' => 'LoggerPatternConverterLine',
                  'line' => 'LoggerPatternConverterLine',
                  'm' => 'LoggerPatternConverterMessage',
                  'msg' => 'LoggerPatternConverterMessage',
                  'message' => 'LoggerPatternConverterMessage',
                  'M' => 'LoggerPatternConverterMethod',
                  'method' => 'LoggerPatternConverterMethod',
                  'n' => 'LoggerPatternConverterNewLine',
                  'newline' => 'LoggerPatternConverterNewLine',
                  'p' => 'LoggerPatternConverterLevel',
                  'le' => 'LoggerPatternConverterLevel',
                  'level' => 'LoggerPatternConverterLevel',
                  'r' => 'LoggerPatternConverterRelative',
                  'relative' => 'LoggerPatternConverterRelative',
                  'req' => 'LoggerPatternConverterRequest',
                  'request' => 'LoggerPatternConverterRequest',
                  's' => 'LoggerPatternConverterServer',
                  'server' => 'LoggerPatternConverterServer',
                  'ses' => 'LoggerPatternConverterSession',
                  'session' => 'LoggerPatternConverterSession',
                  'sid' => 'LoggerPatternConverterSessionID',
                  'sessionid' => 'LoggerPatternConverterSessionID',
                  't' => 'LoggerPatternConverterProcess',
                  'pid' => 'LoggerPatternConverterProcess',
                  'process' => 'LoggerPatternConverterProcess',
                  'x' => 'LoggerPatternConverterNDC',
                  'ndc' => 'LoggerPatternConverterNDC',
                  'X' => 'LoggerPatternConverterMDC',
                  'mdc' => 'LoggerPatternConverterMDC',
                ),
                 'head' => 
                LoggerPatternConverterDate::__set_state(array(
                   'format' => 'c',
                   'specials' => 
                  array (
                    'ISO8601' => 'c',
                    'ABSOLUTE' => 'H:i:s',
                    'DATE' => 'd M Y H:i:s.u',
                  ),
                   'useLocalDate' => false,
                   'next' => 
                  LoggerPatternConverterLiteral::__set_state(array(
                     'literalValue' => ' ',
                     'next' => 
                    LoggerPatternConverterLevel::__set_state(array(
                       'next' => 
                      LoggerPatternConverterLiteral::__set_state(array(
                         'literalValue' => ' ',
                         'next' => 
                        LoggerPatternConverterLogger::__set_state(array(
                           'length' => NULL,
                           'cache' => 
                          array (
                            'VT' => 'VT',
                            'user' => 'user',
                          ),
                           'next' => 
                          LoggerPatternConverterLiteral::__set_state(array(
                             'literalValue' => ' ',
                             'next' => 
                            LoggerPatternConverterMessage::__set_state(array(
                               'next' => 
                              LoggerPatternConverterNewLine::__set_state(array(
                                 'next' => NULL,
                                 'formattingInfo' => 
                                LoggerFormattingInfo::__set_state(array(
                                   'min' => 0,
                                   'max' => 9223372036854775807,
                                   'padLeft' => true,
                                   'trimLeft' => false,
                                )),
                                 'option' => '',
                              )),
                               'formattingInfo' => 
                              LoggerFormattingInfo::__set_state(array(
                                 'min' => 0,
                                 'max' => 9223372036854775807,
                                 'padLeft' => true,
                                 'trimLeft' => false,
                              )),
                               'option' => '',
                            )),
                             'formattingInfo' => NULL,
                             'option' => NULL,
                          )),
                           'formattingInfo' => 
                          LoggerFormattingInfo::__set_state(array(
                             'min' => 0,
                             'max' => 9223372036854775807,
                             'padLeft' => true,
                             'trimLeft' => false,
                          )),
                           'option' => '',
                        )),
                         'formattingInfo' => NULL,
                         'option' => NULL,
                      )),
                       'formattingInfo' => 
                      LoggerFormattingInfo::__set_state(array(
                         'min' => 5,
                         'max' => 9223372036854775807,
                         'padLeft' => false,
                         'trimLeft' => false,
                      )),
                       'option' => '',
                    )),
                     'formattingInfo' => NULL,
                     'option' => NULL,
                  )),
                   'formattingInfo' => 
                  LoggerFormattingInfo::__set_state(array(
                     'min' => 0,
                     'max' => 9223372036854775807,
                     'padLeft' => true,
                     'trimLeft' => false,
                  )),
                   'option' => '',
                )),
              )),
               'name' => 'A1',
               'threshold' => NULL,
               'requiresLayout' => true,
            )),
          ),
        )),
         'appenders' => 
        array (
        ),
      )),
       'lastmysqlrow' => -1,
       'enableSQLlog' => false,
       'continueInstallOnError' => true,
       'avoidPreparedSql' => false,
       'isdb_default_utf8_charset' => true,
       'req_flist' => NULL,
       'logSqlTimingID' => false,
    )),
     'log' => 
    Logger::__set_state(array(
       'additive' => true,
       'fqcn' => 'Logger',
       'level' => NULL,
       'name' => 'VT',
       'parent' => 
      LoggerRoot::__set_state(array(
         'additive' => true,
         'fqcn' => 'Logger',
         'level' => 
        LoggerLevel::__set_state(array(
           'level' => 10000,
           'levelStr' => 'DEBUG',
           'syslogEquivalent' => 6,
        )),
         'name' => 'root',
         'parent' => NULL,
         'appenders' => 
        array (
          'A1' => 
          LoggerAppenderRollingFile::__set_state(array(
             'maxFileSize' => 10485760,
             'maxBackupIndex' => 10,
             'compress' => false,
             'clearConditional' => true,
             'locking' => true,
             'append' => true,
             'file' => 'logs/vtigercrm.log',
             'fp' => NULL,
             'closed' => false,
             'filter' => NULL,
             'layout' => 
            LoggerLayoutPattern::__set_state(array(
               'pattern' => '%date %-5level %logger %message%newline',
               'converterMap' => 
              array (
                'c' => 'LoggerPatternConverterLogger',
                'lo' => 'LoggerPatternConverterLogger',
                'logger' => 'LoggerPatternConverterLogger',
                'C' => 'LoggerPatternConverterClass',
                'class' => 'LoggerPatternConverterClass',
                'cookie' => 'LoggerPatternConverterCookie',
                'd' => 'LoggerPatternConverterDate',
                'date' => 'LoggerPatternConverterDate',
                'e' => 'LoggerPatternConverterEnvironment',
                'env' => 'LoggerPatternConverterEnvironment',
                'ex' => 'LoggerPatternConverterThrowable',
                'exception' => 'LoggerPatternConverterThrowable',
                'throwable' => 'LoggerPatternConverterThrowable',
                'F' => 'LoggerPatternConverterFile',
                'file' => 'LoggerPatternConverterFile',
                'l' => 'LoggerPatternConverterLocation',
                'location' => 'LoggerPatternConverterLocation',
                'L' => 'LoggerPatternConverterLine',
                'line' => 'LoggerPatternConverterLine',
                'm' => 'LoggerPatternConverterMessage',
                'msg' => 'LoggerPatternConverterMessage',
                'message' => 'LoggerPatternConverterMessage',
                'M' => 'LoggerPatternConverterMethod',
                'method' => 'LoggerPatternConverterMethod',
                'n' => 'LoggerPatternConverterNewLine',
                'newline' => 'LoggerPatternConverterNewLine',
                'p' => 'LoggerPatternConverterLevel',
                'le' => 'LoggerPatternConverterLevel',
                'level' => 'LoggerPatternConverterLevel',
                'r' => 'LoggerPatternConverterRelative',
                'relative' => 'LoggerPatternConverterRelative',
                'req' => 'LoggerPatternConverterRequest',
                'request' => 'LoggerPatternConverterRequest',
                's' => 'LoggerPatternConverterServer',
                'server' => 'LoggerPatternConverterServer',
                'ses' => 'LoggerPatternConverterSession',
                'session' => 'LoggerPatternConverterSession',
                'sid' => 'LoggerPatternConverterSessionID',
                'sessionid' => 'LoggerPatternConverterSessionID',
                't' => 'LoggerPatternConverterProcess',
                'pid' => 'LoggerPatternConverterProcess',
                'process' => 'LoggerPatternConverterProcess',
                'x' => 'LoggerPatternConverterNDC',
                'ndc' => 'LoggerPatternConverterNDC',
                'X' => 'LoggerPatternConverterMDC',
                'mdc' => 'LoggerPatternConverterMDC',
              ),
               'head' => 
              LoggerPatternConverterDate::__set_state(array(
                 'format' => 'c',
                 'specials' => 
                array (
                  'ISO8601' => 'c',
                  'ABSOLUTE' => 'H:i:s',
                  'DATE' => 'd M Y H:i:s.u',
                ),
                 'useLocalDate' => false,
                 'next' => 
                LoggerPatternConverterLiteral::__set_state(array(
                   'literalValue' => ' ',
                   'next' => 
                  LoggerPatternConverterLevel::__set_state(array(
                     'next' => 
                    LoggerPatternConverterLiteral::__set_state(array(
                       'literalValue' => ' ',
                       'next' => 
                      LoggerPatternConverterLogger::__set_state(array(
                         'length' => NULL,
                         'cache' => 
                        array (
                          'VT' => 'VT',
                          'user' => 'user',
                        ),
                         'next' => 
                        LoggerPatternConverterLiteral::__set_state(array(
                           'literalValue' => ' ',
                           'next' => 
                          LoggerPatternConverterMessage::__set_state(array(
                             'next' => 
                            LoggerPatternConverterNewLine::__set_state(array(
                               'next' => NULL,
                               'formattingInfo' => 
                              LoggerFormattingInfo::__set_state(array(
                                 'min' => 0,
                                 'max' => 9223372036854775807,
                                 'padLeft' => true,
                                 'trimLeft' => false,
                              )),
                               'option' => '',
                            )),
                             'formattingInfo' => 
                            LoggerFormattingInfo::__set_state(array(
                               'min' => 0,
                               'max' => 9223372036854775807,
                               'padLeft' => true,
                               'trimLeft' => false,
                            )),
                             'option' => '',
                          )),
                           'formattingInfo' => NULL,
                           'option' => NULL,
                        )),
                         'formattingInfo' => 
                        LoggerFormattingInfo::__set_state(array(
                           'min' => 0,
                           'max' => 9223372036854775807,
                           'padLeft' => true,
                           'trimLeft' => false,
                        )),
                         'option' => '',
                      )),
                       'formattingInfo' => NULL,
                       'option' => NULL,
                    )),
                     'formattingInfo' => 
                    LoggerFormattingInfo::__set_state(array(
                       'min' => 5,
                       'max' => 9223372036854775807,
                       'padLeft' => false,
                       'trimLeft' => false,
                    )),
                     'option' => '',
                  )),
                   'formattingInfo' => NULL,
                   'option' => NULL,
                )),
                 'formattingInfo' => 
                LoggerFormattingInfo::__set_state(array(
                   'min' => 0,
                   'max' => 9223372036854775807,
                   'padLeft' => true,
                   'trimLeft' => false,
                )),
                 'option' => '',
              )),
            )),
             'name' => 'A1',
             'threshold' => NULL,
             'requiresLayout' => true,
          )),
        ),
      )),
       'appenders' => 
      array (
      ),
    )),
     'column_fields' => 
    TrackableObject::__set_state(array(
       'storage' => 
      array (
        'pt_origen' => 'Leonardo rivero',
        'pt_tema' => 'Trabajadores',
        'pt_grupo' => '64',
        'pt_temavtiger' => '768',
        'CreatedTime' => '2022-12-06 11:39:32',
        'ModifiedTime' => '2022-12-08 15:42:19',
        'pt_motivo' => 'Vtiger EMPRESA (corto)',
        'tags' => '',
        'record_id' => '1406',
        'record_module' => 'Parametrizaciones',
        'id' => '1406',
      ),
       'trackingEnabled' => true,
       'tracking' => true,
       'changed' => 
      array (
        0 => 'id',
      ),
    )),
     'IsCustomModule' => true,
     'sortby_fields' => 
    array (
    ),
     'required_fields' => 
    array (
      'assigned_user_id' => 1,
    ),
     'special_functions' => 
    array (
      0 => 'set_import_assigned_user',
    ),
     'ownedby' => NULL,
     'recordSource' => 'CRM',
     '__inactive_fields_filtered' => false,
     'moduleName' => 'Parametrizaciones',
     'id' => '1406',
  )),
))
params => array (
  'tema' => false,
  'motivo' => 'Vtiger EMPRESA (corto)',
  'origen' => 'Leonardo Rivero',
)
rs => array (
  0 => '1406',
  'crmid' => '1406',
)
models => Parametrizaciones_Record_Model::__set_state(array(
   'module' => 
  Vtiger_Module_Model::__set_state(array(
     'blocks' => false,
     'nameFields' => false,
     'moduleMeta' => false,
     'fields' => false,
     'relations' => NULL,
     'id' => '63',
     'name' => 'Parametrizaciones',
     'label' => 'Parametrizaciones',
     'version' => '0',
     'minversion' => false,
     'maxversion' => false,
     'presence' => '0',
     'ownedby' => '0',
     'tabsequence' => '-1',
     'parent' => 'TOOLS',
     'customized' => '1',
     'trial' => '0',
     'isentitytype' => '1',
     'entityidcolumn' => false,
     'entityidfield' => false,
     'basetable' => false,
     'basetableid' => false,
     'customtable' => false,
     'grouptable' => false,
     'fieldtable' => false,
     'allowDuplicates' => '1',
     'isSyncable' => '0',
     'syncActionForDuplicate' => '1',
     'source' => 'custom',
  )),
   'valueMap' => 
  TrackableObject::__set_state(array(
     'storage' => 
    array (
      'pt_origen' => 'Leonardo rivero',
      'pt_tema' => 'Trabajadores',
      'pt_grupo' => '64',
      'pt_temavtiger' => '768',
      'CreatedTime' => '2022-12-06 11:39:32',
      'ModifiedTime' => '2022-12-08 15:42:19',
      'pt_motivo' => 'Vtiger EMPRESA (corto)',
      'tags' => '',
      'record_id' => '1406',
      'record_module' => 'Parametrizaciones',
      'id' => '1406',
    ),
     'trackingEnabled' => true,
     'tracking' => true,
     'changed' => 
    array (
      0 => 'id',
    ),
  )),
   'entity' => 
  Parametrizaciones::__set_state(array(
     'table_name' => 'vtiger_parametrizaciones',
     'table_index' => 'parametrizacionesid',
     'customFieldTable' => 
    array (
      0 => 'vtiger_parametrizacionescf',
      1 => 'parametrizacionesid',
    ),
     'tab_name' => 
    array (
      0 => 'vtiger_crmentity',
      1 => 'vtiger_parametrizaciones',
      2 => 'vtiger_parametrizacionescf',
      3 => 'vtiger_crmentity_user_field',
    ),
     'tab_name_index' => 
    array (
      'vtiger_crmentity' => 'crmid',
      'vtiger_parametrizaciones' => 'parametrizacionesid',
      'vtiger_parametrizacionescf' => 'parametrizacionesid',
      'vtiger_crmentity_user_field' => 'recordid',
    ),
     'list_fields' => 
    array (
      'parametrizacionesid' => 
      array (
        0 => 'parametrizaciones',
        1 => '<entitycolumn>',
      ),
      'Assigned To' => 
      array (
        0 => 'crmentity',
        1 => 'smownerid',
      ),
    ),
     'list_fields_name' => 
    array (
      'parametrizacionesid' => 'parametrizacionesid',
      'Assigned To' => 'assigned_user_id',
    ),
     'list_link_field' => 'parametrizacionesid',
     'search_fields' => 
    array (
      'parametrizacionesid' => 
      array (
        0 => 'parametrizaciones',
        1 => '<entitycolumn>',
      ),
      'Assigned To' => 
      array (
        0 => 'vtiger_crmentity',
        1 => 'assigned_user_id',
      ),
    ),
     'search_fields_name' => 
    array (
      'parametrizacionesid' => 'parametrizacionesid',
      'Assigned To' => 'assigned_user_id',
    ),
     'popup_fields' => 
    array (
      0 => 'parametrizacionesid',
    ),
     'def_basicsearch_col' => 'parametrizacionesid',
     'def_detailview_recname' => 'parametrizacionesid',
     'mandatory_fields' => 
    array (
      0 => 'parametrizacionesid',
      1 => 'assigned_user_id',
    ),
     'default_order_by' => 'parametrizacionesid',
     'default_sort_order' => 'ASC',
     'db' => 
    PearDatabase::__set_state(array(
       'database' => 
      ADODB_mysqli::__set_state(array(
         'databaseType' => 'mysqli',
         'dataProvider' => 'mysql',
         'hasInsertID' => true,
         'hasAffectedRows' => true,
         'metaTablesSQL' => 'SELECT
			TABLE_NAME,
			CASE WHEN TABLE_TYPE = \'VIEW\' THEN \'V\' ELSE \'T\' END
		FROM INFORMATION_SCHEMA.TABLES
		WHERE TABLE_SCHEMA=',
         'metaColumnsSQL' => 'SHOW COLUMNS FROM `%s`',
         'fmtTimeStamp' => '\'Y-m-d H:i:s\'',
         'hasLimit' => true,
         'hasMoveFirst' => true,
         'hasGenID' => true,
         'isoDates' => true,
         'sysDate' => 'CURDATE()',
         'sysTimeStamp' => 'NOW()',
         'hasTransactions' => true,
         'forceNewConnect' => false,
         'poorAffectedRows' => true,
         'clientFlags' => 0,
         'substr' => 'substring',
         'port' => '3306',
         'socket' => '',
         '_bindInputArray' => false,
         'nameQuote' => '`',
         'optionFlags' => 
        array (
          0 => 
          array (
            0 => 5,
            1 => 0,
          ),
          1 => 
          array (
            0 => 8,
            1 => true,
          ),
        ),
         'arrayClass' => 'ADORecordSet_array_mysqli',
         'multiQuery' => false,
         '_genIDSQL' => 'update %s set id=LAST_INSERT_ID(id+1);',
         '_genSeqSQL' => 'create table if not exists %s (id int not null)',
         '_genSeqCountSQL' => 'select count(*) from %s',
         '_genSeq2SQL' => 'insert into %s values (%s)',
         '_dropSeqSQL' => 'drop table if exists %s',
         'database' => 'bps2',
         'host' => 'localhost',
         'user' => 'root',
         'password' => '',
         'debug' => false,
         'maxblobsize' => 262144,
         'concat_operator' => '+',
         'length' => 'length',
         'random' => 'rand()',
         'upperCase' => 'upper',
         'fmtDate' => '\'Y-m-d\'',
         'true' => '1',
         'false' => '0',
         'replaceQuote' => '\\\'',
         'charSet' => false,
         'metaDatabasesSQL' => '',
         'uniqueOrderBy' => false,
         'emptyDate' => '&nbsp;',
         'emptyTimeStamp' => '&nbsp;',
         'lastInsID' => false,
         'hasTop' => false,
         'readOnly' => false,
         'genID' => 0,
         'raiseErrorFn' => false,
         'cacheSecs' => 3600,
         'memCache' => false,
         'memCacheHost' => NULL,
         'memCachePort' => 11211,
         'memCacheCompress' => false,
         'sysUTimeStamp' => false,
         'noNullStrings' => false,
         'numCacheHits' => 0,
         'numCacheMisses' => 0,
         'pageExecuteCountRows' => true,
         'uniqueSort' => false,
         'leftOuter' => false,
         'rightOuter' => false,
         'ansiOuter' => false,
         'autoRollback' => false,
         'fnExecute' => false,
         'fnCacheExecute' => false,
         'blobEncodeType' => false,
         'rsPrefix' => 'ADORecordSet_',
         'autoCommit' => true,
         'transOff' => 0,
         'transCnt' => 0,
         'fetchMode' => false,
         'null2null' => 'null',
         'bulkBind' => false,
         '_oldRaiseFn' => false,
         '_transOK' => NULL,
         '_connectionID' => 
        mysqli::__set_state(array(
           'affected_rows' => NULL,
           'client_info' => NULL,
           'client_version' => NULL,
           'connect_errno' => NULL,
           'connect_error' => NULL,
           'errno' => NULL,
           'error' => NULL,
           'error_list' => NULL,
           'field_count' => NULL,
           'host_info' => NULL,
           'info' => NULL,
           'insert_id' => NULL,
           'server_info' => NULL,
           'server_version' => NULL,
           'sqlstate' => NULL,
           'protocol_version' => NULL,
           'thread_id' => NULL,
           'warning_count' => NULL,
        )),
         '_errorMsg' => false,
         '_errorCode' => false,
         '_queryID' => 
        mysqli_result::__set_state(array(
           'current_field' => NULL,
           'field_count' => NULL,
           'lengths' => NULL,
           'num_rows' => NULL,
           'type' => NULL,
        )),
         '_isPersistentConnection' => true,
         '_evalAll' => false,
         '_affected' => false,
         '_logsql' => false,
         '_transmode' => '',
         'connectionParameters' => 
        array (
        ),
         'databaseName' => 'bps2',
      )),
       'dieOnError' => false,
       'dbType' => 'mysqli',
       'dbHostName' => 'localhost:3306',
       'dbName' => 'bps2',
       'dbOptions' => 
      array (
        'persistent' => true,
        'autofree' => false,
        'debug' => 0,
        'seqname_format' => '%s_seq',
        'portability' => 0,
        'ssl' => false,
      ),
       'userName' => 'root',
       'userPassword' => '',
       'query_time' => 0,
       'log' => 
      Logger::__set_state(array(
         'additive' => true,
         'fqcn' => 'Logger',
         'level' => NULL,
         'name' => 'PearDatabase_',
         'parent' => 
        LoggerRoot::__set_state(array(
           'additive' => true,
           'fqcn' => 'Logger',
           'level' => 
          LoggerLevel::__set_state(array(
             'level' => 10000,
             'levelStr' => 'DEBUG',
             'syslogEquivalent' => 6,
          )),
           'name' => 'root',
           'parent' => NULL,
           'appenders' => 
          array (
            'A1' => 
            LoggerAppenderRollingFile::__set_state(array(
               'maxFileSize' => 10485760,
               'maxBackupIndex' => 10,
               'compress' => false,
               'clearConditional' => true,
               'locking' => true,
               'append' => true,
               'file' => 'logs/vtigercrm.log',
               'fp' => NULL,
               'closed' => false,
               'filter' => NULL,
               'layout' => 
              LoggerLayoutPattern::__set_state(array(
                 'pattern' => '%date %-5level %logger %message%newline',
                 'converterMap' => 
                array (
                  'c' => 'LoggerPatternConverterLogger',
                  'lo' => 'LoggerPatternConverterLogger',
                  'logger' => 'LoggerPatternConverterLogger',
                  'C' => 'LoggerPatternConverterClass',
                  'class' => 'LoggerPatternConverterClass',
                  'cookie' => 'LoggerPatternConverterCookie',
                  'd' => 'LoggerPatternConverterDate',
                  'date' => 'LoggerPatternConverterDate',
                  'e' => 'LoggerPatternConverterEnvironment',
                  'env' => 'LoggerPatternConverterEnvironment',
                  'ex' => 'LoggerPatternConverterThrowable',
                  'exception' => 'LoggerPatternConverterThrowable',
                  'throwable' => 'LoggerPatternConverterThrowable',
                  'F' => 'LoggerPatternConverterFile',
                  'file' => 'LoggerPatternConverterFile',
                  'l' => 'LoggerPatternConverterLocation',
                  'location' => 'LoggerPatternConverterLocation',
                  'L' => 'LoggerPatternConverterLine',
                  'line' => 'LoggerPatternConverterLine',
                  'm' => 'LoggerPatternConverterMessage',
                  'msg' => 'LoggerPatternConverterMessage',
                  'message' => 'LoggerPatternConverterMessage',
                  'M' => 'LoggerPatternConverterMethod',
                  'method' => 'LoggerPatternConverterMethod',
                  'n' => 'LoggerPatternConverterNewLine',
                  'newline' => 'LoggerPatternConverterNewLine',
                  'p' => 'LoggerPatternConverterLevel',
                  'le' => 'LoggerPatternConverterLevel',
                  'level' => 'LoggerPatternConverterLevel',
                  'r' => 'LoggerPatternConverterRelative',
                  'relative' => 'LoggerPatternConverterRelative',
                  'req' => 'LoggerPatternConverterRequest',
                  'request' => 'LoggerPatternConverterRequest',
                  's' => 'LoggerPatternConverterServer',
                  'server' => 'LoggerPatternConverterServer',
                  'ses' => 'LoggerPatternConverterSession',
                  'session' => 'LoggerPatternConverterSession',
                  'sid' => 'LoggerPatternConverterSessionID',
                  'sessionid' => 'LoggerPatternConverterSessionID',
                  't' => 'LoggerPatternConverterProcess',
                  'pid' => 'LoggerPatternConverterProcess',
                  'process' => 'LoggerPatternConverterProcess',
                  'x' => 'LoggerPatternConverterNDC',
                  'ndc' => 'LoggerPatternConverterNDC',
                  'X' => 'LoggerPatternConverterMDC',
                  'mdc' => 'LoggerPatternConverterMDC',
                ),
                 'head' => 
                LoggerPatternConverterDate::__set_state(array(
                   'format' => 'c',
                   'specials' => 
                  array (
                    'ISO8601' => 'c',
                    'ABSOLUTE' => 'H:i:s',
                    'DATE' => 'd M Y H:i:s.u',
                  ),
                   'useLocalDate' => false,
                   'next' => 
                  LoggerPatternConverterLiteral::__set_state(array(
                     'literalValue' => ' ',
                     'next' => 
                    LoggerPatternConverterLevel::__set_state(array(
                       'next' => 
                      LoggerPatternConverterLiteral::__set_state(array(
                         'literalValue' => ' ',
                         'next' => 
                        LoggerPatternConverterLogger::__set_state(array(
                           'length' => NULL,
                           'cache' => 
                          array (
                            'VT' => 'VT',
                            'user' => 'user',
                          ),
                           'next' => 
                          LoggerPatternConverterLiteral::__set_state(array(
                             'literalValue' => ' ',
                             'next' => 
                            LoggerPatternConverterMessage::__set_state(array(
                               'next' => 
                              LoggerPatternConverterNewLine::__set_state(array(
                                 'next' => NULL,
                                 'formattingInfo' => 
                                LoggerFormattingInfo::__set_state(array(
                                   'min' => 0,
                                   'max' => 9223372036854775807,
                                   'padLeft' => true,
                                   'trimLeft' => false,
                                )),
                                 'option' => '',
                              )),
                               'formattingInfo' => 
                              LoggerFormattingInfo::__set_state(array(
                                 'min' => 0,
                                 'max' => 9223372036854775807,
                                 'padLeft' => true,
                                 'trimLeft' => false,
                              )),
                               'option' => '',
                            )),
                             'formattingInfo' => NULL,
                             'option' => NULL,
                          )),
                           'formattingInfo' => 
                          LoggerFormattingInfo::__set_state(array(
                             'min' => 0,
                             'max' => 9223372036854775807,
                             'padLeft' => true,
                             'trimLeft' => false,
                          )),
                           'option' => '',
                        )),
                         'formattingInfo' => NULL,
                         'option' => NULL,
                      )),
                       'formattingInfo' => 
                      LoggerFormattingInfo::__set_state(array(
                         'min' => 5,
                         'max' => 9223372036854775807,
                         'padLeft' => false,
                         'trimLeft' => false,
                      )),
                       'option' => '',
                    )),
                     'formattingInfo' => NULL,
                     'option' => NULL,
                  )),
                   'formattingInfo' => 
                  LoggerFormattingInfo::__set_state(array(
                     'min' => 0,
                     'max' => 9223372036854775807,
                     'padLeft' => true,
                     'trimLeft' => false,
                  )),
                   'option' => '',
                )),
              )),
               'name' => 'A1',
               'threshold' => NULL,
               'requiresLayout' => true,
            )),
          ),
        )),
         'appenders' => 
        array (
        ),
      )),
       'lastmysqlrow' => -1,
       'enableSQLlog' => false,
       'continueInstallOnError' => true,
       'avoidPreparedSql' => false,
       'isdb_default_utf8_charset' => true,
       'req_flist' => NULL,
       'logSqlTimingID' => false,
    )),
     'log' => 
    Logger::__set_state(array(
       'additive' => true,
       'fqcn' => 'Logger',
       'level' => NULL,
       'name' => 'VT',
       'parent' => 
      LoggerRoot::__set_state(array(
         'additive' => true,
         'fqcn' => 'Logger',
         'level' => 
        LoggerLevel::__set_state(array(
           'level' => 10000,
           'levelStr' => 'DEBUG',
           'syslogEquivalent' => 6,
        )),
         'name' => 'root',
         'parent' => NULL,
         'appenders' => 
        array (
          'A1' => 
          LoggerAppenderRollingFile::__set_state(array(
             'maxFileSize' => 10485760,
             'maxBackupIndex' => 10,
             'compress' => false,
             'clearConditional' => true,
             'locking' => true,
             'append' => true,
             'file' => 'logs/vtigercrm.log',
             'fp' => NULL,
             'closed' => false,
             'filter' => NULL,
             'layout' => 
            LoggerLayoutPattern::__set_state(array(
               'pattern' => '%date %-5level %logger %message%newline',
               'converterMap' => 
              array (
                'c' => 'LoggerPatternConverterLogger',
                'lo' => 'LoggerPatternConverterLogger',
                'logger' => 'LoggerPatternConverterLogger',
                'C' => 'LoggerPatternConverterClass',
                'class' => 'LoggerPatternConverterClass',
                'cookie' => 'LoggerPatternConverterCookie',
                'd' => 'LoggerPatternConverterDate',
                'date' => 'LoggerPatternConverterDate',
                'e' => 'LoggerPatternConverterEnvironment',
                'env' => 'LoggerPatternConverterEnvironment',
                'ex' => 'LoggerPatternConverterThrowable',
                'exception' => 'LoggerPatternConverterThrowable',
                'throwable' => 'LoggerPatternConverterThrowable',
                'F' => 'LoggerPatternConverterFile',
                'file' => 'LoggerPatternConverterFile',
                'l' => 'LoggerPatternConverterLocation',
                'location' => 'LoggerPatternConverterLocation',
                'L' => 'LoggerPatternConverterLine',
                'line' => 'LoggerPatternConverterLine',
                'm' => 'LoggerPatternConverterMessage',
                'msg' => 'LoggerPatternConverterMessage',
                'message' => 'LoggerPatternConverterMessage',
                'M' => 'LoggerPatternConverterMethod',
                'method' => 'LoggerPatternConverterMethod',
                'n' => 'LoggerPatternConverterNewLine',
                'newline' => 'LoggerPatternConverterNewLine',
                'p' => 'LoggerPatternConverterLevel',
                'le' => 'LoggerPatternConverterLevel',
                'level' => 'LoggerPatternConverterLevel',
                'r' => 'LoggerPatternConverterRelative',
                'relative' => 'LoggerPatternConverterRelative',
                'req' => 'LoggerPatternConverterRequest',
                'request' => 'LoggerPatternConverterRequest',
                's' => 'LoggerPatternConverterServer',
                'server' => 'LoggerPatternConverterServer',
                'ses' => 'LoggerPatternConverterSession',
                'session' => 'LoggerPatternConverterSession',
                'sid' => 'LoggerPatternConverterSessionID',
                'sessionid' => 'LoggerPatternConverterSessionID',
                't' => 'LoggerPatternConverterProcess',
                'pid' => 'LoggerPatternConverterProcess',
                'process' => 'LoggerPatternConverterProcess',
                'x' => 'LoggerPatternConverterNDC',
                'ndc' => 'LoggerPatternConverterNDC',
                'X' => 'LoggerPatternConverterMDC',
                'mdc' => 'LoggerPatternConverterMDC',
              ),
               'head' => 
              LoggerPatternConverterDate::__set_state(array(
                 'format' => 'c',
                 'specials' => 
                array (
                  'ISO8601' => 'c',
                  'ABSOLUTE' => 'H:i:s',
                  'DATE' => 'd M Y H:i:s.u',
                ),
                 'useLocalDate' => false,
                 'next' => 
                LoggerPatternConverterLiteral::__set_state(array(
                   'literalValue' => ' ',
                   'next' => 
                  LoggerPatternConverterLevel::__set_state(array(
                     'next' => 
                    LoggerPatternConverterLiteral::__set_state(array(
                       'literalValue' => ' ',
                       'next' => 
                      LoggerPatternConverterLogger::__set_state(array(
                         'length' => NULL,
                         'cache' => 
                        array (
                          'VT' => 'VT',
                          'user' => 'user',
                        ),
                         'next' => 
                        LoggerPatternConverterLiteral::__set_state(array(
                           'literalValue' => ' ',
                           'next' => 
                          LoggerPatternConverterMessage::__set_state(array(
                             'next' => 
                            LoggerPatternConverterNewLine::__set_state(array(
                               'next' => NULL,
                               'formattingInfo' => 
                              LoggerFormattingInfo::__set_state(array(
                                 'min' => 0,
                                 'max' => 9223372036854775807,
                                 'padLeft' => true,
                                 'trimLeft' => false,
                              )),
                               'option' => '',
                            )),
                             'formattingInfo' => 
                            LoggerFormattingInfo::__set_state(array(
                               'min' => 0,
                               'max' => 9223372036854775807,
                               'padLeft' => true,
                               'trimLeft' => false,
                            )),
                             'option' => '',
                          )),
                           'formattingInfo' => NULL,
                           'option' => NULL,
                        )),
                         'formattingInfo' => 
                        LoggerFormattingInfo::__set_state(array(
                           'min' => 0,
                           'max' => 9223372036854775807,
                           'padLeft' => true,
                           'trimLeft' => false,
                        )),
                         'option' => '',
                      )),
                       'formattingInfo' => NULL,
                       'option' => NULL,
                    )),
                     'formattingInfo' => 
                    LoggerFormattingInfo::__set_state(array(
                       'min' => 5,
                       'max' => 9223372036854775807,
                       'padLeft' => false,
                       'trimLeft' => false,
                    )),
                     'option' => '',
                  )),
                   'formattingInfo' => NULL,
                   'option' => NULL,
                )),
                 'formattingInfo' => 
                LoggerFormattingInfo::__set_state(array(
                   'min' => 0,
                   'max' => 9223372036854775807,
                   'padLeft' => true,
                   'trimLeft' => false,
                )),
                 'option' => '',
              )),
            )),
             'name' => 'A1',
             'threshold' => NULL,
             'requiresLayout' => true,
          )),
        ),
      )),
       'appenders' => 
      array (
      ),
    )),
     'column_fields' => 
    TrackableObject::__set_state(array(
       'storage' => 
      array (
        'pt_origen' => 'Leonardo rivero',
        'pt_tema' => 'Trabajadores',
        'pt_grupo' => '64',
        'pt_temavtiger' => '768',
        'CreatedTime' => '2022-12-06 11:39:32',
        'ModifiedTime' => '2022-12-08 15:42:19',
        'pt_motivo' => 'Vtiger EMPRESA (corto)',
        'tags' => '',
        'record_id' => '1406',
        'record_module' => 'Parametrizaciones',
        'id' => '1406',
      ),
       'trackingEnabled' => true,
       'tracking' => true,
       'changed' => 
      array (
        0 => 'id',
      ),
    )),
     'IsCustomModule' => true,
     'sortby_fields' => 
    array (
    ),
     'required_fields' => 
    array (
      'assigned_user_id' => 1,
    ),
     'special_functions' => 
    array (
      0 => 'set_import_assigned_user',
    ),
     'ownedby' => NULL,
     'recordSource' => 'CRM',
     '__inactive_fields_filtered' => false,
     'moduleName' => 'Parametrizaciones',
     'id' => '1406',
  )),
))
params => array (
  'tema' => false,
  'motivo' => 'Vtiger EMPRESA (corto)',
  'origen' => 'Leonardo Rivero',
)
rs => array (
  0 => '1406',
  'crmid' => '1406',
)
models => Parametrizaciones_Record_Model::__set_state(array(
   'module' => 
  Vtiger_Module_Model::__set_state(array(
     'blocks' => false,
     'nameFields' => false,
     'moduleMeta' => false,
     'fields' => false,
     'relations' => NULL,
     'id' => '63',
     'name' => 'Parametrizaciones',
     'label' => 'Parametrizaciones',
     'version' => '0',
     'minversion' => false,
     'maxversion' => false,
     'presence' => '0',
     'ownedby' => '0',
     'tabsequence' => '-1',
     'parent' => 'TOOLS',
     'customized' => '1',
     'trial' => '0',
     'isentitytype' => '1',
     'entityidcolumn' => false,
     'entityidfield' => false,
     'basetable' => false,
     'basetableid' => false,
     'customtable' => false,
     'grouptable' => false,
     'fieldtable' => false,
     'allowDuplicates' => '1',
     'isSyncable' => '0',
     'syncActionForDuplicate' => '1',
     'source' => 'custom',
  )),
   'valueMap' => 
  TrackableObject::__set_state(array(
     'storage' => 
    array (
      'pt_origen' => 'Leonardo rivero',
      'pt_tema' => 'Trabajadores',
      'pt_grupo' => '64',
      'pt_temavtiger' => '768',
      'CreatedTime' => '2022-12-06 11:39:32',
      'ModifiedTime' => '2022-12-08 15:42:19',
      'pt_motivo' => 'Vtiger EMPRESA (corto)',
      'tags' => '',
      'record_id' => '1406',
      'record_module' => 'Parametrizaciones',
      'id' => '1406',
    ),
     'trackingEnabled' => true,
     'tracking' => true,
     'changed' => 
    array (
      0 => 'id',
    ),
  )),
   'entity' => 
  Parametrizaciones::__set_state(array(
     'table_name' => 'vtiger_parametrizaciones',
     'table_index' => 'parametrizacionesid',
     'customFieldTable' => 
    array (
      0 => 'vtiger_parametrizacionescf',
      1 => 'parametrizacionesid',
    ),
     'tab_name' => 
    array (
      0 => 'vtiger_crmentity',
      1 => 'vtiger_parametrizaciones',
      2 => 'vtiger_parametrizacionescf',
      3 => 'vtiger_crmentity_user_field',
    ),
     'tab_name_index' => 
    array (
      'vtiger_crmentity' => 'crmid',
      'vtiger_parametrizaciones' => 'parametrizacionesid',
      'vtiger_parametrizacionescf' => 'parametrizacionesid',
      'vtiger_crmentity_user_field' => 'recordid',
    ),
     'list_fields' => 
    array (
      'parametrizacionesid' => 
      array (
        0 => 'parametrizaciones',
        1 => '<entitycolumn>',
      ),
      'Assigned To' => 
      array (
        0 => 'crmentity',
        1 => 'smownerid',
      ),
    ),
     'list_fields_name' => 
    array (
      'parametrizacionesid' => 'parametrizacionesid',
      'Assigned To' => 'assigned_user_id',
    ),
     'list_link_field' => 'parametrizacionesid',
     'search_fields' => 
    array (
      'parametrizacionesid' => 
      array (
        0 => 'parametrizaciones',
        1 => '<entitycolumn>',
      ),
      'Assigned To' => 
      array (
        0 => 'vtiger_crmentity',
        1 => 'assigned_user_id',
      ),
    ),
     'search_fields_name' => 
    array (
      'parametrizacionesid' => 'parametrizacionesid',
      'Assigned To' => 'assigned_user_id',
    ),
     'popup_fields' => 
    array (
      0 => 'parametrizacionesid',
    ),
     'def_basicsearch_col' => 'parametrizacionesid',
     'def_detailview_recname' => 'parametrizacionesid',
     'mandatory_fields' => 
    array (
      0 => 'parametrizacionesid',
      1 => 'assigned_user_id',
    ),
     'default_order_by' => 'parametrizacionesid',
     'default_sort_order' => 'ASC',
     'db' => 
    PearDatabase::__set_state(array(
       'database' => 
      ADODB_mysqli::__set_state(array(
         'databaseType' => 'mysqli',
         'dataProvider' => 'mysql',
         'hasInsertID' => true,
         'hasAffectedRows' => true,
         'metaTablesSQL' => 'SELECT
			TABLE_NAME,
			CASE WHEN TABLE_TYPE = \'VIEW\' THEN \'V\' ELSE \'T\' END
		FROM INFORMATION_SCHEMA.TABLES
		WHERE TABLE_SCHEMA=',
         'metaColumnsSQL' => 'SHOW COLUMNS FROM `%s`',
         'fmtTimeStamp' => '\'Y-m-d H:i:s\'',
         'hasLimit' => true,
         'hasMoveFirst' => true,
         'hasGenID' => true,
         'isoDates' => true,
         'sysDate' => 'CURDATE()',
         'sysTimeStamp' => 'NOW()',
         'hasTransactions' => true,
         'forceNewConnect' => false,
         'poorAffectedRows' => true,
         'clientFlags' => 0,
         'substr' => 'substring',
         'port' => '3306',
         'socket' => '',
         '_bindInputArray' => false,
         'nameQuote' => '`',
         'optionFlags' => 
        array (
          0 => 
          array (
            0 => 5,
            1 => 0,
          ),
          1 => 
          array (
            0 => 8,
            1 => true,
          ),
        ),
         'arrayClass' => 'ADORecordSet_array_mysqli',
         'multiQuery' => false,
         '_genIDSQL' => 'update %s set id=LAST_INSERT_ID(id+1);',
         '_genSeqSQL' => 'create table if not exists %s (id int not null)',
         '_genSeqCountSQL' => 'select count(*) from %s',
         '_genSeq2SQL' => 'insert into %s values (%s)',
         '_dropSeqSQL' => 'drop table if exists %s',
         'database' => 'bps2',
         'host' => 'localhost',
         'user' => 'root',
         'password' => '',
         'debug' => false,
         'maxblobsize' => 262144,
         'concat_operator' => '+',
         'length' => 'length',
         'random' => 'rand()',
         'upperCase' => 'upper',
         'fmtDate' => '\'Y-m-d\'',
         'true' => '1',
         'false' => '0',
         'replaceQuote' => '\\\'',
         'charSet' => false,
         'metaDatabasesSQL' => '',
         'uniqueOrderBy' => false,
         'emptyDate' => '&nbsp;',
         'emptyTimeStamp' => '&nbsp;',
         'lastInsID' => false,
         'hasTop' => false,
         'readOnly' => false,
         'genID' => 0,
         'raiseErrorFn' => false,
         'cacheSecs' => 3600,
         'memCache' => false,
         'memCacheHost' => NULL,
         'memCachePort' => 11211,
         'memCacheCompress' => false,
         'sysUTimeStamp' => false,
         'noNullStrings' => false,
         'numCacheHits' => 0,
         'numCacheMisses' => 0,
         'pageExecuteCountRows' => true,
         'uniqueSort' => false,
         'leftOuter' => false,
         'rightOuter' => false,
         'ansiOuter' => false,
         'autoRollback' => false,
         'fnExecute' => false,
         'fnCacheExecute' => false,
         'blobEncodeType' => false,
         'rsPrefix' => 'ADORecordSet_',
         'autoCommit' => true,
         'transOff' => 0,
         'transCnt' => 0,
         'fetchMode' => false,
         'null2null' => 'null',
         'bulkBind' => false,
         '_oldRaiseFn' => false,
         '_transOK' => NULL,
         '_connectionID' => 
        mysqli::__set_state(array(
           'affected_rows' => NULL,
           'client_info' => NULL,
           'client_version' => NULL,
           'connect_errno' => NULL,
           'connect_error' => NULL,
           'errno' => NULL,
           'error' => NULL,
           'error_list' => NULL,
           'field_count' => NULL,
           'host_info' => NULL,
           'info' => NULL,
           'insert_id' => NULL,
           'server_info' => NULL,
           'server_version' => NULL,
           'sqlstate' => NULL,
           'protocol_version' => NULL,
           'thread_id' => NULL,
           'warning_count' => NULL,
        )),
         '_errorMsg' => false,
         '_errorCode' => false,
         '_queryID' => 
        mysqli_result::__set_state(array(
           'current_field' => NULL,
           'field_count' => NULL,
           'lengths' => NULL,
           'num_rows' => NULL,
           'type' => NULL,
        )),
         '_isPersistentConnection' => true,
         '_evalAll' => false,
         '_affected' => false,
         '_logsql' => false,
         '_transmode' => '',
         'connectionParameters' => 
        array (
        ),
         'databaseName' => 'bps2',
      )),
       'dieOnError' => false,
       'dbType' => 'mysqli',
       'dbHostName' => 'localhost:3306',
       'dbName' => 'bps2',
       'dbOptions' => 
      array (
        'persistent' => true,
        'autofree' => false,
        'debug' => 0,
        'seqname_format' => '%s_seq',
        'portability' => 0,
        'ssl' => false,
      ),
       'userName' => 'root',
       'userPassword' => '',
       'query_time' => 0,
       'log' => 
      Logger::__set_state(array(
         'additive' => true,
         'fqcn' => 'Logger',
         'level' => NULL,
         'name' => 'PearDatabase_',
         'parent' => 
        LoggerRoot::__set_state(array(
           'additive' => true,
           'fqcn' => 'Logger',
           'level' => 
          LoggerLevel::__set_state(array(
             'level' => 10000,
             'levelStr' => 'DEBUG',
             'syslogEquivalent' => 6,
          )),
           'name' => 'root',
           'parent' => NULL,
           'appenders' => 
          array (
            'A1' => 
            LoggerAppenderRollingFile::__set_state(array(
               'maxFileSize' => 10485760,
               'maxBackupIndex' => 10,
               'compress' => false,
               'clearConditional' => true,
               'locking' => true,
               'append' => true,
               'file' => 'logs/vtigercrm.log',
               'fp' => NULL,
               'closed' => false,
               'filter' => NULL,
               'layout' => 
              LoggerLayoutPattern::__set_state(array(
                 'pattern' => '%date %-5level %logger %message%newline',
                 'converterMap' => 
                array (
                  'c' => 'LoggerPatternConverterLogger',
                  'lo' => 'LoggerPatternConverterLogger',
                  'logger' => 'LoggerPatternConverterLogger',
                  'C' => 'LoggerPatternConverterClass',
                  'class' => 'LoggerPatternConverterClass',
                  'cookie' => 'LoggerPatternConverterCookie',
                  'd' => 'LoggerPatternConverterDate',
                  'date' => 'LoggerPatternConverterDate',
                  'e' => 'LoggerPatternConverterEnvironment',
                  'env' => 'LoggerPatternConverterEnvironment',
                  'ex' => 'LoggerPatternConverterThrowable',
                  'exception' => 'LoggerPatternConverterThrowable',
                  'throwable' => 'LoggerPatternConverterThrowable',
                  'F' => 'LoggerPatternConverterFile',
                  'file' => 'LoggerPatternConverterFile',
                  'l' => 'LoggerPatternConverterLocation',
                  'location' => 'LoggerPatternConverterLocation',
                  'L' => 'LoggerPatternConverterLine',
                  'line' => 'LoggerPatternConverterLine',
                  'm' => 'LoggerPatternConverterMessage',
                  'msg' => 'LoggerPatternConverterMessage',
                  'message' => 'LoggerPatternConverterMessage',
                  'M' => 'LoggerPatternConverterMethod',
                  'method' => 'LoggerPatternConverterMethod',
                  'n' => 'LoggerPatternConverterNewLine',
                  'newline' => 'LoggerPatternConverterNewLine',
                  'p' => 'LoggerPatternConverterLevel',
                  'le' => 'LoggerPatternConverterLevel',
                  'level' => 'LoggerPatternConverterLevel',
                  'r' => 'LoggerPatternConverterRelative',
                  'relative' => 'LoggerPatternConverterRelative',
                  'req' => 'LoggerPatternConverterRequest',
                  'request' => 'LoggerPatternConverterRequest',
                  's' => 'LoggerPatternConverterServer',
                  'server' => 'LoggerPatternConverterServer',
                  'ses' => 'LoggerPatternConverterSession',
                  'session' => 'LoggerPatternConverterSession',
                  'sid' => 'LoggerPatternConverterSessionID',
                  'sessionid' => 'LoggerPatternConverterSessionID',
                  't' => 'LoggerPatternConverterProcess',
                  'pid' => 'LoggerPatternConverterProcess',
                  'process' => 'LoggerPatternConverterProcess',
                  'x' => 'LoggerPatternConverterNDC',
                  'ndc' => 'LoggerPatternConverterNDC',
                  'X' => 'LoggerPatternConverterMDC',
                  'mdc' => 'LoggerPatternConverterMDC',
                ),
                 'head' => 
                LoggerPatternConverterDate::__set_state(array(
                   'format' => 'c',
                   'specials' => 
                  array (
                    'ISO8601' => 'c',
                    'ABSOLUTE' => 'H:i:s',
                    'DATE' => 'd M Y H:i:s.u',
                  ),
                   'useLocalDate' => false,
                   'next' => 
                  LoggerPatternConverterLiteral::__set_state(array(
                     'literalValue' => ' ',
                     'next' => 
                    LoggerPatternConverterLevel::__set_state(array(
                       'next' => 
                      LoggerPatternConverterLiteral::__set_state(array(
                         'literalValue' => ' ',
                         'next' => 
                        LoggerPatternConverterLogger::__set_state(array(
                           'length' => NULL,
                           'cache' => 
                          array (
                            'VT' => 'VT',
                            'user' => 'user',
                          ),
                           'next' => 
                          LoggerPatternConverterLiteral::__set_state(array(
                             'literalValue' => ' ',
                             'next' => 
                            LoggerPatternConverterMessage::__set_state(array(
                               'next' => 
                              LoggerPatternConverterNewLine::__set_state(array(
                                 'next' => NULL,
                                 'formattingInfo' => 
                                LoggerFormattingInfo::__set_state(array(
                                   'min' => 0,
                                   'max' => 9223372036854775807,
                                   'padLeft' => true,
                                   'trimLeft' => false,
                                )),
                                 'option' => '',
                              )),
                               'formattingInfo' => 
                              LoggerFormattingInfo::__set_state(array(
                                 'min' => 0,
                                 'max' => 9223372036854775807,
                                 'padLeft' => true,
                                 'trimLeft' => false,
                              )),
                               'option' => '',
                            )),
                             'formattingInfo' => NULL,
                             'option' => NULL,
                          )),
                           'formattingInfo' => 
                          LoggerFormattingInfo::__set_state(array(
                             'min' => 0,
                             'max' => 9223372036854775807,
                             'padLeft' => true,
                             'trimLeft' => false,
                          )),
                           'option' => '',
                        )),
                         'formattingInfo' => NULL,
                         'option' => NULL,
                      )),
                       'formattingInfo' => 
                      LoggerFormattingInfo::__set_state(array(
                         'min' => 5,
                         'max' => 9223372036854775807,
                         'padLeft' => false,
                         'trimLeft' => false,
                      )),
                       'option' => '',
                    )),
                     'formattingInfo' => NULL,
                     'option' => NULL,
                  )),
                   'formattingInfo' => 
                  LoggerFormattingInfo::__set_state(array(
                     'min' => 0,
                     'max' => 9223372036854775807,
                     'padLeft' => true,
                     'trimLeft' => false,
                  )),
                   'option' => '',
                )),
              )),
               'name' => 'A1',
               'threshold' => NULL,
               'requiresLayout' => true,
            )),
          ),
        )),
         'appenders' => 
        array (
        ),
      )),
       'lastmysqlrow' => -1,
       'enableSQLlog' => false,
       'continueInstallOnError' => true,
       'avoidPreparedSql' => false,
       'isdb_default_utf8_charset' => true,
       'req_flist' => NULL,
       'logSqlTimingID' => false,
    )),
     'log' => 
    Logger::__set_state(array(
       'additive' => true,
       'fqcn' => 'Logger',
       'level' => NULL,
       'name' => 'VT',
       'parent' => 
      LoggerRoot::__set_state(array(
         'additive' => true,
         'fqcn' => 'Logger',
         'level' => 
        LoggerLevel::__set_state(array(
           'level' => 10000,
           'levelStr' => 'DEBUG',
           'syslogEquivalent' => 6,
        )),
         'name' => 'root',
         'parent' => NULL,
         'appenders' => 
        array (
          'A1' => 
          LoggerAppenderRollingFile::__set_state(array(
             'maxFileSize' => 10485760,
             'maxBackupIndex' => 10,
             'compress' => false,
             'clearConditional' => true,
             'locking' => true,
             'append' => true,
             'file' => 'logs/vtigercrm.log',
             'fp' => NULL,
             'closed' => false,
             'filter' => NULL,
             'layout' => 
            LoggerLayoutPattern::__set_state(array(
               'pattern' => '%date %-5level %logger %message%newline',
               'converterMap' => 
              array (
                'c' => 'LoggerPatternConverterLogger',
                'lo' => 'LoggerPatternConverterLogger',
                'logger' => 'LoggerPatternConverterLogger',
                'C' => 'LoggerPatternConverterClass',
                'class' => 'LoggerPatternConverterClass',
                'cookie' => 'LoggerPatternConverterCookie',
                'd' => 'LoggerPatternConverterDate',
                'date' => 'LoggerPatternConverterDate',
                'e' => 'LoggerPatternConverterEnvironment',
                'env' => 'LoggerPatternConverterEnvironment',
                'ex' => 'LoggerPatternConverterThrowable',
                'exception' => 'LoggerPatternConverterThrowable',
                'throwable' => 'LoggerPatternConverterThrowable',
                'F' => 'LoggerPatternConverterFile',
                'file' => 'LoggerPatternConverterFile',
                'l' => 'LoggerPatternConverterLocation',
                'location' => 'LoggerPatternConverterLocation',
                'L' => 'LoggerPatternConverterLine',
                'line' => 'LoggerPatternConverterLine',
                'm' => 'LoggerPatternConverterMessage',
                'msg' => 'LoggerPatternConverterMessage',
                'message' => 'LoggerPatternConverterMessage',
                'M' => 'LoggerPatternConverterMethod',
                'method' => 'LoggerPatternConverterMethod',
                'n' => 'LoggerPatternConverterNewLine',
                'newline' => 'LoggerPatternConverterNewLine',
                'p' => 'LoggerPatternConverterLevel',
                'le' => 'LoggerPatternConverterLevel',
                'level' => 'LoggerPatternConverterLevel',
                'r' => 'LoggerPatternConverterRelative',
                'relative' => 'LoggerPatternConverterRelative',
                'req' => 'LoggerPatternConverterRequest',
                'request' => 'LoggerPatternConverterRequest',
                's' => 'LoggerPatternConverterServer',
                'server' => 'LoggerPatternConverterServer',
                'ses' => 'LoggerPatternConverterSession',
                'session' => 'LoggerPatternConverterSession',
                'sid' => 'LoggerPatternConverterSessionID',
                'sessionid' => 'LoggerPatternConverterSessionID',
                't' => 'LoggerPatternConverterProcess',
                'pid' => 'LoggerPatternConverterProcess',
                'process' => 'LoggerPatternConverterProcess',
                'x' => 'LoggerPatternConverterNDC',
                'ndc' => 'LoggerPatternConverterNDC',
                'X' => 'LoggerPatternConverterMDC',
                'mdc' => 'LoggerPatternConverterMDC',
              ),
               'head' => 
              LoggerPatternConverterDate::__set_state(array(
                 'format' => 'c',
                 'specials' => 
                array (
                  'ISO8601' => 'c',
                  'ABSOLUTE' => 'H:i:s',
                  'DATE' => 'd M Y H:i:s.u',
                ),
                 'useLocalDate' => false,
                 'next' => 
                LoggerPatternConverterLiteral::__set_state(array(
                   'literalValue' => ' ',
                   'next' => 
                  LoggerPatternConverterLevel::__set_state(array(
                     'next' => 
                    LoggerPatternConverterLiteral::__set_state(array(
                       'literalValue' => ' ',
                       'next' => 
                      LoggerPatternConverterLogger::__set_state(array(
                         'length' => NULL,
                         'cache' => 
                        array (
                          'VT' => 'VT',
                          'user' => 'user',
                        ),
                         'next' => 
                        LoggerPatternConverterLiteral::__set_state(array(
                           'literalValue' => ' ',
                           'next' => 
                          LoggerPatternConverterMessage::__set_state(array(
                             'next' => 
                            LoggerPatternConverterNewLine::__set_state(array(
                               'next' => NULL,
                               'formattingInfo' => 
                              LoggerFormattingInfo::__set_state(array(
                                 'min' => 0,
                                 'max' => 9223372036854775807,
                                 'padLeft' => true,
                                 'trimLeft' => false,
                              )),
                               'option' => '',
                            )),
                             'formattingInfo' => 
                            LoggerFormattingInfo::__set_state(array(
                               'min' => 0,
                               'max' => 9223372036854775807,
                               'padLeft' => true,
                               'trimLeft' => false,
                            )),
                             'option' => '',
                          )),
                           'formattingInfo' => NULL,
                           'option' => NULL,
                        )),
                         'formattingInfo' => 
                        LoggerFormattingInfo::__set_state(array(
                           'min' => 0,
                           'max' => 9223372036854775807,
                           'padLeft' => true,
                           'trimLeft' => false,
                        )),
                         'option' => '',
                      )),
                       'formattingInfo' => NULL,
                       'option' => NULL,
                    )),
                     'formattingInfo' => 
                    LoggerFormattingInfo::__set_state(array(
                       'min' => 5,
                       'max' => 9223372036854775807,
                       'padLeft' => false,
                       'trimLeft' => false,
                    )),
                     'option' => '',
                  )),
                   'formattingInfo' => NULL,
                   'option' => NULL,
                )),
                 'formattingInfo' => 
                LoggerFormattingInfo::__set_state(array(
                   'min' => 0,
                   'max' => 9223372036854775807,
                   'padLeft' => true,
                   'trimLeft' => false,
                )),
                 'option' => '',
              )),
            )),
             'name' => 'A1',
             'threshold' => NULL,
             'requiresLayout' => true,
          )),
        ),
      )),
       'appenders' => 
      array (
      ),
    )),
     'column_fields' => 
    TrackableObject::__set_state(array(
       'storage' => 
      array (
        'pt_origen' => 'Leonardo rivero',
        'pt_tema' => 'Trabajadores',
        'pt_grupo' => '64',
        'pt_temavtiger' => '768',
        'CreatedTime' => '2022-12-06 11:39:32',
        'ModifiedTime' => '2022-12-08 15:42:19',
        'pt_motivo' => 'Vtiger EMPRESA (corto)',
        'tags' => '',
        'record_id' => '1406',
        'record_module' => 'Parametrizaciones',
        'id' => '1406',
      ),
       'trackingEnabled' => true,
       'tracking' => true,
       'changed' => 
      array (
        0 => 'id',
      ),
    )),
     'IsCustomModule' => true,
     'sortby_fields' => 
    array (
    ),
     'required_fields' => 
    array (
      'assigned_user_id' => 1,
    ),
     'special_functions' => 
    array (
      0 => 'set_import_assigned_user',
    ),
     'ownedby' => NULL,
     'recordSource' => 'CRM',
     '__inactive_fields_filtered' => false,
     'moduleName' => 'Parametrizaciones',
     'id' => '1406',
  )),
))
params => array (
  'tema' => false,
  'motivo' => 'Vtiger EMPRESA (corto)',
  'origen' => 'Leonardo Rivero',
)
rs => array (
  0 => '1406',
  'crmid' => '1406',
)
models => Parametrizaciones_Record_Model::__set_state(array(
   'module' => 
  Vtiger_Module_Model::__set_state(array(
     'blocks' => false,
     'nameFields' => false,
     'moduleMeta' => false,
     'fields' => false,
     'relations' => NULL,
     'id' => '63',
     'name' => 'Parametrizaciones',
     'label' => 'Parametrizaciones',
     'version' => '0',
     'minversion' => false,
     'maxversion' => false,
     'presence' => '0',
     'ownedby' => '0',
     'tabsequence' => '-1',
     'parent' => 'TOOLS',
     'customized' => '1',
     'trial' => '0',
     'isentitytype' => '1',
     'entityidcolumn' => false,
     'entityidfield' => false,
     'basetable' => false,
     'basetableid' => false,
     'customtable' => false,
     'grouptable' => false,
     'fieldtable' => false,
     'allowDuplicates' => '1',
     'isSyncable' => '0',
     'syncActionForDuplicate' => '1',
     'source' => 'custom',
  )),
   'valueMap' => 
  TrackableObject::__set_state(array(
     'storage' => 
    array (
      'pt_origen' => 'Leonardo rivero',
      'pt_tema' => 'Trabajadores',
      'pt_grupo' => '64',
      'pt_temavtiger' => '768',
      'CreatedTime' => '2022-12-06 11:39:32',
      'ModifiedTime' => '2022-12-08 15:42:19',
      'pt_motivo' => 'Vtiger EMPRESA (corto)',
      'tags' => '',
      'record_id' => '1406',
      'record_module' => 'Parametrizaciones',
      'id' => '1406',
    ),
     'trackingEnabled' => true,
     'tracking' => true,
     'changed' => 
    array (
      0 => 'id',
    ),
  )),
   'entity' => 
  Parametrizaciones::__set_state(array(
     'table_name' => 'vtiger_parametrizaciones',
     'table_index' => 'parametrizacionesid',
     'customFieldTable' => 
    array (
      0 => 'vtiger_parametrizacionescf',
      1 => 'parametrizacionesid',
    ),
     'tab_name' => 
    array (
      0 => 'vtiger_crmentity',
      1 => 'vtiger_parametrizaciones',
      2 => 'vtiger_parametrizacionescf',
      3 => 'vtiger_crmentity_user_field',
    ),
     'tab_name_index' => 
    array (
      'vtiger_crmentity' => 'crmid',
      'vtiger_parametrizaciones' => 'parametrizacionesid',
      'vtiger_parametrizacionescf' => 'parametrizacionesid',
      'vtiger_crmentity_user_field' => 'recordid',
    ),
     'list_fields' => 
    array (
      'parametrizacionesid' => 
      array (
        0 => 'parametrizaciones',
        1 => '<entitycolumn>',
      ),
      'Assigned To' => 
      array (
        0 => 'crmentity',
        1 => 'smownerid',
      ),
    ),
     'list_fields_name' => 
    array (
      'parametrizacionesid' => 'parametrizacionesid',
      'Assigned To' => 'assigned_user_id',
    ),
     'list_link_field' => 'parametrizacionesid',
     'search_fields' => 
    array (
      'parametrizacionesid' => 
      array (
        0 => 'parametrizaciones',
        1 => '<entitycolumn>',
      ),
      'Assigned To' => 
      array (
        0 => 'vtiger_crmentity',
        1 => 'assigned_user_id',
      ),
    ),
     'search_fields_name' => 
    array (
      'parametrizacionesid' => 'parametrizacionesid',
      'Assigned To' => 'assigned_user_id',
    ),
     'popup_fields' => 
    array (
      0 => 'parametrizacionesid',
    ),
     'def_basicsearch_col' => 'parametrizacionesid',
     'def_detailview_recname' => 'parametrizacionesid',
     'mandatory_fields' => 
    array (
      0 => 'parametrizacionesid',
      1 => 'assigned_user_id',
    ),
     'default_order_by' => 'parametrizacionesid',
     'default_sort_order' => 'ASC',
     'db' => 
    PearDatabase::__set_state(array(
       'database' => 
      ADODB_mysqli::__set_state(array(
         'databaseType' => 'mysqli',
         'dataProvider' => 'mysql',
         'hasInsertID' => true,
         'hasAffectedRows' => true,
         'metaTablesSQL' => 'SELECT
			TABLE_NAME,
			CASE WHEN TABLE_TYPE = \'VIEW\' THEN \'V\' ELSE \'T\' END
		FROM INFORMATION_SCHEMA.TABLES
		WHERE TABLE_SCHEMA=',
         'metaColumnsSQL' => 'SHOW COLUMNS FROM `%s`',
         'fmtTimeStamp' => '\'Y-m-d H:i:s\'',
         'hasLimit' => true,
         'hasMoveFirst' => true,
         'hasGenID' => true,
         'isoDates' => true,
         'sysDate' => 'CURDATE()',
         'sysTimeStamp' => 'NOW()',
         'hasTransactions' => true,
         'forceNewConnect' => false,
         'poorAffectedRows' => true,
         'clientFlags' => 0,
         'substr' => 'substring',
         'port' => '3306',
         'socket' => '',
         '_bindInputArray' => false,
         'nameQuote' => '`',
         'optionFlags' => 
        array (
          0 => 
          array (
            0 => 5,
            1 => 0,
          ),
          1 => 
          array (
            0 => 8,
            1 => true,
          ),
        ),
         'arrayClass' => 'ADORecordSet_array_mysqli',
         'multiQuery' => false,
         '_genIDSQL' => 'update %s set id=LAST_INSERT_ID(id+1);',
         '_genSeqSQL' => 'create table if not exists %s (id int not null)',
         '_genSeqCountSQL' => 'select count(*) from %s',
         '_genSeq2SQL' => 'insert into %s values (%s)',
         '_dropSeqSQL' => 'drop table if exists %s',
         'database' => 'bps2',
         'host' => 'localhost',
         'user' => 'root',
         'password' => '',
         'debug' => false,
         'maxblobsize' => 262144,
         'concat_operator' => '+',
         'length' => 'length',
         'random' => 'rand()',
         'upperCase' => 'upper',
         'fmtDate' => '\'Y-m-d\'',
         'true' => '1',
         'false' => '0',
         'replaceQuote' => '\\\'',
         'charSet' => false,
         'metaDatabasesSQL' => '',
         'uniqueOrderBy' => false,
         'emptyDate' => '&nbsp;',
         'emptyTimeStamp' => '&nbsp;',
         'lastInsID' => false,
         'hasTop' => false,
         'readOnly' => false,
         'genID' => 0,
         'raiseErrorFn' => false,
         'cacheSecs' => 3600,
         'memCache' => false,
         'memCacheHost' => NULL,
         'memCachePort' => 11211,
         'memCacheCompress' => false,
         'sysUTimeStamp' => false,
         'noNullStrings' => false,
         'numCacheHits' => 0,
         'numCacheMisses' => 0,
         'pageExecuteCountRows' => true,
         'uniqueSort' => false,
         'leftOuter' => false,
         'rightOuter' => false,
         'ansiOuter' => false,
         'autoRollback' => false,
         'fnExecute' => false,
         'fnCacheExecute' => false,
         'blobEncodeType' => false,
         'rsPrefix' => 'ADORecordSet_',
         'autoCommit' => true,
         'transOff' => 0,
         'transCnt' => 0,
         'fetchMode' => false,
         'null2null' => 'null',
         'bulkBind' => false,
         '_oldRaiseFn' => false,
         '_transOK' => NULL,
         '_connectionID' => 
        mysqli::__set_state(array(
           'affected_rows' => NULL,
           'client_info' => NULL,
           'client_version' => NULL,
           'connect_errno' => NULL,
           'connect_error' => NULL,
           'errno' => NULL,
           'error' => NULL,
           'error_list' => NULL,
           'field_count' => NULL,
           'host_info' => NULL,
           'info' => NULL,
           'insert_id' => NULL,
           'server_info' => NULL,
           'server_version' => NULL,
           'sqlstate' => NULL,
           'protocol_version' => NULL,
           'thread_id' => NULL,
           'warning_count' => NULL,
        )),
         '_errorMsg' => false,
         '_errorCode' => false,
         '_queryID' => 
        mysqli_result::__set_state(array(
           'current_field' => NULL,
           'field_count' => NULL,
           'lengths' => NULL,
           'num_rows' => NULL,
           'type' => NULL,
        )),
         '_isPersistentConnection' => true,
         '_evalAll' => false,
         '_affected' => false,
         '_logsql' => false,
         '_transmode' => '',
         'connectionParameters' => 
        array (
        ),
         'databaseName' => 'bps2',
      )),
       'dieOnError' => false,
       'dbType' => 'mysqli',
       'dbHostName' => 'localhost:3306',
       'dbName' => 'bps2',
       'dbOptions' => 
      array (
        'persistent' => true,
        'autofree' => false,
        'debug' => 0,
        'seqname_format' => '%s_seq',
        'portability' => 0,
        'ssl' => false,
      ),
       'userName' => 'root',
       'userPassword' => '',
       'query_time' => 0,
       'log' => 
      Logger::__set_state(array(
         'additive' => true,
         'fqcn' => 'Logger',
         'level' => NULL,
         'name' => 'PearDatabase_',
         'parent' => 
        LoggerRoot::__set_state(array(
           'additive' => true,
           'fqcn' => 'Logger',
           'level' => 
          LoggerLevel::__set_state(array(
             'level' => 10000,
             'levelStr' => 'DEBUG',
             'syslogEquivalent' => 6,
          )),
           'name' => 'root',
           'parent' => NULL,
           'appenders' => 
          array (
            'A1' => 
            LoggerAppenderRollingFile::__set_state(array(
               'maxFileSize' => 10485760,
               'maxBackupIndex' => 10,
               'compress' => false,
               'clearConditional' => true,
               'locking' => true,
               'append' => true,
               'file' => 'logs/vtigercrm.log',
               'fp' => NULL,
               'closed' => false,
               'filter' => NULL,
               'layout' => 
              LoggerLayoutPattern::__set_state(array(
                 'pattern' => '%date %-5level %logger %message%newline',
                 'converterMap' => 
                array (
                  'c' => 'LoggerPatternConverterLogger',
                  'lo' => 'LoggerPatternConverterLogger',
                  'logger' => 'LoggerPatternConverterLogger',
                  'C' => 'LoggerPatternConverterClass',
                  'class' => 'LoggerPatternConverterClass',
                  'cookie' => 'LoggerPatternConverterCookie',
                  'd' => 'LoggerPatternConverterDate',
                  'date' => 'LoggerPatternConverterDate',
                  'e' => 'LoggerPatternConverterEnvironment',
                  'env' => 'LoggerPatternConverterEnvironment',
                  'ex' => 'LoggerPatternConverterThrowable',
                  'exception' => 'LoggerPatternConverterThrowable',
                  'throwable' => 'LoggerPatternConverterThrowable',
                  'F' => 'LoggerPatternConverterFile',
                  'file' => 'LoggerPatternConverterFile',
                  'l' => 'LoggerPatternConverterLocation',
                  'location' => 'LoggerPatternConverterLocation',
                  'L' => 'LoggerPatternConverterLine',
                  'line' => 'LoggerPatternConverterLine',
                  'm' => 'LoggerPatternConverterMessage',
                  'msg' => 'LoggerPatternConverterMessage',
                  'message' => 'LoggerPatternConverterMessage',
                  'M' => 'LoggerPatternConverterMethod',
                  'method' => 'LoggerPatternConverterMethod',
                  'n' => 'LoggerPatternConverterNewLine',
                  'newline' => 'LoggerPatternConverterNewLine',
                  'p' => 'LoggerPatternConverterLevel',
                  'le' => 'LoggerPatternConverterLevel',
                  'level' => 'LoggerPatternConverterLevel',
                  'r' => 'LoggerPatternConverterRelative',
                  'relative' => 'LoggerPatternConverterRelative',
                  'req' => 'LoggerPatternConverterRequest',
                  'request' => 'LoggerPatternConverterRequest',
                  's' => 'LoggerPatternConverterServer',
                  'server' => 'LoggerPatternConverterServer',
                  'ses' => 'LoggerPatternConverterSession',
                  'session' => 'LoggerPatternConverterSession',
                  'sid' => 'LoggerPatternConverterSessionID',
                  'sessionid' => 'LoggerPatternConverterSessionID',
                  't' => 'LoggerPatternConverterProcess',
                  'pid' => 'LoggerPatternConverterProcess',
                  'process' => 'LoggerPatternConverterProcess',
                  'x' => 'LoggerPatternConverterNDC',
                  'ndc' => 'LoggerPatternConverterNDC',
                  'X' => 'LoggerPatternConverterMDC',
                  'mdc' => 'LoggerPatternConverterMDC',
                ),
                 'head' => 
                LoggerPatternConverterDate::__set_state(array(
                   'format' => 'c',
                   'specials' => 
                  array (
                    'ISO8601' => 'c',
                    'ABSOLUTE' => 'H:i:s',
                    'DATE' => 'd M Y H:i:s.u',
                  ),
                   'useLocalDate' => false,
                   'next' => 
                  LoggerPatternConverterLiteral::__set_state(array(
                     'literalValue' => ' ',
                     'next' => 
                    LoggerPatternConverterLevel::__set_state(array(
                       'next' => 
                      LoggerPatternConverterLiteral::__set_state(array(
                         'literalValue' => ' ',
                         'next' => 
                        LoggerPatternConverterLogger::__set_state(array(
                           'length' => NULL,
                           'cache' => 
                          array (
                            'VT' => 'VT',
                            'user' => 'user',
                          ),
                           'next' => 
                          LoggerPatternConverterLiteral::__set_state(array(
                             'literalValue' => ' ',
                             'next' => 
                            LoggerPatternConverterMessage::__set_state(array(
                               'next' => 
                              LoggerPatternConverterNewLine::__set_state(array(
                                 'next' => NULL,
                                 'formattingInfo' => 
                                LoggerFormattingInfo::__set_state(array(
                                   'min' => 0,
                                   'max' => 9223372036854775807,
                                   'padLeft' => true,
                                   'trimLeft' => false,
                                )),
                                 'option' => '',
                              )),
                               'formattingInfo' => 
                              LoggerFormattingInfo::__set_state(array(
                                 'min' => 0,
                                 'max' => 9223372036854775807,
                                 'padLeft' => true,
                                 'trimLeft' => false,
                              )),
                               'option' => '',
                            )),
                             'formattingInfo' => NULL,
                             'option' => NULL,
                          )),
                           'formattingInfo' => 
                          LoggerFormattingInfo::__set_state(array(
                             'min' => 0,
                             'max' => 9223372036854775807,
                             'padLeft' => true,
                             'trimLeft' => false,
                          )),
                           'option' => '',
                        )),
                         'formattingInfo' => NULL,
                         'option' => NULL,
                      )),
                       'formattingInfo' => 
                      LoggerFormattingInfo::__set_state(array(
                         'min' => 5,
                         'max' => 9223372036854775807,
                         'padLeft' => false,
                         'trimLeft' => false,
                      )),
                       'option' => '',
                    )),
                     'formattingInfo' => NULL,
                     'option' => NULL,
                  )),
                   'formattingInfo' => 
                  LoggerFormattingInfo::__set_state(array(
                     'min' => 0,
                     'max' => 9223372036854775807,
                     'padLeft' => true,
                     'trimLeft' => false,
                  )),
                   'option' => '',
                )),
              )),
               'name' => 'A1',
               'threshold' => NULL,
               'requiresLayout' => true,
            )),
          ),
        )),
         'appenders' => 
        array (
        ),
      )),
       'lastmysqlrow' => -1,
       'enableSQLlog' => false,
       'continueInstallOnError' => true,
       'avoidPreparedSql' => false,
       'isdb_default_utf8_charset' => true,
       'req_flist' => NULL,
       'logSqlTimingID' => false,
    )),
     'log' => 
    Logger::__set_state(array(
       'additive' => true,
       'fqcn' => 'Logger',
       'level' => NULL,
       'name' => 'VT',
       'parent' => 
      LoggerRoot::__set_state(array(
         'additive' => true,
         'fqcn' => 'Logger',
         'level' => 
        LoggerLevel::__set_state(array(
           'level' => 10000,
           'levelStr' => 'DEBUG',
           'syslogEquivalent' => 6,
        )),
         'name' => 'root',
         'parent' => NULL,
         'appenders' => 
        array (
          'A1' => 
          LoggerAppenderRollingFile::__set_state(array(
             'maxFileSize' => 10485760,
             'maxBackupIndex' => 10,
             'compress' => false,
             'clearConditional' => true,
             'locking' => true,
             'append' => true,
             'file' => 'logs/vtigercrm.log',
             'fp' => NULL,
             'closed' => false,
             'filter' => NULL,
             'layout' => 
            LoggerLayoutPattern::__set_state(array(
               'pattern' => '%date %-5level %logger %message%newline',
               'converterMap' => 
              array (
                'c' => 'LoggerPatternConverterLogger',
                'lo' => 'LoggerPatternConverterLogger',
                'logger' => 'LoggerPatternConverterLogger',
                'C' => 'LoggerPatternConverterClass',
                'class' => 'LoggerPatternConverterClass',
                'cookie' => 'LoggerPatternConverterCookie',
                'd' => 'LoggerPatternConverterDate',
                'date' => 'LoggerPatternConverterDate',
                'e' => 'LoggerPatternConverterEnvironment',
                'env' => 'LoggerPatternConverterEnvironment',
                'ex' => 'LoggerPatternConverterThrowable',
                'exception' => 'LoggerPatternConverterThrowable',
                'throwable' => 'LoggerPatternConverterThrowable',
                'F' => 'LoggerPatternConverterFile',
                'file' => 'LoggerPatternConverterFile',
                'l' => 'LoggerPatternConverterLocation',
                'location' => 'LoggerPatternConverterLocation',
                'L' => 'LoggerPatternConverterLine',
                'line' => 'LoggerPatternConverterLine',
                'm' => 'LoggerPatternConverterMessage',
                'msg' => 'LoggerPatternConverterMessage',
                'message' => 'LoggerPatternConverterMessage',
                'M' => 'LoggerPatternConverterMethod',
                'method' => 'LoggerPatternConverterMethod',
                'n' => 'LoggerPatternConverterNewLine',
                'newline' => 'LoggerPatternConverterNewLine',
                'p' => 'LoggerPatternConverterLevel',
                'le' => 'LoggerPatternConverterLevel',
                'level' => 'LoggerPatternConverterLevel',
                'r' => 'LoggerPatternConverterRelative',
                'relative' => 'LoggerPatternConverterRelative',
                'req' => 'LoggerPatternConverterRequest',
                'request' => 'LoggerPatternConverterRequest',
                's' => 'LoggerPatternConverterServer',
                'server' => 'LoggerPatternConverterServer',
                'ses' => 'LoggerPatternConverterSession',
                'session' => 'LoggerPatternConverterSession',
                'sid' => 'LoggerPatternConverterSessionID',
                'sessionid' => 'LoggerPatternConverterSessionID',
                't' => 'LoggerPatternConverterProcess',
                'pid' => 'LoggerPatternConverterProcess',
                'process' => 'LoggerPatternConverterProcess',
                'x' => 'LoggerPatternConverterNDC',
                'ndc' => 'LoggerPatternConverterNDC',
                'X' => 'LoggerPatternConverterMDC',
                'mdc' => 'LoggerPatternConverterMDC',
              ),
               'head' => 
              LoggerPatternConverterDate::__set_state(array(
                 'format' => 'c',
                 'specials' => 
                array (
                  'ISO8601' => 'c',
                  'ABSOLUTE' => 'H:i:s',
                  'DATE' => 'd M Y H:i:s.u',
                ),
                 'useLocalDate' => false,
                 'next' => 
                LoggerPatternConverterLiteral::__set_state(array(
                   'literalValue' => ' ',
                   'next' => 
                  LoggerPatternConverterLevel::__set_state(array(
                     'next' => 
                    LoggerPatternConverterLiteral::__set_state(array(
                       'literalValue' => ' ',
                       'next' => 
                      LoggerPatternConverterLogger::__set_state(array(
                         'length' => NULL,
                         'cache' => 
                        array (
                          'VT' => 'VT',
                          'user' => 'user',
                        ),
                         'next' => 
                        LoggerPatternConverterLiteral::__set_state(array(
                           'literalValue' => ' ',
                           'next' => 
                          LoggerPatternConverterMessage::__set_state(array(
                             'next' => 
                            LoggerPatternConverterNewLine::__set_state(array(
                               'next' => NULL,
                               'formattingInfo' => 
                              LoggerFormattingInfo::__set_state(array(
                                 'min' => 0,
                                 'max' => 9223372036854775807,
                                 'padLeft' => true,
                                 'trimLeft' => false,
                              )),
                               'option' => '',
                            )),
                             'formattingInfo' => 
                            LoggerFormattingInfo::__set_state(array(
                               'min' => 0,
                               'max' => 9223372036854775807,
                               'padLeft' => true,
                               'trimLeft' => false,
                            )),
                             'option' => '',
                          )),
                           'formattingInfo' => NULL,
                           'option' => NULL,
                        )),
                         'formattingInfo' => 
                        LoggerFormattingInfo::__set_state(array(
                           'min' => 0,
                           'max' => 9223372036854775807,
                           'padLeft' => true,
                           'trimLeft' => false,
                        )),
                         'option' => '',
                      )),
                       'formattingInfo' => NULL,
                       'option' => NULL,
                    )),
                     'formattingInfo' => 
                    LoggerFormattingInfo::__set_state(array(
                       'min' => 5,
                       'max' => 9223372036854775807,
                       'padLeft' => false,
                       'trimLeft' => false,
                    )),
                     'option' => '',
                  )),
                   'formattingInfo' => NULL,
                   'option' => NULL,
                )),
                 'formattingInfo' => 
                LoggerFormattingInfo::__set_state(array(
                   'min' => 0,
                   'max' => 9223372036854775807,
                   'padLeft' => true,
                   'trimLeft' => false,
                )),
                 'option' => '',
              )),
            )),
             'name' => 'A1',
             'threshold' => NULL,
             'requiresLayout' => true,
          )),
        ),
      )),
       'appenders' => 
      array (
      ),
    )),
     'column_fields' => 
    TrackableObject::__set_state(array(
       'storage' => 
      array (
        'pt_origen' => 'Leonardo rivero',
        'pt_tema' => 'Trabajadores',
        'pt_grupo' => '64',
        'pt_temavtiger' => '768',
        'CreatedTime' => '2022-12-06 11:39:32',
        'ModifiedTime' => '2022-12-08 15:42:19',
        'pt_motivo' => 'Vtiger EMPRESA (corto)',
        'tags' => '',
        'record_id' => '1406',
        'record_module' => 'Parametrizaciones',
        'id' => '1406',
      ),
       'trackingEnabled' => true,
       'tracking' => true,
       'changed' => 
      array (
        0 => 'id',
      ),
    )),
     'IsCustomModule' => true,
     'sortby_fields' => 
    array (
    ),
     'required_fields' => 
    array (
      'assigned_user_id' => 1,
    ),
     'special_functions' => 
    array (
      0 => 'set_import_assigned_user',
    ),
     'ownedby' => NULL,
     'recordSource' => 'CRM',
     '__inactive_fields_filtered' => false,
     'moduleName' => 'Parametrizaciones',
     'id' => '1406',
  )),
))
params => array (
  'tema' => false,
  'motivo' => 'Vtiger EMPRESA (corto)',
  'origen' => 'Leonardo Rivero',
)
rs => array (
  0 => '1406',
  'crmid' => '1406',
)
models => Parametrizaciones_Record_Model::__set_state(array(
   'module' => 
  Vtiger_Module_Model::__set_state(array(
     'blocks' => false,
     'nameFields' => false,
     'moduleMeta' => false,
     'fields' => false,
     'relations' => NULL,
     'id' => '63',
     'name' => 'Parametrizaciones',
     'label' => 'Parametrizaciones',
     'version' => '0',
     'minversion' => false,
     'maxversion' => false,
     'presence' => '0',
     'ownedby' => '0',
     'tabsequence' => '-1',
     'parent' => 'TOOLS',
     'customized' => '1',
     'trial' => '0',
     'isentitytype' => '1',
     'entityidcolumn' => false,
     'entityidfield' => false,
     'basetable' => false,
     'basetableid' => false,
     'customtable' => false,
     'grouptable' => false,
     'fieldtable' => false,
     'allowDuplicates' => '1',
     'isSyncable' => '0',
     'syncActionForDuplicate' => '1',
     'source' => 'custom',
  )),
   'valueMap' => 
  TrackableObject::__set_state(array(
     'storage' => 
    array (
      'pt_origen' => 'Leonardo rivero',
      'pt_tema' => 'Trabajadores',
      'pt_grupo' => '64',
      'pt_temavtiger' => '768',
      'CreatedTime' => '2022-12-06 11:39:32',
      'ModifiedTime' => '2022-12-08 15:42:19',
      'pt_motivo' => 'Vtiger EMPRESA (corto)',
      'tags' => '',
      'record_id' => '1406',
      'record_module' => 'Parametrizaciones',
      'id' => '1406',
    ),
     'trackingEnabled' => true,
     'tracking' => true,
     'changed' => 
    array (
      0 => 'id',
    ),
  )),
   'entity' => 
  Parametrizaciones::__set_state(array(
     'table_name' => 'vtiger_parametrizaciones',
     'table_index' => 'parametrizacionesid',
     'customFieldTable' => 
    array (
      0 => 'vtiger_parametrizacionescf',
      1 => 'parametrizacionesid',
    ),
     'tab_name' => 
    array (
      0 => 'vtiger_crmentity',
      1 => 'vtiger_parametrizaciones',
      2 => 'vtiger_parametrizacionescf',
      3 => 'vtiger_crmentity_user_field',
    ),
     'tab_name_index' => 
    array (
      'vtiger_crmentity' => 'crmid',
      'vtiger_parametrizaciones' => 'parametrizacionesid',
      'vtiger_parametrizacionescf' => 'parametrizacionesid',
      'vtiger_crmentity_user_field' => 'recordid',
    ),
     'list_fields' => 
    array (
      'parametrizacionesid' => 
      array (
        0 => 'parametrizaciones',
        1 => '<entitycolumn>',
      ),
      'Assigned To' => 
      array (
        0 => 'crmentity',
        1 => 'smownerid',
      ),
    ),
     'list_fields_name' => 
    array (
      'parametrizacionesid' => 'parametrizacionesid',
      'Assigned To' => 'assigned_user_id',
    ),
     'list_link_field' => 'parametrizacionesid',
     'search_fields' => 
    array (
      'parametrizacionesid' => 
      array (
        0 => 'parametrizaciones',
        1 => '<entitycolumn>',
      ),
      'Assigned To' => 
      array (
        0 => 'vtiger_crmentity',
        1 => 'assigned_user_id',
      ),
    ),
     'search_fields_name' => 
    array (
      'parametrizacionesid' => 'parametrizacionesid',
      'Assigned To' => 'assigned_user_id',
    ),
     'popup_fields' => 
    array (
      0 => 'parametrizacionesid',
    ),
     'def_basicsearch_col' => 'parametrizacionesid',
     'def_detailview_recname' => 'parametrizacionesid',
     'mandatory_fields' => 
    array (
      0 => 'parametrizacionesid',
      1 => 'assigned_user_id',
    ),
     'default_order_by' => 'parametrizacionesid',
     'default_sort_order' => 'ASC',
     'db' => 
    PearDatabase::__set_state(array(
       'database' => 
      ADODB_mysqli::__set_state(array(
         'databaseType' => 'mysqli',
         'dataProvider' => 'mysql',
         'hasInsertID' => true,
         'hasAffectedRows' => true,
         'metaTablesSQL' => 'SELECT
			TABLE_NAME,
			CASE WHEN TABLE_TYPE = \'VIEW\' THEN \'V\' ELSE \'T\' END
		FROM INFORMATION_SCHEMA.TABLES
		WHERE TABLE_SCHEMA=',
         'metaColumnsSQL' => 'SHOW COLUMNS FROM `%s`',
         'fmtTimeStamp' => '\'Y-m-d H:i:s\'',
         'hasLimit' => true,
         'hasMoveFirst' => true,
         'hasGenID' => true,
         'isoDates' => true,
         'sysDate' => 'CURDATE()',
         'sysTimeStamp' => 'NOW()',
         'hasTransactions' => true,
         'forceNewConnect' => false,
         'poorAffectedRows' => true,
         'clientFlags' => 0,
         'substr' => 'substring',
         'port' => '3306',
         'socket' => '',
         '_bindInputArray' => false,
         'nameQuote' => '`',
         'optionFlags' => 
        array (
          0 => 
          array (
            0 => 5,
            1 => 0,
          ),
          1 => 
          array (
            0 => 8,
            1 => true,
          ),
        ),
         'arrayClass' => 'ADORecordSet_array_mysqli',
         'multiQuery' => false,
         '_genIDSQL' => 'update %s set id=LAST_INSERT_ID(id+1);',
         '_genSeqSQL' => 'create table if not exists %s (id int not null)',
         '_genSeqCountSQL' => 'select count(*) from %s',
         '_genSeq2SQL' => 'insert into %s values (%s)',
         '_dropSeqSQL' => 'drop table if exists %s',
         'database' => 'bps2',
         'host' => 'localhost',
         'user' => 'root',
         'password' => '',
         'debug' => false,
         'maxblobsize' => 262144,
         'concat_operator' => '+',
         'length' => 'length',
         'random' => 'rand()',
         'upperCase' => 'upper',
         'fmtDate' => '\'Y-m-d\'',
         'true' => '1',
         'false' => '0',
         'replaceQuote' => '\\\'',
         'charSet' => false,
         'metaDatabasesSQL' => '',
         'uniqueOrderBy' => false,
         'emptyDate' => '&nbsp;',
         'emptyTimeStamp' => '&nbsp;',
         'lastInsID' => false,
         'hasTop' => false,
         'readOnly' => false,
         'genID' => 0,
         'raiseErrorFn' => false,
         'cacheSecs' => 3600,
         'memCache' => false,
         'memCacheHost' => NULL,
         'memCachePort' => 11211,
         'memCacheCompress' => false,
         'sysUTimeStamp' => false,
         'noNullStrings' => false,
         'numCacheHits' => 0,
         'numCacheMisses' => 0,
         'pageExecuteCountRows' => true,
         'uniqueSort' => false,
         'leftOuter' => false,
         'rightOuter' => false,
         'ansiOuter' => false,
         'autoRollback' => false,
         'fnExecute' => false,
         'fnCacheExecute' => false,
         'blobEncodeType' => false,
         'rsPrefix' => 'ADORecordSet_',
         'autoCommit' => true,
         'transOff' => 0,
         'transCnt' => 0,
         'fetchMode' => false,
         'null2null' => 'null',
         'bulkBind' => false,
         '_oldRaiseFn' => false,
         '_transOK' => NULL,
         '_connectionID' => 
        mysqli::__set_state(array(
           'affected_rows' => NULL,
           'client_info' => NULL,
           'client_version' => NULL,
           'connect_errno' => NULL,
           'connect_error' => NULL,
           'errno' => NULL,
           'error' => NULL,
           'error_list' => NULL,
           'field_count' => NULL,
           'host_info' => NULL,
           'info' => NULL,
           'insert_id' => NULL,
           'server_info' => NULL,
           'server_version' => NULL,
           'sqlstate' => NULL,
           'protocol_version' => NULL,
           'thread_id' => NULL,
           'warning_count' => NULL,
        )),
         '_errorMsg' => false,
         '_errorCode' => false,
         '_queryID' => 
        mysqli_result::__set_state(array(
           'current_field' => NULL,
           'field_count' => NULL,
           'lengths' => NULL,
           'num_rows' => NULL,
           'type' => NULL,
        )),
         '_isPersistentConnection' => true,
         '_evalAll' => false,
         '_affected' => false,
         '_logsql' => false,
         '_transmode' => '',
         'connectionParameters' => 
        array (
        ),
         'databaseName' => 'bps2',
      )),
       'dieOnError' => false,
       'dbType' => 'mysqli',
       'dbHostName' => 'localhost:3306',
       'dbName' => 'bps2',
       'dbOptions' => 
      array (
        'persistent' => true,
        'autofree' => false,
        'debug' => 0,
        'seqname_format' => '%s_seq',
        'portability' => 0,
        'ssl' => false,
      ),
       'userName' => 'root',
       'userPassword' => '',
       'query_time' => 0,
       'log' => 
      Logger::__set_state(array(
         'additive' => true,
         'fqcn' => 'Logger',
         'level' => NULL,
         'name' => 'PearDatabase_',
         'parent' => 
        LoggerRoot::__set_state(array(
           'additive' => true,
           'fqcn' => 'Logger',
           'level' => 
          LoggerLevel::__set_state(array(
             'level' => 10000,
             'levelStr' => 'DEBUG',
             'syslogEquivalent' => 6,
          )),
           'name' => 'root',
           'parent' => NULL,
           'appenders' => 
          array (
            'A1' => 
            LoggerAppenderRollingFile::__set_state(array(
               'maxFileSize' => 10485760,
               'maxBackupIndex' => 10,
               'compress' => false,
               'clearConditional' => true,
               'locking' => true,
               'append' => true,
               'file' => 'logs/vtigercrm.log',
               'fp' => NULL,
               'closed' => false,
               'filter' => NULL,
               'layout' => 
              LoggerLayoutPattern::__set_state(array(
                 'pattern' => '%date %-5level %logger %message%newline',
                 'converterMap' => 
                array (
                  'c' => 'LoggerPatternConverterLogger',
                  'lo' => 'LoggerPatternConverterLogger',
                  'logger' => 'LoggerPatternConverterLogger',
                  'C' => 'LoggerPatternConverterClass',
                  'class' => 'LoggerPatternConverterClass',
                  'cookie' => 'LoggerPatternConverterCookie',
                  'd' => 'LoggerPatternConverterDate',
                  'date' => 'LoggerPatternConverterDate',
                  'e' => 'LoggerPatternConverterEnvironment',
                  'env' => 'LoggerPatternConverterEnvironment',
                  'ex' => 'LoggerPatternConverterThrowable',
                  'exception' => 'LoggerPatternConverterThrowable',
                  'throwable' => 'LoggerPatternConverterThrowable',
                  'F' => 'LoggerPatternConverterFile',
                  'file' => 'LoggerPatternConverterFile',
                  'l' => 'LoggerPatternConverterLocation',
                  'location' => 'LoggerPatternConverterLocation',
                  'L' => 'LoggerPatternConverterLine',
                  'line' => 'LoggerPatternConverterLine',
                  'm' => 'LoggerPatternConverterMessage',
                  'msg' => 'LoggerPatternConverterMessage',
                  'message' => 'LoggerPatternConverterMessage',
                  'M' => 'LoggerPatternConverterMethod',
                  'method' => 'LoggerPatternConverterMethod',
                  'n' => 'LoggerPatternConverterNewLine',
                  'newline' => 'LoggerPatternConverterNewLine',
                  'p' => 'LoggerPatternConverterLevel',
                  'le' => 'LoggerPatternConverterLevel',
                  'level' => 'LoggerPatternConverterLevel',
                  'r' => 'LoggerPatternConverterRelative',
                  'relative' => 'LoggerPatternConverterRelative',
                  'req' => 'LoggerPatternConverterRequest',
                  'request' => 'LoggerPatternConverterRequest',
                  's' => 'LoggerPatternConverterServer',
                  'server' => 'LoggerPatternConverterServer',
                  'ses' => 'LoggerPatternConverterSession',
                  'session' => 'LoggerPatternConverterSession',
                  'sid' => 'LoggerPatternConverterSessionID',
                  'sessionid' => 'LoggerPatternConverterSessionID',
                  't' => 'LoggerPatternConverterProcess',
                  'pid' => 'LoggerPatternConverterProcess',
                  'process' => 'LoggerPatternConverterProcess',
                  'x' => 'LoggerPatternConverterNDC',
                  'ndc' => 'LoggerPatternConverterNDC',
                  'X' => 'LoggerPatternConverterMDC',
                  'mdc' => 'LoggerPatternConverterMDC',
                ),
                 'head' => 
                LoggerPatternConverterDate::__set_state(array(
                   'format' => 'c',
                   'specials' => 
                  array (
                    'ISO8601' => 'c',
                    'ABSOLUTE' => 'H:i:s',
                    'DATE' => 'd M Y H:i:s.u',
                  ),
                   'useLocalDate' => false,
                   'next' => 
                  LoggerPatternConverterLiteral::__set_state(array(
                     'literalValue' => ' ',
                     'next' => 
                    LoggerPatternConverterLevel::__set_state(array(
                       'next' => 
                      LoggerPatternConverterLiteral::__set_state(array(
                         'literalValue' => ' ',
                         'next' => 
                        LoggerPatternConverterLogger::__set_state(array(
                           'length' => NULL,
                           'cache' => 
                          array (
                            'VT' => 'VT',
                            'user' => 'user',
                          ),
                           'next' => 
                          LoggerPatternConverterLiteral::__set_state(array(
                             'literalValue' => ' ',
                             'next' => 
                            LoggerPatternConverterMessage::__set_state(array(
                               'next' => 
                              LoggerPatternConverterNewLine::__set_state(array(
                                 'next' => NULL,
                                 'formattingInfo' => 
                                LoggerFormattingInfo::__set_state(array(
                                   'min' => 0,
                                   'max' => 9223372036854775807,
                                   'padLeft' => true,
                                   'trimLeft' => false,
                                )),
                                 'option' => '',
                              )),
                               'formattingInfo' => 
                              LoggerFormattingInfo::__set_state(array(
                                 'min' => 0,
                                 'max' => 9223372036854775807,
                                 'padLeft' => true,
                                 'trimLeft' => false,
                              )),
                               'option' => '',
                            )),
                             'formattingInfo' => NULL,
                             'option' => NULL,
                          )),
                           'formattingInfo' => 
                          LoggerFormattingInfo::__set_state(array(
                             'min' => 0,
                             'max' => 9223372036854775807,
                             'padLeft' => true,
                             'trimLeft' => false,
                          )),
                           'option' => '',
                        )),
                         'formattingInfo' => NULL,
                         'option' => NULL,
                      )),
                       'formattingInfo' => 
                      LoggerFormattingInfo::__set_state(array(
                         'min' => 5,
                         'max' => 9223372036854775807,
                         'padLeft' => false,
                         'trimLeft' => false,
                      )),
                       'option' => '',
                    )),
                     'formattingInfo' => NULL,
                     'option' => NULL,
                  )),
                   'formattingInfo' => 
                  LoggerFormattingInfo::__set_state(array(
                     'min' => 0,
                     'max' => 9223372036854775807,
                     'padLeft' => true,
                     'trimLeft' => false,
                  )),
                   'option' => '',
                )),
              )),
               'name' => 'A1',
               'threshold' => NULL,
               'requiresLayout' => true,
            )),
          ),
        )),
         'appenders' => 
        array (
        ),
      )),
       'lastmysqlrow' => -1,
       'enableSQLlog' => false,
       'continueInstallOnError' => true,
       'avoidPreparedSql' => false,
       'isdb_default_utf8_charset' => true,
       'req_flist' => NULL,
       'logSqlTimingID' => false,
    )),
     'log' => 
    Logger::__set_state(array(
       'additive' => true,
       'fqcn' => 'Logger',
       'level' => NULL,
       'name' => 'VT',
       'parent' => 
      LoggerRoot::__set_state(array(
         'additive' => true,
         'fqcn' => 'Logger',
         'level' => 
        LoggerLevel::__set_state(array(
           'level' => 10000,
           'levelStr' => 'DEBUG',
           'syslogEquivalent' => 6,
        )),
         'name' => 'root',
         'parent' => NULL,
         'appenders' => 
        array (
          'A1' => 
          LoggerAppenderRollingFile::__set_state(array(
             'maxFileSize' => 10485760,
             'maxBackupIndex' => 10,
             'compress' => false,
             'clearConditional' => true,
             'locking' => true,
             'append' => true,
             'file' => 'logs/vtigercrm.log',
             'fp' => NULL,
             'closed' => false,
             'filter' => NULL,
             'layout' => 
            LoggerLayoutPattern::__set_state(array(
               'pattern' => '%date %-5level %logger %message%newline',
               'converterMap' => 
              array (
                'c' => 'LoggerPatternConverterLogger',
                'lo' => 'LoggerPatternConverterLogger',
                'logger' => 'LoggerPatternConverterLogger',
                'C' => 'LoggerPatternConverterClass',
                'class' => 'LoggerPatternConverterClass',
                'cookie' => 'LoggerPatternConverterCookie',
                'd' => 'LoggerPatternConverterDate',
                'date' => 'LoggerPatternConverterDate',
                'e' => 'LoggerPatternConverterEnvironment',
                'env' => 'LoggerPatternConverterEnvironment',
                'ex' => 'LoggerPatternConverterThrowable',
                'exception' => 'LoggerPatternConverterThrowable',
                'throwable' => 'LoggerPatternConverterThrowable',
                'F' => 'LoggerPatternConverterFile',
                'file' => 'LoggerPatternConverterFile',
                'l' => 'LoggerPatternConverterLocation',
                'location' => 'LoggerPatternConverterLocation',
                'L' => 'LoggerPatternConverterLine',
                'line' => 'LoggerPatternConverterLine',
                'm' => 'LoggerPatternConverterMessage',
                'msg' => 'LoggerPatternConverterMessage',
                'message' => 'LoggerPatternConverterMessage',
                'M' => 'LoggerPatternConverterMethod',
                'method' => 'LoggerPatternConverterMethod',
                'n' => 'LoggerPatternConverterNewLine',
                'newline' => 'LoggerPatternConverterNewLine',
                'p' => 'LoggerPatternConverterLevel',
                'le' => 'LoggerPatternConverterLevel',
                'level' => 'LoggerPatternConverterLevel',
                'r' => 'LoggerPatternConverterRelative',
                'relative' => 'LoggerPatternConverterRelative',
                'req' => 'LoggerPatternConverterRequest',
                'request' => 'LoggerPatternConverterRequest',
                's' => 'LoggerPatternConverterServer',
                'server' => 'LoggerPatternConverterServer',
                'ses' => 'LoggerPatternConverterSession',
                'session' => 'LoggerPatternConverterSession',
                'sid' => 'LoggerPatternConverterSessionID',
                'sessionid' => 'LoggerPatternConverterSessionID',
                't' => 'LoggerPatternConverterProcess',
                'pid' => 'LoggerPatternConverterProcess',
                'process' => 'LoggerPatternConverterProcess',
                'x' => 'LoggerPatternConverterNDC',
                'ndc' => 'LoggerPatternConverterNDC',
                'X' => 'LoggerPatternConverterMDC',
                'mdc' => 'LoggerPatternConverterMDC',
              ),
               'head' => 
              LoggerPatternConverterDate::__set_state(array(
                 'format' => 'c',
                 'specials' => 
                array (
                  'ISO8601' => 'c',
                  'ABSOLUTE' => 'H:i:s',
                  'DATE' => 'd M Y H:i:s.u',
                ),
                 'useLocalDate' => false,
                 'next' => 
                LoggerPatternConverterLiteral::__set_state(array(
                   'literalValue' => ' ',
                   'next' => 
                  LoggerPatternConverterLevel::__set_state(array(
                     'next' => 
                    LoggerPatternConverterLiteral::__set_state(array(
                       'literalValue' => ' ',
                       'next' => 
                      LoggerPatternConverterLogger::__set_state(array(
                         'length' => NULL,
                         'cache' => 
                        array (
                          'VT' => 'VT',
                          'user' => 'user',
                        ),
                         'next' => 
                        LoggerPatternConverterLiteral::__set_state(array(
                           'literalValue' => ' ',
                           'next' => 
                          LoggerPatternConverterMessage::__set_state(array(
                             'next' => 
                            LoggerPatternConverterNewLine::__set_state(array(
                               'next' => NULL,
                               'formattingInfo' => 
                              LoggerFormattingInfo::__set_state(array(
                                 'min' => 0,
                                 'max' => 9223372036854775807,
                                 'padLeft' => true,
                                 'trimLeft' => false,
                              )),
                               'option' => '',
                            )),
                             'formattingInfo' => 
                            LoggerFormattingInfo::__set_state(array(
                               'min' => 0,
                               'max' => 9223372036854775807,
                               'padLeft' => true,
                               'trimLeft' => false,
                            )),
                             'option' => '',
                          )),
                           'formattingInfo' => NULL,
                           'option' => NULL,
                        )),
                         'formattingInfo' => 
                        LoggerFormattingInfo::__set_state(array(
                           'min' => 0,
                           'max' => 9223372036854775807,
                           'padLeft' => true,
                           'trimLeft' => false,
                        )),
                         'option' => '',
                      )),
                       'formattingInfo' => NULL,
                       'option' => NULL,
                    )),
                     'formattingInfo' => 
                    LoggerFormattingInfo::__set_state(array(
                       'min' => 5,
                       'max' => 9223372036854775807,
                       'padLeft' => false,
                       'trimLeft' => false,
                    )),
                     'option' => '',
                  )),
                   'formattingInfo' => NULL,
                   'option' => NULL,
                )),
                 'formattingInfo' => 
                LoggerFormattingInfo::__set_state(array(
                   'min' => 0,
                   'max' => 9223372036854775807,
                   'padLeft' => true,
                   'trimLeft' => false,
                )),
                 'option' => '',
              )),
            )),
             'name' => 'A1',
             'threshold' => NULL,
             'requiresLayout' => true,
          )),
        ),
      )),
       'appenders' => 
      array (
      ),
    )),
     'column_fields' => 
    TrackableObject::__set_state(array(
       'storage' => 
      array (
        'pt_origen' => 'Leonardo rivero',
        'pt_tema' => 'Trabajadores',
        'pt_grupo' => '64',
        'pt_temavtiger' => '768',
        'CreatedTime' => '2022-12-06 11:39:32',
        'ModifiedTime' => '2022-12-08 15:42:19',
        'pt_motivo' => 'Vtiger EMPRESA (corto)',
        'tags' => '',
        'record_id' => '1406',
        'record_module' => 'Parametrizaciones',
        'id' => '1406',
      ),
       'trackingEnabled' => true,
       'tracking' => true,
       'changed' => 
      array (
        0 => 'id',
      ),
    )),
     'IsCustomModule' => true,
     'sortby_fields' => 
    array (
    ),
     'required_fields' => 
    array (
      'assigned_user_id' => 1,
    ),
     'special_functions' => 
    array (
      0 => 'set_import_assigned_user',
    ),
     'ownedby' => NULL,
     'recordSource' => 'CRM',
     '__inactive_fields_filtered' => false,
     'moduleName' => 'Parametrizaciones',
     'id' => '1406',
  )),
))
params => array (
  'tema' => false,
  'motivo' => 'Vtiger EMPRESA (corto)',
  'origen' => 'Leonardo Rivero',
)
rs => array (
  0 => '1406',
  'crmid' => '1406',
)
models => Parametrizaciones_Record_Model::__set_state(array(
   'module' => 
  Vtiger_Module_Model::__set_state(array(
     'blocks' => false,
     'nameFields' => false,
     'moduleMeta' => false,
     'fields' => false,
     'relations' => NULL,
     'id' => '63',
     'name' => 'Parametrizaciones',
     'label' => 'Parametrizaciones',
     'version' => '0',
     'minversion' => false,
     'maxversion' => false,
     'presence' => '0',
     'ownedby' => '0',
     'tabsequence' => '-1',
     'parent' => 'TOOLS',
     'customized' => '1',
     'trial' => '0',
     'isentitytype' => '1',
     'entityidcolumn' => false,
     'entityidfield' => false,
     'basetable' => false,
     'basetableid' => false,
     'customtable' => false,
     'grouptable' => false,
     'fieldtable' => false,
     'allowDuplicates' => '1',
     'isSyncable' => '0',
     'syncActionForDuplicate' => '1',
     'source' => 'custom',
  )),
   'valueMap' => 
  TrackableObject::__set_state(array(
     'storage' => 
    array (
      'pt_origen' => 'Leonardo rivero',
      'pt_tema' => 'Trabajadores',
      'pt_grupo' => '64',
      'pt_temavtiger' => '768',
      'CreatedTime' => '2022-12-06 11:39:32',
      'ModifiedTime' => '2022-12-08 15:42:19',
      'pt_motivo' => 'Vtiger EMPRESA (corto)',
      'tags' => '',
      'record_id' => '1406',
      'record_module' => 'Parametrizaciones',
      'id' => '1406',
    ),
     'trackingEnabled' => true,
     'tracking' => true,
     'changed' => 
    array (
      0 => 'id',
    ),
  )),
   'entity' => 
  Parametrizaciones::__set_state(array(
     'table_name' => 'vtiger_parametrizaciones',
     'table_index' => 'parametrizacionesid',
     'customFieldTable' => 
    array (
      0 => 'vtiger_parametrizacionescf',
      1 => 'parametrizacionesid',
    ),
     'tab_name' => 
    array (
      0 => 'vtiger_crmentity',
      1 => 'vtiger_parametrizaciones',
      2 => 'vtiger_parametrizacionescf',
      3 => 'vtiger_crmentity_user_field',
    ),
     'tab_name_index' => 
    array (
      'vtiger_crmentity' => 'crmid',
      'vtiger_parametrizaciones' => 'parametrizacionesid',
      'vtiger_parametrizacionescf' => 'parametrizacionesid',
      'vtiger_crmentity_user_field' => 'recordid',
    ),
     'list_fields' => 
    array (
      'parametrizacionesid' => 
      array (
        0 => 'parametrizaciones',
        1 => '<entitycolumn>',
      ),
      'Assigned To' => 
      array (
        0 => 'crmentity',
        1 => 'smownerid',
      ),
    ),
     'list_fields_name' => 
    array (
      'parametrizacionesid' => 'parametrizacionesid',
      'Assigned To' => 'assigned_user_id',
    ),
     'list_link_field' => 'parametrizacionesid',
     'search_fields' => 
    array (
      'parametrizacionesid' => 
      array (
        0 => 'parametrizaciones',
        1 => '<entitycolumn>',
      ),
      'Assigned To' => 
      array (
        0 => 'vtiger_crmentity',
        1 => 'assigned_user_id',
      ),
    ),
     'search_fields_name' => 
    array (
      'parametrizacionesid' => 'parametrizacionesid',
      'Assigned To' => 'assigned_user_id',
    ),
     'popup_fields' => 
    array (
      0 => 'parametrizacionesid',
    ),
     'def_basicsearch_col' => 'parametrizacionesid',
     'def_detailview_recname' => 'parametrizacionesid',
     'mandatory_fields' => 
    array (
      0 => 'parametrizacionesid',
      1 => 'assigned_user_id',
    ),
     'default_order_by' => 'parametrizacionesid',
     'default_sort_order' => 'ASC',
     'db' => 
    PearDatabase::__set_state(array(
       'database' => 
      ADODB_mysqli::__set_state(array(
         'databaseType' => 'mysqli',
         'dataProvider' => 'mysql',
         'hasInsertID' => true,
         'hasAffectedRows' => true,
         'metaTablesSQL' => 'SELECT
			TABLE_NAME,
			CASE WHEN TABLE_TYPE = \'VIEW\' THEN \'V\' ELSE \'T\' END
		FROM INFORMATION_SCHEMA.TABLES
		WHERE TABLE_SCHEMA=',
         'metaColumnsSQL' => 'SHOW COLUMNS FROM `%s`',
         'fmtTimeStamp' => '\'Y-m-d H:i:s\'',
         'hasLimit' => true,
         'hasMoveFirst' => true,
         'hasGenID' => true,
         'isoDates' => true,
         'sysDate' => 'CURDATE()',
         'sysTimeStamp' => 'NOW()',
         'hasTransactions' => true,
         'forceNewConnect' => false,
         'poorAffectedRows' => true,
         'clientFlags' => 0,
         'substr' => 'substring',
         'port' => '3306',
         'socket' => '',
         '_bindInputArray' => false,
         'nameQuote' => '`',
         'optionFlags' => 
        array (
          0 => 
          array (
            0 => 5,
            1 => 0,
          ),
          1 => 
          array (
            0 => 8,
            1 => true,
          ),
        ),
         'arrayClass' => 'ADORecordSet_array_mysqli',
         'multiQuery' => false,
         '_genIDSQL' => 'update %s set id=LAST_INSERT_ID(id+1);',
         '_genSeqSQL' => 'create table if not exists %s (id int not null)',
         '_genSeqCountSQL' => 'select count(*) from %s',
         '_genSeq2SQL' => 'insert into %s values (%s)',
         '_dropSeqSQL' => 'drop table if exists %s',
         'database' => 'bps2',
         'host' => 'localhost',
         'user' => 'root',
         'password' => '',
         'debug' => false,
         'maxblobsize' => 262144,
         'concat_operator' => '+',
         'length' => 'length',
         'random' => 'rand()',
         'upperCase' => 'upper',
         'fmtDate' => '\'Y-m-d\'',
         'true' => '1',
         'false' => '0',
         'replaceQuote' => '\\\'',
         'charSet' => false,
         'metaDatabasesSQL' => '',
         'uniqueOrderBy' => false,
         'emptyDate' => '&nbsp;',
         'emptyTimeStamp' => '&nbsp;',
         'lastInsID' => false,
         'hasTop' => false,
         'readOnly' => false,
         'genID' => 0,
         'raiseErrorFn' => false,
         'cacheSecs' => 3600,
         'memCache' => false,
         'memCacheHost' => NULL,
         'memCachePort' => 11211,
         'memCacheCompress' => false,
         'sysUTimeStamp' => false,
         'noNullStrings' => false,
         'numCacheHits' => 0,
         'numCacheMisses' => 0,
         'pageExecuteCountRows' => true,
         'uniqueSort' => false,
         'leftOuter' => false,
         'rightOuter' => false,
         'ansiOuter' => false,
         'autoRollback' => false,
         'fnExecute' => false,
         'fnCacheExecute' => false,
         'blobEncodeType' => false,
         'rsPrefix' => 'ADORecordSet_',
         'autoCommit' => true,
         'transOff' => 0,
         'transCnt' => 0,
         'fetchMode' => false,
         'null2null' => 'null',
         'bulkBind' => false,
         '_oldRaiseFn' => false,
         '_transOK' => NULL,
         '_connectionID' => 
        mysqli::__set_state(array(
           'affected_rows' => NULL,
           'client_info' => NULL,
           'client_version' => NULL,
           'connect_errno' => NULL,
           'connect_error' => NULL,
           'errno' => NULL,
           'error' => NULL,
           'error_list' => NULL,
           'field_count' => NULL,
           'host_info' => NULL,
           'info' => NULL,
           'insert_id' => NULL,
           'server_info' => NULL,
           'server_version' => NULL,
           'sqlstate' => NULL,
           'protocol_version' => NULL,
           'thread_id' => NULL,
           'warning_count' => NULL,
        )),
         '_errorMsg' => false,
         '_errorCode' => false,
         '_queryID' => 
        mysqli_result::__set_state(array(
           'current_field' => NULL,
           'field_count' => NULL,
           'lengths' => NULL,
           'num_rows' => NULL,
           'type' => NULL,
        )),
         '_isPersistentConnection' => true,
         '_evalAll' => false,
         '_affected' => false,
         '_logsql' => false,
         '_transmode' => '',
         'connectionParameters' => 
        array (
        ),
         'databaseName' => 'bps2',
      )),
       'dieOnError' => false,
       'dbType' => 'mysqli',
       'dbHostName' => 'localhost:3306',
       'dbName' => 'bps2',
       'dbOptions' => 
      array (
        'persistent' => true,
        'autofree' => false,
        'debug' => 0,
        'seqname_format' => '%s_seq',
        'portability' => 0,
        'ssl' => false,
      ),
       'userName' => 'root',
       'userPassword' => '',
       'query_time' => 0,
       'log' => 
      Logger::__set_state(array(
         'additive' => true,
         'fqcn' => 'Logger',
         'level' => NULL,
         'name' => 'PearDatabase_',
         'parent' => 
        LoggerRoot::__set_state(array(
           'additive' => true,
           'fqcn' => 'Logger',
           'level' => 
          LoggerLevel::__set_state(array(
             'level' => 10000,
             'levelStr' => 'DEBUG',
             'syslogEquivalent' => 6,
          )),
           'name' => 'root',
           'parent' => NULL,
           'appenders' => 
          array (
            'A1' => 
            LoggerAppenderRollingFile::__set_state(array(
               'maxFileSize' => 10485760,
               'maxBackupIndex' => 10,
               'compress' => false,
               'clearConditional' => true,
               'locking' => true,
               'append' => true,
               'file' => 'logs/vtigercrm.log',
               'fp' => NULL,
               'closed' => false,
               'filter' => NULL,
               'layout' => 
              LoggerLayoutPattern::__set_state(array(
                 'pattern' => '%date %-5level %logger %message%newline',
                 'converterMap' => 
                array (
                  'c' => 'LoggerPatternConverterLogger',
                  'lo' => 'LoggerPatternConverterLogger',
                  'logger' => 'LoggerPatternConverterLogger',
                  'C' => 'LoggerPatternConverterClass',
                  'class' => 'LoggerPatternConverterClass',
                  'cookie' => 'LoggerPatternConverterCookie',
                  'd' => 'LoggerPatternConverterDate',
                  'date' => 'LoggerPatternConverterDate',
                  'e' => 'LoggerPatternConverterEnvironment',
                  'env' => 'LoggerPatternConverterEnvironment',
                  'ex' => 'LoggerPatternConverterThrowable',
                  'exception' => 'LoggerPatternConverterThrowable',
                  'throwable' => 'LoggerPatternConverterThrowable',
                  'F' => 'LoggerPatternConverterFile',
                  'file' => 'LoggerPatternConverterFile',
                  'l' => 'LoggerPatternConverterLocation',
                  'location' => 'LoggerPatternConverterLocation',
                  'L' => 'LoggerPatternConverterLine',
                  'line' => 'LoggerPatternConverterLine',
                  'm' => 'LoggerPatternConverterMessage',
                  'msg' => 'LoggerPatternConverterMessage',
                  'message' => 'LoggerPatternConverterMessage',
                  'M' => 'LoggerPatternConverterMethod',
                  'method' => 'LoggerPatternConverterMethod',
                  'n' => 'LoggerPatternConverterNewLine',
                  'newline' => 'LoggerPatternConverterNewLine',
                  'p' => 'LoggerPatternConverterLevel',
                  'le' => 'LoggerPatternConverterLevel',
                  'level' => 'LoggerPatternConverterLevel',
                  'r' => 'LoggerPatternConverterRelative',
                  'relative' => 'LoggerPatternConverterRelative',
                  'req' => 'LoggerPatternConverterRequest',
                  'request' => 'LoggerPatternConverterRequest',
                  's' => 'LoggerPatternConverterServer',
                  'server' => 'LoggerPatternConverterServer',
                  'ses' => 'LoggerPatternConverterSession',
                  'session' => 'LoggerPatternConverterSession',
                  'sid' => 'LoggerPatternConverterSessionID',
                  'sessionid' => 'LoggerPatternConverterSessionID',
                  't' => 'LoggerPatternConverterProcess',
                  'pid' => 'LoggerPatternConverterProcess',
                  'process' => 'LoggerPatternConverterProcess',
                  'x' => 'LoggerPatternConverterNDC',
                  'ndc' => 'LoggerPatternConverterNDC',
                  'X' => 'LoggerPatternConverterMDC',
                  'mdc' => 'LoggerPatternConverterMDC',
                ),
                 'head' => 
                LoggerPatternConverterDate::__set_state(array(
                   'format' => 'c',
                   'specials' => 
                  array (
                    'ISO8601' => 'c',
                    'ABSOLUTE' => 'H:i:s',
                    'DATE' => 'd M Y H:i:s.u',
                  ),
                   'useLocalDate' => false,
                   'next' => 
                  LoggerPatternConverterLiteral::__set_state(array(
                     'literalValue' => ' ',
                     'next' => 
                    LoggerPatternConverterLevel::__set_state(array(
                       'next' => 
                      LoggerPatternConverterLiteral::__set_state(array(
                         'literalValue' => ' ',
                         'next' => 
                        LoggerPatternConverterLogger::__set_state(array(
                           'length' => NULL,
                           'cache' => 
                          array (
                            'VT' => 'VT',
                            'user' => 'user',
                          ),
                           'next' => 
                          LoggerPatternConverterLiteral::__set_state(array(
                             'literalValue' => ' ',
                             'next' => 
                            LoggerPatternConverterMessage::__set_state(array(
                               'next' => 
                              LoggerPatternConverterNewLine::__set_state(array(
                                 'next' => NULL,
                                 'formattingInfo' => 
                                LoggerFormattingInfo::__set_state(array(
                                   'min' => 0,
                                   'max' => 9223372036854775807,
                                   'padLeft' => true,
                                   'trimLeft' => false,
                                )),
                                 'option' => '',
                              )),
                               'formattingInfo' => 
                              LoggerFormattingInfo::__set_state(array(
                                 'min' => 0,
                                 'max' => 9223372036854775807,
                                 'padLeft' => true,
                                 'trimLeft' => false,
                              )),
                               'option' => '',
                            )),
                             'formattingInfo' => NULL,
                             'option' => NULL,
                          )),
                           'formattingInfo' => 
                          LoggerFormattingInfo::__set_state(array(
                             'min' => 0,
                             'max' => 9223372036854775807,
                             'padLeft' => true,
                             'trimLeft' => false,
                          )),
                           'option' => '',
                        )),
                         'formattingInfo' => NULL,
                         'option' => NULL,
                      )),
                       'formattingInfo' => 
                      LoggerFormattingInfo::__set_state(array(
                         'min' => 5,
                         'max' => 9223372036854775807,
                         'padLeft' => false,
                         'trimLeft' => false,
                      )),
                       'option' => '',
                    )),
                     'formattingInfo' => NULL,
                     'option' => NULL,
                  )),
                   'formattingInfo' => 
                  LoggerFormattingInfo::__set_state(array(
                     'min' => 0,
                     'max' => 9223372036854775807,
                     'padLeft' => true,
                     'trimLeft' => false,
                  )),
                   'option' => '',
                )),
              )),
               'name' => 'A1',
               'threshold' => NULL,
               'requiresLayout' => true,
            )),
          ),
        )),
         'appenders' => 
        array (
        ),
      )),
       'lastmysqlrow' => -1,
       'enableSQLlog' => false,
       'continueInstallOnError' => true,
       'avoidPreparedSql' => false,
       'isdb_default_utf8_charset' => true,
       'req_flist' => NULL,
       'logSqlTimingID' => false,
    )),
     'log' => 
    Logger::__set_state(array(
       'additive' => true,
       'fqcn' => 'Logger',
       'level' => NULL,
       'name' => 'VT',
       'parent' => 
      LoggerRoot::__set_state(array(
         'additive' => true,
         'fqcn' => 'Logger',
         'level' => 
        LoggerLevel::__set_state(array(
           'level' => 10000,
           'levelStr' => 'DEBUG',
           'syslogEquivalent' => 6,
        )),
         'name' => 'root',
         'parent' => NULL,
         'appenders' => 
        array (
          'A1' => 
          LoggerAppenderRollingFile::__set_state(array(
             'maxFileSize' => 10485760,
             'maxBackupIndex' => 10,
             'compress' => false,
             'clearConditional' => true,
             'locking' => true,
             'append' => true,
             'file' => 'logs/vtigercrm.log',
             'fp' => NULL,
             'closed' => false,
             'filter' => NULL,
             'layout' => 
            LoggerLayoutPattern::__set_state(array(
               'pattern' => '%date %-5level %logger %message%newline',
               'converterMap' => 
              array (
                'c' => 'LoggerPatternConverterLogger',
                'lo' => 'LoggerPatternConverterLogger',
                'logger' => 'LoggerPatternConverterLogger',
                'C' => 'LoggerPatternConverterClass',
                'class' => 'LoggerPatternConverterClass',
                'cookie' => 'LoggerPatternConverterCookie',
                'd' => 'LoggerPatternConverterDate',
                'date' => 'LoggerPatternConverterDate',
                'e' => 'LoggerPatternConverterEnvironment',
                'env' => 'LoggerPatternConverterEnvironment',
                'ex' => 'LoggerPatternConverterThrowable',
                'exception' => 'LoggerPatternConverterThrowable',
                'throwable' => 'LoggerPatternConverterThrowable',
                'F' => 'LoggerPatternConverterFile',
                'file' => 'LoggerPatternConverterFile',
                'l' => 'LoggerPatternConverterLocation',
                'location' => 'LoggerPatternConverterLocation',
                'L' => 'LoggerPatternConverterLine',
                'line' => 'LoggerPatternConverterLine',
                'm' => 'LoggerPatternConverterMessage',
                'msg' => 'LoggerPatternConverterMessage',
                'message' => 'LoggerPatternConverterMessage',
                'M' => 'LoggerPatternConverterMethod',
                'method' => 'LoggerPatternConverterMethod',
                'n' => 'LoggerPatternConverterNewLine',
                'newline' => 'LoggerPatternConverterNewLine',
                'p' => 'LoggerPatternConverterLevel',
                'le' => 'LoggerPatternConverterLevel',
                'level' => 'LoggerPatternConverterLevel',
                'r' => 'LoggerPatternConverterRelative',
                'relative' => 'LoggerPatternConverterRelative',
                'req' => 'LoggerPatternConverterRequest',
                'request' => 'LoggerPatternConverterRequest',
                's' => 'LoggerPatternConverterServer',
                'server' => 'LoggerPatternConverterServer',
                'ses' => 'LoggerPatternConverterSession',
                'session' => 'LoggerPatternConverterSession',
                'sid' => 'LoggerPatternConverterSessionID',
                'sessionid' => 'LoggerPatternConverterSessionID',
                't' => 'LoggerPatternConverterProcess',
                'pid' => 'LoggerPatternConverterProcess',
                'process' => 'LoggerPatternConverterProcess',
                'x' => 'LoggerPatternConverterNDC',
                'ndc' => 'LoggerPatternConverterNDC',
                'X' => 'LoggerPatternConverterMDC',
                'mdc' => 'LoggerPatternConverterMDC',
              ),
               'head' => 
              LoggerPatternConverterDate::__set_state(array(
                 'format' => 'c',
                 'specials' => 
                array (
                  'ISO8601' => 'c',
                  'ABSOLUTE' => 'H:i:s',
                  'DATE' => 'd M Y H:i:s.u',
                ),
                 'useLocalDate' => false,
                 'next' => 
                LoggerPatternConverterLiteral::__set_state(array(
                   'literalValue' => ' ',
                   'next' => 
                  LoggerPatternConverterLevel::__set_state(array(
                     'next' => 
                    LoggerPatternConverterLiteral::__set_state(array(
                       'literalValue' => ' ',
                       'next' => 
                      LoggerPatternConverterLogger::__set_state(array(
                         'length' => NULL,
                         'cache' => 
                        array (
                          'VT' => 'VT',
                          'user' => 'user',
                        ),
                         'next' => 
                        LoggerPatternConverterLiteral::__set_state(array(
                           'literalValue' => ' ',
                           'next' => 
                          LoggerPatternConverterMessage::__set_state(array(
                             'next' => 
                            LoggerPatternConverterNewLine::__set_state(array(
                               'next' => NULL,
                               'formattingInfo' => 
                              LoggerFormattingInfo::__set_state(array(
                                 'min' => 0,
                                 'max' => 9223372036854775807,
                                 'padLeft' => true,
                                 'trimLeft' => false,
                              )),
                               'option' => '',
                            )),
                             'formattingInfo' => 
                            LoggerFormattingInfo::__set_state(array(
                               'min' => 0,
                               'max' => 9223372036854775807,
                               'padLeft' => true,
                               'trimLeft' => false,
                            )),
                             'option' => '',
                          )),
                           'formattingInfo' => NULL,
                           'option' => NULL,
                        )),
                         'formattingInfo' => 
                        LoggerFormattingInfo::__set_state(array(
                           'min' => 0,
                           'max' => 9223372036854775807,
                           'padLeft' => true,
                           'trimLeft' => false,
                        )),
                         'option' => '',
                      )),
                       'formattingInfo' => NULL,
                       'option' => NULL,
                    )),
                     'formattingInfo' => 
                    LoggerFormattingInfo::__set_state(array(
                       'min' => 5,
                       'max' => 9223372036854775807,
                       'padLeft' => false,
                       'trimLeft' => false,
                    )),
                     'option' => '',
                  )),
                   'formattingInfo' => NULL,
                   'option' => NULL,
                )),
                 'formattingInfo' => 
                LoggerFormattingInfo::__set_state(array(
                   'min' => 0,
                   'max' => 9223372036854775807,
                   'padLeft' => true,
                   'trimLeft' => false,
                )),
                 'option' => '',
              )),
            )),
             'name' => 'A1',
             'threshold' => NULL,
             'requiresLayout' => true,
          )),
        ),
      )),
       'appenders' => 
      array (
      ),
    )),
     'column_fields' => 
    TrackableObject::__set_state(array(
       'storage' => 
      array (
        'pt_origen' => 'Leonardo rivero',
        'pt_tema' => 'Trabajadores',
        'pt_grupo' => '64',
        'pt_temavtiger' => '768',
        'CreatedTime' => '2022-12-06 11:39:32',
        'ModifiedTime' => '2022-12-08 15:42:19',
        'pt_motivo' => 'Vtiger EMPRESA (corto)',
        'tags' => '',
        'record_id' => '1406',
        'record_module' => 'Parametrizaciones',
        'id' => '1406',
      ),
       'trackingEnabled' => true,
       'tracking' => true,
       'changed' => 
      array (
        0 => 'id',
      ),
    )),
     'IsCustomModule' => true,
     'sortby_fields' => 
    array (
    ),
     'required_fields' => 
    array (
      'assigned_user_id' => 1,
    ),
     'special_functions' => 
    array (
      0 => 'set_import_assigned_user',
    ),
     'ownedby' => NULL,
     'recordSource' => 'CRM',
     '__inactive_fields_filtered' => false,
     'moduleName' => 'Parametrizaciones',
     'id' => '1406',
  )),
))
params => array (
  'tema' => false,
  'motivo' => 'Vtiger EMPRESA (corto)',
  'origen' => 'Leonardo Rivero',
)
rs => array (
  0 => '1406',
  'crmid' => '1406',
)
models => Parametrizaciones_Record_Model::__set_state(array(
   'module' => 
  Vtiger_Module_Model::__set_state(array(
     'blocks' => false,
     'nameFields' => false,
     'moduleMeta' => false,
     'fields' => false,
     'relations' => NULL,
     'id' => '63',
     'name' => 'Parametrizaciones',
     'label' => 'Parametrizaciones',
     'version' => '0',
     'minversion' => false,
     'maxversion' => false,
     'presence' => '0',
     'ownedby' => '0',
     'tabsequence' => '-1',
     'parent' => 'TOOLS',
     'customized' => '1',
     'trial' => '0',
     'isentitytype' => '1',
     'entityidcolumn' => false,
     'entityidfield' => false,
     'basetable' => false,
     'basetableid' => false,
     'customtable' => false,
     'grouptable' => false,
     'fieldtable' => false,
     'allowDuplicates' => '1',
     'isSyncable' => '0',
     'syncActionForDuplicate' => '1',
     'source' => 'custom',
  )),
   'valueMap' => 
  TrackableObject::__set_state(array(
     'storage' => 
    array (
      'pt_origen' => 'Leonardo rivero',
      'pt_tema' => 'Trabajadores',
      'pt_grupo' => '64',
      'pt_temavtiger' => '768',
      'CreatedTime' => '2022-12-06 11:39:32',
      'ModifiedTime' => '2022-12-08 15:42:19',
      'pt_motivo' => 'Vtiger EMPRESA (corto)',
      'tags' => '',
      'record_id' => '1406',
      'record_module' => 'Parametrizaciones',
      'id' => '1406',
    ),
     'trackingEnabled' => true,
     'tracking' => true,
     'changed' => 
    array (
      0 => 'id',
    ),
  )),
   'entity' => 
  Parametrizaciones::__set_state(array(
     'table_name' => 'vtiger_parametrizaciones',
     'table_index' => 'parametrizacionesid',
     'customFieldTable' => 
    array (
      0 => 'vtiger_parametrizacionescf',
      1 => 'parametrizacionesid',
    ),
     'tab_name' => 
    array (
      0 => 'vtiger_crmentity',
      1 => 'vtiger_parametrizaciones',
      2 => 'vtiger_parametrizacionescf',
      3 => 'vtiger_crmentity_user_field',
    ),
     'tab_name_index' => 
    array (
      'vtiger_crmentity' => 'crmid',
      'vtiger_parametrizaciones' => 'parametrizacionesid',
      'vtiger_parametrizacionescf' => 'parametrizacionesid',
      'vtiger_crmentity_user_field' => 'recordid',
    ),
     'list_fields' => 
    array (
      'parametrizacionesid' => 
      array (
        0 => 'parametrizaciones',
        1 => '<entitycolumn>',
      ),
      'Assigned To' => 
      array (
        0 => 'crmentity',
        1 => 'smownerid',
      ),
    ),
     'list_fields_name' => 
    array (
      'parametrizacionesid' => 'parametrizacionesid',
      'Assigned To' => 'assigned_user_id',
    ),
     'list_link_field' => 'parametrizacionesid',
     'search_fields' => 
    array (
      'parametrizacionesid' => 
      array (
        0 => 'parametrizaciones',
        1 => '<entitycolumn>',
      ),
      'Assigned To' => 
      array (
        0 => 'vtiger_crmentity',
        1 => 'assigned_user_id',
      ),
    ),
     'search_fields_name' => 
    array (
      'parametrizacionesid' => 'parametrizacionesid',
      'Assigned To' => 'assigned_user_id',
    ),
     'popup_fields' => 
    array (
      0 => 'parametrizacionesid',
    ),
     'def_basicsearch_col' => 'parametrizacionesid',
     'def_detailview_recname' => 'parametrizacionesid',
     'mandatory_fields' => 
    array (
      0 => 'parametrizacionesid',
      1 => 'assigned_user_id',
    ),
     'default_order_by' => 'parametrizacionesid',
     'default_sort_order' => 'ASC',
     'db' => 
    PearDatabase::__set_state(array(
       'database' => 
      ADODB_mysqli::__set_state(array(
         'databaseType' => 'mysqli',
         'dataProvider' => 'mysql',
         'hasInsertID' => true,
         'hasAffectedRows' => true,
         'metaTablesSQL' => 'SELECT
			TABLE_NAME,
			CASE WHEN TABLE_TYPE = \'VIEW\' THEN \'V\' ELSE \'T\' END
		FROM INFORMATION_SCHEMA.TABLES
		WHERE TABLE_SCHEMA=',
         'metaColumnsSQL' => 'SHOW COLUMNS FROM `%s`',
         'fmtTimeStamp' => '\'Y-m-d H:i:s\'',
         'hasLimit' => true,
         'hasMoveFirst' => true,
         'hasGenID' => true,
         'isoDates' => true,
         'sysDate' => 'CURDATE()',
         'sysTimeStamp' => 'NOW()',
         'hasTransactions' => true,
         'forceNewConnect' => false,
         'poorAffectedRows' => true,
         'clientFlags' => 0,
         'substr' => 'substring',
         'port' => '3306',
         'socket' => '',
         '_bindInputArray' => false,
         'nameQuote' => '`',
         'optionFlags' => 
        array (
          0 => 
          array (
            0 => 5,
            1 => 0,
          ),
          1 => 
          array (
            0 => 8,
            1 => true,
          ),
        ),
         'arrayClass' => 'ADORecordSet_array_mysqli',
         'multiQuery' => false,
         '_genIDSQL' => 'update %s set id=LAST_INSERT_ID(id+1);',
         '_genSeqSQL' => 'create table if not exists %s (id int not null)',
         '_genSeqCountSQL' => 'select count(*) from %s',
         '_genSeq2SQL' => 'insert into %s values (%s)',
         '_dropSeqSQL' => 'drop table if exists %s',
         'database' => 'bps2',
         'host' => 'localhost',
         'user' => 'root',
         'password' => '',
         'debug' => false,
         'maxblobsize' => 262144,
         'concat_operator' => '+',
         'length' => 'length',
         'random' => 'rand()',
         'upperCase' => 'upper',
         'fmtDate' => '\'Y-m-d\'',
         'true' => '1',
         'false' => '0',
         'replaceQuote' => '\\\'',
         'charSet' => false,
         'metaDatabasesSQL' => '',
         'uniqueOrderBy' => false,
         'emptyDate' => '&nbsp;',
         'emptyTimeStamp' => '&nbsp;',
         'lastInsID' => false,
         'hasTop' => false,
         'readOnly' => false,
         'genID' => 0,
         'raiseErrorFn' => false,
         'cacheSecs' => 3600,
         'memCache' => false,
         'memCacheHost' => NULL,
         'memCachePort' => 11211,
         'memCacheCompress' => false,
         'sysUTimeStamp' => false,
         'noNullStrings' => false,
         'numCacheHits' => 0,
         'numCacheMisses' => 0,
         'pageExecuteCountRows' => true,
         'uniqueSort' => false,
         'leftOuter' => false,
         'rightOuter' => false,
         'ansiOuter' => false,
         'autoRollback' => false,
         'fnExecute' => false,
         'fnCacheExecute' => false,
         'blobEncodeType' => false,
         'rsPrefix' => 'ADORecordSet_',
         'autoCommit' => true,
         'transOff' => 0,
         'transCnt' => 0,
         'fetchMode' => false,
         'null2null' => 'null',
         'bulkBind' => false,
         '_oldRaiseFn' => false,
         '_transOK' => NULL,
         '_connectionID' => 
        mysqli::__set_state(array(
           'affected_rows' => NULL,
           'client_info' => NULL,
           'client_version' => NULL,
           'connect_errno' => NULL,
           'connect_error' => NULL,
           'errno' => NULL,
           'error' => NULL,
           'error_list' => NULL,
           'field_count' => NULL,
           'host_info' => NULL,
           'info' => NULL,
           'insert_id' => NULL,
           'server_info' => NULL,
           'server_version' => NULL,
           'sqlstate' => NULL,
           'protocol_version' => NULL,
           'thread_id' => NULL,
           'warning_count' => NULL,
        )),
         '_errorMsg' => false,
         '_errorCode' => false,
         '_queryID' => 
        mysqli_result::__set_state(array(
           'current_field' => NULL,
           'field_count' => NULL,
           'lengths' => NULL,
           'num_rows' => NULL,
           'type' => NULL,
        )),
         '_isPersistentConnection' => true,
         '_evalAll' => false,
         '_affected' => false,
         '_logsql' => false,
         '_transmode' => '',
         'connectionParameters' => 
        array (
        ),
         'databaseName' => 'bps2',
      )),
       'dieOnError' => false,
       'dbType' => 'mysqli',
       'dbHostName' => 'localhost:3306',
       'dbName' => 'bps2',
       'dbOptions' => 
      array (
        'persistent' => true,
        'autofree' => false,
        'debug' => 0,
        'seqname_format' => '%s_seq',
        'portability' => 0,
        'ssl' => false,
      ),
       'userName' => 'root',
       'userPassword' => '',
       'query_time' => 0,
       'log' => 
      Logger::__set_state(array(
         'additive' => true,
         'fqcn' => 'Logger',
         'level' => NULL,
         'name' => 'PearDatabase_',
         'parent' => 
        LoggerRoot::__set_state(array(
           'additive' => true,
           'fqcn' => 'Logger',
           'level' => 
          LoggerLevel::__set_state(array(
             'level' => 10000,
             'levelStr' => 'DEBUG',
             'syslogEquivalent' => 6,
          )),
           'name' => 'root',
           'parent' => NULL,
           'appenders' => 
          array (
            'A1' => 
            LoggerAppenderRollingFile::__set_state(array(
               'maxFileSize' => 10485760,
               'maxBackupIndex' => 10,
               'compress' => false,
               'clearConditional' => true,
               'locking' => true,
               'append' => true,
               'file' => 'logs/vtigercrm.log',
               'fp' => NULL,
               'closed' => false,
               'filter' => NULL,
               'layout' => 
              LoggerLayoutPattern::__set_state(array(
                 'pattern' => '%date %-5level %logger %message%newline',
                 'converterMap' => 
                array (
                  'c' => 'LoggerPatternConverterLogger',
                  'lo' => 'LoggerPatternConverterLogger',
                  'logger' => 'LoggerPatternConverterLogger',
                  'C' => 'LoggerPatternConverterClass',
                  'class' => 'LoggerPatternConverterClass',
                  'cookie' => 'LoggerPatternConverterCookie',
                  'd' => 'LoggerPatternConverterDate',
                  'date' => 'LoggerPatternConverterDate',
                  'e' => 'LoggerPatternConverterEnvironment',
                  'env' => 'LoggerPatternConverterEnvironment',
                  'ex' => 'LoggerPatternConverterThrowable',
                  'exception' => 'LoggerPatternConverterThrowable',
                  'throwable' => 'LoggerPatternConverterThrowable',
                  'F' => 'LoggerPatternConverterFile',
                  'file' => 'LoggerPatternConverterFile',
                  'l' => 'LoggerPatternConverterLocation',
                  'location' => 'LoggerPatternConverterLocation',
                  'L' => 'LoggerPatternConverterLine',
                  'line' => 'LoggerPatternConverterLine',
                  'm' => 'LoggerPatternConverterMessage',
                  'msg' => 'LoggerPatternConverterMessage',
                  'message' => 'LoggerPatternConverterMessage',
                  'M' => 'LoggerPatternConverterMethod',
                  'method' => 'LoggerPatternConverterMethod',
                  'n' => 'LoggerPatternConverterNewLine',
                  'newline' => 'LoggerPatternConverterNewLine',
                  'p' => 'LoggerPatternConverterLevel',
                  'le' => 'LoggerPatternConverterLevel',
                  'level' => 'LoggerPatternConverterLevel',
                  'r' => 'LoggerPatternConverterRelative',
                  'relative' => 'LoggerPatternConverterRelative',
                  'req' => 'LoggerPatternConverterRequest',
                  'request' => 'LoggerPatternConverterRequest',
                  's' => 'LoggerPatternConverterServer',
                  'server' => 'LoggerPatternConverterServer',
                  'ses' => 'LoggerPatternConverterSession',
                  'session' => 'LoggerPatternConverterSession',
                  'sid' => 'LoggerPatternConverterSessionID',
                  'sessionid' => 'LoggerPatternConverterSessionID',
                  't' => 'LoggerPatternConverterProcess',
                  'pid' => 'LoggerPatternConverterProcess',
                  'process' => 'LoggerPatternConverterProcess',
                  'x' => 'LoggerPatternConverterNDC',
                  'ndc' => 'LoggerPatternConverterNDC',
                  'X' => 'LoggerPatternConverterMDC',
                  'mdc' => 'LoggerPatternConverterMDC',
                ),
                 'head' => 
                LoggerPatternConverterDate::__set_state(array(
                   'format' => 'c',
                   'specials' => 
                  array (
                    'ISO8601' => 'c',
                    'ABSOLUTE' => 'H:i:s',
                    'DATE' => 'd M Y H:i:s.u',
                  ),
                   'useLocalDate' => false,
                   'next' => 
                  LoggerPatternConverterLiteral::__set_state(array(
                     'literalValue' => ' ',
                     'next' => 
                    LoggerPatternConverterLevel::__set_state(array(
                       'next' => 
                      LoggerPatternConverterLiteral::__set_state(array(
                         'literalValue' => ' ',
                         'next' => 
                        LoggerPatternConverterLogger::__set_state(array(
                           'length' => NULL,
                           'cache' => 
                          array (
                            'VT' => 'VT',
                            'user' => 'user',
                          ),
                           'next' => 
                          LoggerPatternConverterLiteral::__set_state(array(
                             'literalValue' => ' ',
                             'next' => 
                            LoggerPatternConverterMessage::__set_state(array(
                               'next' => 
                              LoggerPatternConverterNewLine::__set_state(array(
                                 'next' => NULL,
                                 'formattingInfo' => 
                                LoggerFormattingInfo::__set_state(array(
                                   'min' => 0,
                                   'max' => 9223372036854775807,
                                   'padLeft' => true,
                                   'trimLeft' => false,
                                )),
                                 'option' => '',
                              )),
                               'formattingInfo' => 
                              LoggerFormattingInfo::__set_state(array(
                                 'min' => 0,
                                 'max' => 9223372036854775807,
                                 'padLeft' => true,
                                 'trimLeft' => false,
                              )),
                               'option' => '',
                            )),
                             'formattingInfo' => NULL,
                             'option' => NULL,
                          )),
                           'formattingInfo' => 
                          LoggerFormattingInfo::__set_state(array(
                             'min' => 0,
                             'max' => 9223372036854775807,
                             'padLeft' => true,
                             'trimLeft' => false,
                          )),
                           'option' => '',
                        )),
                         'formattingInfo' => NULL,
                         'option' => NULL,
                      )),
                       'formattingInfo' => 
                      LoggerFormattingInfo::__set_state(array(
                         'min' => 5,
                         'max' => 9223372036854775807,
                         'padLeft' => false,
                         'trimLeft' => false,
                      )),
                       'option' => '',
                    )),
                     'formattingInfo' => NULL,
                     'option' => NULL,
                  )),
                   'formattingInfo' => 
                  LoggerFormattingInfo::__set_state(array(
                     'min' => 0,
                     'max' => 9223372036854775807,
                     'padLeft' => true,
                     'trimLeft' => false,
                  )),
                   'option' => '',
                )),
              )),
               'name' => 'A1',
               'threshold' => NULL,
               'requiresLayout' => true,
            )),
          ),
        )),
         'appenders' => 
        array (
        ),
      )),
       'lastmysqlrow' => -1,
       'enableSQLlog' => false,
       'continueInstallOnError' => true,
       'avoidPreparedSql' => false,
       'isdb_default_utf8_charset' => true,
       'req_flist' => NULL,
       'logSqlTimingID' => false,
    )),
     'log' => 
    Logger::__set_state(array(
       'additive' => true,
       'fqcn' => 'Logger',
       'level' => NULL,
       'name' => 'VT',
       'parent' => 
      LoggerRoot::__set_state(array(
         'additive' => true,
         'fqcn' => 'Logger',
         'level' => 
        LoggerLevel::__set_state(array(
           'level' => 10000,
           'levelStr' => 'DEBUG',
           'syslogEquivalent' => 6,
        )),
         'name' => 'root',
         'parent' => NULL,
         'appenders' => 
        array (
          'A1' => 
          LoggerAppenderRollingFile::__set_state(array(
             'maxFileSize' => 10485760,
             'maxBackupIndex' => 10,
             'compress' => false,
             'clearConditional' => true,
             'locking' => true,
             'append' => true,
             'file' => 'logs/vtigercrm.log',
             'fp' => NULL,
             'closed' => false,
             'filter' => NULL,
             'layout' => 
            LoggerLayoutPattern::__set_state(array(
               'pattern' => '%date %-5level %logger %message%newline',
               'converterMap' => 
              array (
                'c' => 'LoggerPatternConverterLogger',
                'lo' => 'LoggerPatternConverterLogger',
                'logger' => 'LoggerPatternConverterLogger',
                'C' => 'LoggerPatternConverterClass',
                'class' => 'LoggerPatternConverterClass',
                'cookie' => 'LoggerPatternConverterCookie',
                'd' => 'LoggerPatternConverterDate',
                'date' => 'LoggerPatternConverterDate',
                'e' => 'LoggerPatternConverterEnvironment',
                'env' => 'LoggerPatternConverterEnvironment',
                'ex' => 'LoggerPatternConverterThrowable',
                'exception' => 'LoggerPatternConverterThrowable',
                'throwable' => 'LoggerPatternConverterThrowable',
                'F' => 'LoggerPatternConverterFile',
                'file' => 'LoggerPatternConverterFile',
                'l' => 'LoggerPatternConverterLocation',
                'location' => 'LoggerPatternConverterLocation',
                'L' => 'LoggerPatternConverterLine',
                'line' => 'LoggerPatternConverterLine',
                'm' => 'LoggerPatternConverterMessage',
                'msg' => 'LoggerPatternConverterMessage',
                'message' => 'LoggerPatternConverterMessage',
                'M' => 'LoggerPatternConverterMethod',
                'method' => 'LoggerPatternConverterMethod',
                'n' => 'LoggerPatternConverterNewLine',
                'newline' => 'LoggerPatternConverterNewLine',
                'p' => 'LoggerPatternConverterLevel',
                'le' => 'LoggerPatternConverterLevel',
                'level' => 'LoggerPatternConverterLevel',
                'r' => 'LoggerPatternConverterRelative',
                'relative' => 'LoggerPatternConverterRelative',
                'req' => 'LoggerPatternConverterRequest',
                'request' => 'LoggerPatternConverterRequest',
                's' => 'LoggerPatternConverterServer',
                'server' => 'LoggerPatternConverterServer',
                'ses' => 'LoggerPatternConverterSession',
                'session' => 'LoggerPatternConverterSession',
                'sid' => 'LoggerPatternConverterSessionID',
                'sessionid' => 'LoggerPatternConverterSessionID',
                't' => 'LoggerPatternConverterProcess',
                'pid' => 'LoggerPatternConverterProcess',
                'process' => 'LoggerPatternConverterProcess',
                'x' => 'LoggerPatternConverterNDC',
                'ndc' => 'LoggerPatternConverterNDC',
                'X' => 'LoggerPatternConverterMDC',
                'mdc' => 'LoggerPatternConverterMDC',
              ),
               'head' => 
              LoggerPatternConverterDate::__set_state(array(
                 'format' => 'c',
                 'specials' => 
                array (
                  'ISO8601' => 'c',
                  'ABSOLUTE' => 'H:i:s',
                  'DATE' => 'd M Y H:i:s.u',
                ),
                 'useLocalDate' => false,
                 'next' => 
                LoggerPatternConverterLiteral::__set_state(array(
                   'literalValue' => ' ',
                   'next' => 
                  LoggerPatternConverterLevel::__set_state(array(
                     'next' => 
                    LoggerPatternConverterLiteral::__set_state(array(
                       'literalValue' => ' ',
                       'next' => 
                      LoggerPatternConverterLogger::__set_state(array(
                         'length' => NULL,
                         'cache' => 
                        array (
                          'VT' => 'VT',
                          'user' => 'user',
                        ),
                         'next' => 
                        LoggerPatternConverterLiteral::__set_state(array(
                           'literalValue' => ' ',
                           'next' => 
                          LoggerPatternConverterMessage::__set_state(array(
                             'next' => 
                            LoggerPatternConverterNewLine::__set_state(array(
                               'next' => NULL,
                               'formattingInfo' => 
                              LoggerFormattingInfo::__set_state(array(
                                 'min' => 0,
                                 'max' => 9223372036854775807,
                                 'padLeft' => true,
                                 'trimLeft' => false,
                              )),
                               'option' => '',
                            )),
                             'formattingInfo' => 
                            LoggerFormattingInfo::__set_state(array(
                               'min' => 0,
                               'max' => 9223372036854775807,
                               'padLeft' => true,
                               'trimLeft' => false,
                            )),
                             'option' => '',
                          )),
                           'formattingInfo' => NULL,
                           'option' => NULL,
                        )),
                         'formattingInfo' => 
                        LoggerFormattingInfo::__set_state(array(
                           'min' => 0,
                           'max' => 9223372036854775807,
                           'padLeft' => true,
                           'trimLeft' => false,
                        )),
                         'option' => '',
                      )),
                       'formattingInfo' => NULL,
                       'option' => NULL,
                    )),
                     'formattingInfo' => 
                    LoggerFormattingInfo::__set_state(array(
                       'min' => 5,
                       'max' => 9223372036854775807,
                       'padLeft' => false,
                       'trimLeft' => false,
                    )),
                     'option' => '',
                  )),
                   'formattingInfo' => NULL,
                   'option' => NULL,
                )),
                 'formattingInfo' => 
                LoggerFormattingInfo::__set_state(array(
                   'min' => 0,
                   'max' => 9223372036854775807,
                   'padLeft' => true,
                   'trimLeft' => false,
                )),
                 'option' => '',
              )),
            )),
             'name' => 'A1',
             'threshold' => NULL,
             'requiresLayout' => true,
          )),
        ),
      )),
       'appenders' => 
      array (
      ),
    )),
     'column_fields' => 
    TrackableObject::__set_state(array(
       'storage' => 
      array (
        'pt_origen' => 'Leonardo rivero',
        'pt_tema' => 'Trabajadores',
        'pt_grupo' => '64',
        'pt_temavtiger' => '768',
        'CreatedTime' => '2022-12-06 11:39:32',
        'ModifiedTime' => '2022-12-08 15:42:19',
        'pt_motivo' => 'Vtiger EMPRESA (corto)',
        'tags' => '',
        'record_id' => '1406',
        'record_module' => 'Parametrizaciones',
        'id' => '1406',
      ),
       'trackingEnabled' => true,
       'tracking' => true,
       'changed' => 
      array (
        0 => 'id',
      ),
    )),
     'IsCustomModule' => true,
     'sortby_fields' => 
    array (
    ),
     'required_fields' => 
    array (
      'assigned_user_id' => 1,
    ),
     'special_functions' => 
    array (
      0 => 'set_import_assigned_user',
    ),
     'ownedby' => NULL,
     'recordSource' => 'CRM',
     '__inactive_fields_filtered' => false,
     'moduleName' => 'Parametrizaciones',
     'id' => '1406',
  )),
))
rs => false
rs => array (
  0 => '1406',
  'crmid' => '1406',
)
rs => array (
  0 => '1406',
  'crmid' => '1406',
)
rs => false
rs => false
rs => array (
  0 => '1406',
  'crmid' => '1406',
)
